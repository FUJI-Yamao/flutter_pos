/*
 * (C)2023 TERAOKA SEIKO Co., Ltd./株式会社寺岡精工
 * CONFIDENTIAL/社外秘
 * 無断開示・無断複製禁止
 */
 
import 'package:flutter_pos/app/common/environment.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:flutter/services.dart' show rootBundle;
import 'package:flutter/cupertino.dart';
import 'package:path_provider/path_provider.dart';
import 'package:path_provider_platform_interface/path_provider_platform_interface.dart';
import 'package:path/path.dart';
import 'dart:io';
import 'unitTestParts.dart';

import '../../../../lib/app/common/cls_conf/configJsonFile.dart';
import '../../../../lib/app/common/cls_conf/qcashierJsonFile.dart';

late QcashierJsonFile qcashier;

void main(){
  qcashierJsonFile_test5();
}

void qcashierJsonFile_test5()
{
  TestWidgetsFlutterBinding.ensureInitialized();
  const String confPath = "conf/";
  const String testDir = "test_assets";
  const String fileName = "qcashier.json";
  const String section = "common";
  const String key = "item_disp";
  const defaultData = 1;
  const testData1  =  987654321;    // テストデータ1
  const testData1s = "987654321";
  const testData2  =  192834675;    // テストデータ2
  const testData2s = "192834675";
  const testData3  =  129834765;    // テストデータ3
  const testData3s = "129834765";

  group('QcashierJsonFile',()
  {
    setUp(() async{
      PathProviderPlatform.instance = MockPathProviderPlatform();
      // 当該JSONファイルをデフォルトに戻す。
      await QcashierJsonFile().setDefault();
    });

    // 各テストの事後処理
    tearDown(() async{
      // 当該JSONファイルをデフォルトに戻す。
      await QcashierJsonFile().setDefault();
    });

    test('04007_element_check_03984', () async {
      print("\n********** テスト実行：04007_element_check_03984 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen124.line4;
      print(qcashier.screen124.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen124.line4 = testData1s;
      print(qcashier.screen124.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen124.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen124.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen124.line4 = testData2s;
      print(qcashier.screen124.line4);
      expect(qcashier.screen124.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen124.line4 = defalut;
      print(qcashier.screen124.line4);
      expect(qcashier.screen124.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04007_element_check_03984 **********\n\n");
    });

    test('04008_element_check_03985', () async {
      print("\n********** テスト実行：04008_element_check_03985 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen124.line1_ex;
      print(qcashier.screen124.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen124.line1_ex = testData1s;
      print(qcashier.screen124.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen124.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen124.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen124.line1_ex = testData2s;
      print(qcashier.screen124.line1_ex);
      expect(qcashier.screen124.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen124.line1_ex = defalut;
      print(qcashier.screen124.line1_ex);
      expect(qcashier.screen124.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04008_element_check_03985 **********\n\n");
    });

    test('04009_element_check_03986', () async {
      print("\n********** テスト実行：04009_element_check_03986 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen124.line2_ex;
      print(qcashier.screen124.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen124.line2_ex = testData1s;
      print(qcashier.screen124.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen124.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen124.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen124.line2_ex = testData2s;
      print(qcashier.screen124.line2_ex);
      expect(qcashier.screen124.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen124.line2_ex = defalut;
      print(qcashier.screen124.line2_ex);
      expect(qcashier.screen124.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04009_element_check_03986 **********\n\n");
    });

    test('04010_element_check_03987', () async {
      print("\n********** テスト実行：04010_element_check_03987 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen124.line3_ex;
      print(qcashier.screen124.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen124.line3_ex = testData1s;
      print(qcashier.screen124.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen124.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen124.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen124.line3_ex = testData2s;
      print(qcashier.screen124.line3_ex);
      expect(qcashier.screen124.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen124.line3_ex = defalut;
      print(qcashier.screen124.line3_ex);
      expect(qcashier.screen124.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04010_element_check_03987 **********\n\n");
    });

    test('04011_element_check_03988', () async {
      print("\n********** テスト実行：04011_element_check_03988 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen124.line4_ex;
      print(qcashier.screen124.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen124.line4_ex = testData1s;
      print(qcashier.screen124.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen124.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen124.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen124.line4_ex = testData2s;
      print(qcashier.screen124.line4_ex);
      expect(qcashier.screen124.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen124.line4_ex = defalut;
      print(qcashier.screen124.line4_ex);
      expect(qcashier.screen124.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04011_element_check_03988 **********\n\n");
    });

    test('04012_element_check_03989', () async {
      print("\n********** テスト実行：04012_element_check_03989 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen124.sound_led1;
      print(qcashier.screen124.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen124.sound_led1 = testData1;
      print(qcashier.screen124.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen124.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen124.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen124.sound_led1 = testData2;
      print(qcashier.screen124.sound_led1);
      expect(qcashier.screen124.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen124.sound_led1 = defalut;
      print(qcashier.screen124.sound_led1);
      expect(qcashier.screen124.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04012_element_check_03989 **********\n\n");
    });

    test('04013_element_check_03990', () async {
      print("\n********** テスト実行：04013_element_check_03990 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen124.sound_led2;
      print(qcashier.screen124.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen124.sound_led2 = testData1s;
      print(qcashier.screen124.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen124.sound_led2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen124.sound_led2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen124.sound_led2 = testData2s;
      print(qcashier.screen124.sound_led2);
      expect(qcashier.screen124.sound_led2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.sound_led2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen124.sound_led2 = defalut;
      print(qcashier.screen124.sound_led2);
      expect(qcashier.screen124.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04013_element_check_03990 **********\n\n");
    });

    test('04014_element_check_03991', () async {
      print("\n********** テスト実行：04014_element_check_03991 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen124.sound_led3;
      print(qcashier.screen124.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen124.sound_led3 = testData1s;
      print(qcashier.screen124.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen124.sound_led3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen124.sound_led3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen124.sound_led3 = testData2s;
      print(qcashier.screen124.sound_led3);
      expect(qcashier.screen124.sound_led3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.sound_led3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen124.sound_led3 = defalut;
      print(qcashier.screen124.sound_led3);
      expect(qcashier.screen124.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen124.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04014_element_check_03991 **********\n\n");
    });

    test('04015_element_check_03992', () async {
      print("\n********** テスト実行：04015_element_check_03992 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.title;
      print(qcashier.screen125.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.title = testData1s;
      print(qcashier.screen125.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.title = testData2s;
      print(qcashier.screen125.title);
      expect(qcashier.screen125.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.title = defalut;
      print(qcashier.screen125.title);
      expect(qcashier.screen125.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04015_element_check_03992 **********\n\n");
    });

    test('04016_element_check_03993', () async {
      print("\n********** テスト実行：04016_element_check_03993 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.msg1;
      print(qcashier.screen125.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.msg1 = testData1s;
      print(qcashier.screen125.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.msg1 = testData2s;
      print(qcashier.screen125.msg1);
      expect(qcashier.screen125.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.msg1 = defalut;
      print(qcashier.screen125.msg1);
      expect(qcashier.screen125.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04016_element_check_03993 **********\n\n");
    });

    test('04017_element_check_03994', () async {
      print("\n********** テスト実行：04017_element_check_03994 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.msg2;
      print(qcashier.screen125.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.msg2 = testData1s;
      print(qcashier.screen125.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.msg2 = testData2s;
      print(qcashier.screen125.msg2);
      expect(qcashier.screen125.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.msg2 = defalut;
      print(qcashier.screen125.msg2);
      expect(qcashier.screen125.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04017_element_check_03994 **********\n\n");
    });

    test('04018_element_check_03995', () async {
      print("\n********** テスト実行：04018_element_check_03995 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.msg1_size;
      print(qcashier.screen125.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.msg1_size = testData1;
      print(qcashier.screen125.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.msg1_size = testData2;
      print(qcashier.screen125.msg1_size);
      expect(qcashier.screen125.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.msg1_size = defalut;
      print(qcashier.screen125.msg1_size);
      expect(qcashier.screen125.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04018_element_check_03995 **********\n\n");
    });

    test('04019_element_check_03996', () async {
      print("\n********** テスト実行：04019_element_check_03996 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.msg2_size;
      print(qcashier.screen125.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.msg2_size = testData1s;
      print(qcashier.screen125.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.msg2_size == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.msg2_size == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.msg2_size = testData2s;
      print(qcashier.screen125.msg2_size);
      expect(qcashier.screen125.msg2_size == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.msg2_size == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.msg2_size = defalut;
      print(qcashier.screen125.msg2_size);
      expect(qcashier.screen125.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04019_element_check_03996 **********\n\n");
    });

    test('04020_element_check_03997', () async {
      print("\n********** テスト実行：04020_element_check_03997 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.sound1;
      print(qcashier.screen125.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.sound1 = testData1;
      print(qcashier.screen125.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.sound1 = testData2;
      print(qcashier.screen125.sound1);
      expect(qcashier.screen125.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.sound1 = defalut;
      print(qcashier.screen125.sound1);
      expect(qcashier.screen125.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04020_element_check_03997 **********\n\n");
    });

    test('04021_element_check_03998', () async {
      print("\n********** テスト実行：04021_element_check_03998 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.sound2;
      print(qcashier.screen125.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.sound2 = testData1;
      print(qcashier.screen125.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.sound2 = testData2;
      print(qcashier.screen125.sound2);
      expect(qcashier.screen125.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.sound2 = defalut;
      print(qcashier.screen125.sound2);
      expect(qcashier.screen125.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04021_element_check_03998 **********\n\n");
    });

    test('04022_element_check_03999', () async {
      print("\n********** テスト実行：04022_element_check_03999 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.sound3;
      print(qcashier.screen125.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.sound3 = testData1;
      print(qcashier.screen125.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.sound3 = testData2;
      print(qcashier.screen125.sound3);
      expect(qcashier.screen125.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.sound3 = defalut;
      print(qcashier.screen125.sound3);
      expect(qcashier.screen125.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04022_element_check_03999 **********\n\n");
    });

    test('04023_element_check_04000', () async {
      print("\n********** テスト実行：04023_element_check_04000 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.snd_timer;
      print(qcashier.screen125.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.snd_timer = testData1;
      print(qcashier.screen125.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.snd_timer = testData2;
      print(qcashier.screen125.snd_timer);
      expect(qcashier.screen125.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.snd_timer = defalut;
      print(qcashier.screen125.snd_timer);
      expect(qcashier.screen125.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04023_element_check_04000 **********\n\n");
    });

    test('04024_element_check_04001', () async {
      print("\n********** テスト実行：04024_element_check_04001 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.timer1;
      print(qcashier.screen125.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.timer1 = testData1;
      print(qcashier.screen125.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.timer1 = testData2;
      print(qcashier.screen125.timer1);
      expect(qcashier.screen125.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.timer1 = defalut;
      print(qcashier.screen125.timer1);
      expect(qcashier.screen125.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04024_element_check_04001 **********\n\n");
    });

    test('04025_element_check_04002', () async {
      print("\n********** テスト実行：04025_element_check_04002 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.timer2;
      print(qcashier.screen125.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.timer2 = testData1;
      print(qcashier.screen125.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.timer2 = testData2;
      print(qcashier.screen125.timer2);
      expect(qcashier.screen125.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.timer2 = defalut;
      print(qcashier.screen125.timer2);
      expect(qcashier.screen125.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04025_element_check_04002 **********\n\n");
    });

    test('04026_element_check_04003', () async {
      print("\n********** テスト実行：04026_element_check_04003 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.timer3;
      print(qcashier.screen125.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.timer3 = testData1;
      print(qcashier.screen125.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.timer3 = testData2;
      print(qcashier.screen125.timer3);
      expect(qcashier.screen125.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.timer3 = defalut;
      print(qcashier.screen125.timer3);
      expect(qcashier.screen125.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04026_element_check_04003 **********\n\n");
    });

    test('04027_element_check_04004', () async {
      print("\n********** テスト実行：04027_element_check_04004 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.dsp_flg1;
      print(qcashier.screen125.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.dsp_flg1 = testData1;
      print(qcashier.screen125.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.dsp_flg1 = testData2;
      print(qcashier.screen125.dsp_flg1);
      expect(qcashier.screen125.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.dsp_flg1 = defalut;
      print(qcashier.screen125.dsp_flg1);
      expect(qcashier.screen125.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04027_element_check_04004 **********\n\n");
    });

    test('04028_element_check_04005', () async {
      print("\n********** テスト実行：04028_element_check_04005 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.dsp_flg2;
      print(qcashier.screen125.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.dsp_flg2 = testData1;
      print(qcashier.screen125.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.dsp_flg2 = testData2;
      print(qcashier.screen125.dsp_flg2);
      expect(qcashier.screen125.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.dsp_flg2 = defalut;
      print(qcashier.screen125.dsp_flg2);
      expect(qcashier.screen125.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04028_element_check_04005 **********\n\n");
    });

    test('04029_element_check_04006', () async {
      print("\n********** テスト実行：04029_element_check_04006 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.movie01_ext;
      print(qcashier.screen125.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.movie01_ext = testData1;
      print(qcashier.screen125.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.movie01_ext = testData2;
      print(qcashier.screen125.movie01_ext);
      expect(qcashier.screen125.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.movie01_ext = defalut;
      print(qcashier.screen125.movie01_ext);
      expect(qcashier.screen125.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04029_element_check_04006 **********\n\n");
    });

    test('04030_element_check_04007', () async {
      print("\n********** テスト実行：04030_element_check_04007 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.movie02_ext;
      print(qcashier.screen125.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.movie02_ext = testData1;
      print(qcashier.screen125.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.movie02_ext = testData2;
      print(qcashier.screen125.movie02_ext);
      expect(qcashier.screen125.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.movie02_ext = defalut;
      print(qcashier.screen125.movie02_ext);
      expect(qcashier.screen125.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04030_element_check_04007 **********\n\n");
    });

    test('04031_element_check_04008', () async {
      print("\n********** テスト実行：04031_element_check_04008 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.movie03_ext;
      print(qcashier.screen125.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.movie03_ext = testData1;
      print(qcashier.screen125.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.movie03_ext = testData2;
      print(qcashier.screen125.movie03_ext);
      expect(qcashier.screen125.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.movie03_ext = defalut;
      print(qcashier.screen125.movie03_ext);
      expect(qcashier.screen125.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04031_element_check_04008 **********\n\n");
    });

    test('04032_element_check_04009', () async {
      print("\n********** テスト実行：04032_element_check_04009 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.movie04_ext;
      print(qcashier.screen125.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.movie04_ext = testData1;
      print(qcashier.screen125.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.movie04_ext = testData2;
      print(qcashier.screen125.movie04_ext);
      expect(qcashier.screen125.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.movie04_ext = defalut;
      print(qcashier.screen125.movie04_ext);
      expect(qcashier.screen125.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04032_element_check_04009 **********\n\n");
    });

    test('04033_element_check_04010', () async {
      print("\n********** テスト実行：04033_element_check_04010 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.line_title;
      print(qcashier.screen125.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.line_title = testData1s;
      print(qcashier.screen125.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.line_title = testData2s;
      print(qcashier.screen125.line_title);
      expect(qcashier.screen125.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.line_title = defalut;
      print(qcashier.screen125.line_title);
      expect(qcashier.screen125.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04033_element_check_04010 **********\n\n");
    });

    test('04034_element_check_04011', () async {
      print("\n********** テスト実行：04034_element_check_04011 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.line_title_ex;
      print(qcashier.screen125.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.line_title_ex = testData1s;
      print(qcashier.screen125.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.line_title_ex = testData2s;
      print(qcashier.screen125.line_title_ex);
      expect(qcashier.screen125.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.line_title_ex = defalut;
      print(qcashier.screen125.line_title_ex);
      expect(qcashier.screen125.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04034_element_check_04011 **********\n\n");
    });

    test('04035_element_check_04012', () async {
      print("\n********** テスト実行：04035_element_check_04012 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.line1;
      print(qcashier.screen125.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.line1 = testData1s;
      print(qcashier.screen125.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.line1 = testData2s;
      print(qcashier.screen125.line1);
      expect(qcashier.screen125.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.line1 = defalut;
      print(qcashier.screen125.line1);
      expect(qcashier.screen125.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04035_element_check_04012 **********\n\n");
    });

    test('04036_element_check_04013', () async {
      print("\n********** テスト実行：04036_element_check_04013 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.line2;
      print(qcashier.screen125.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.line2 = testData1s;
      print(qcashier.screen125.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.line2 = testData2s;
      print(qcashier.screen125.line2);
      expect(qcashier.screen125.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.line2 = defalut;
      print(qcashier.screen125.line2);
      expect(qcashier.screen125.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04036_element_check_04013 **********\n\n");
    });

    test('04037_element_check_04014', () async {
      print("\n********** テスト実行：04037_element_check_04014 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.line3;
      print(qcashier.screen125.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.line3 = testData1s;
      print(qcashier.screen125.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.line3 = testData2s;
      print(qcashier.screen125.line3);
      expect(qcashier.screen125.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.line3 = defalut;
      print(qcashier.screen125.line3);
      expect(qcashier.screen125.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04037_element_check_04014 **********\n\n");
    });

    test('04038_element_check_04015', () async {
      print("\n********** テスト実行：04038_element_check_04015 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.line4;
      print(qcashier.screen125.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.line4 = testData1s;
      print(qcashier.screen125.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.line4 = testData2s;
      print(qcashier.screen125.line4);
      expect(qcashier.screen125.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.line4 = defalut;
      print(qcashier.screen125.line4);
      expect(qcashier.screen125.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04038_element_check_04015 **********\n\n");
    });

    test('04039_element_check_04016', () async {
      print("\n********** テスト実行：04039_element_check_04016 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.line1_ex;
      print(qcashier.screen125.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.line1_ex = testData1s;
      print(qcashier.screen125.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.line1_ex = testData2s;
      print(qcashier.screen125.line1_ex);
      expect(qcashier.screen125.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.line1_ex = defalut;
      print(qcashier.screen125.line1_ex);
      expect(qcashier.screen125.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04039_element_check_04016 **********\n\n");
    });

    test('04040_element_check_04017', () async {
      print("\n********** テスト実行：04040_element_check_04017 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.line2_ex;
      print(qcashier.screen125.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.line2_ex = testData1s;
      print(qcashier.screen125.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.line2_ex = testData2s;
      print(qcashier.screen125.line2_ex);
      expect(qcashier.screen125.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.line2_ex = defalut;
      print(qcashier.screen125.line2_ex);
      expect(qcashier.screen125.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04040_element_check_04017 **********\n\n");
    });

    test('04041_element_check_04018', () async {
      print("\n********** テスト実行：04041_element_check_04018 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.line3_ex;
      print(qcashier.screen125.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.line3_ex = testData1s;
      print(qcashier.screen125.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.line3_ex = testData2s;
      print(qcashier.screen125.line3_ex);
      expect(qcashier.screen125.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.line3_ex = defalut;
      print(qcashier.screen125.line3_ex);
      expect(qcashier.screen125.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04041_element_check_04018 **********\n\n");
    });

    test('04042_element_check_04019', () async {
      print("\n********** テスト実行：04042_element_check_04019 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.line4_ex;
      print(qcashier.screen125.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.line4_ex = testData1s;
      print(qcashier.screen125.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.line4_ex = testData2s;
      print(qcashier.screen125.line4_ex);
      expect(qcashier.screen125.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.line4_ex = defalut;
      print(qcashier.screen125.line4_ex);
      expect(qcashier.screen125.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04042_element_check_04019 **********\n\n");
    });

    test('04043_element_check_04020', () async {
      print("\n********** テスト実行：04043_element_check_04020 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.sound_led1;
      print(qcashier.screen125.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.sound_led1 = testData1;
      print(qcashier.screen125.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.sound_led1 = testData2;
      print(qcashier.screen125.sound_led1);
      expect(qcashier.screen125.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.sound_led1 = defalut;
      print(qcashier.screen125.sound_led1);
      expect(qcashier.screen125.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04043_element_check_04020 **********\n\n");
    });

    test('04044_element_check_04021', () async {
      print("\n********** テスト実行：04044_element_check_04021 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.sound_led2;
      print(qcashier.screen125.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.sound_led2 = testData1;
      print(qcashier.screen125.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.sound_led2 = testData2;
      print(qcashier.screen125.sound_led2);
      expect(qcashier.screen125.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.sound_led2 = defalut;
      print(qcashier.screen125.sound_led2);
      expect(qcashier.screen125.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04044_element_check_04021 **********\n\n");
    });

    test('04045_element_check_04022', () async {
      print("\n********** テスト実行：04045_element_check_04022 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen125.sound_led3;
      print(qcashier.screen125.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen125.sound_led3 = testData1;
      print(qcashier.screen125.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen125.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen125.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen125.sound_led3 = testData2;
      print(qcashier.screen125.sound_led3);
      expect(qcashier.screen125.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen125.sound_led3 = defalut;
      print(qcashier.screen125.sound_led3);
      expect(qcashier.screen125.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen125.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04045_element_check_04022 **********\n\n");
    });

    test('04046_element_check_04023', () async {
      print("\n********** テスト実行：04046_element_check_04023 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.title;
      print(qcashier.screen126.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.title = testData1s;
      print(qcashier.screen126.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.title = testData2s;
      print(qcashier.screen126.title);
      expect(qcashier.screen126.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.title = defalut;
      print(qcashier.screen126.title);
      expect(qcashier.screen126.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04046_element_check_04023 **********\n\n");
    });

    test('04047_element_check_04024', () async {
      print("\n********** テスト実行：04047_element_check_04024 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.msg1;
      print(qcashier.screen126.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.msg1 = testData1s;
      print(qcashier.screen126.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.msg1 = testData2s;
      print(qcashier.screen126.msg1);
      expect(qcashier.screen126.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.msg1 = defalut;
      print(qcashier.screen126.msg1);
      expect(qcashier.screen126.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04047_element_check_04024 **********\n\n");
    });

    test('04048_element_check_04025', () async {
      print("\n********** テスト実行：04048_element_check_04025 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.msg2;
      print(qcashier.screen126.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.msg2 = testData1s;
      print(qcashier.screen126.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.msg2 = testData2s;
      print(qcashier.screen126.msg2);
      expect(qcashier.screen126.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.msg2 = defalut;
      print(qcashier.screen126.msg2);
      expect(qcashier.screen126.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04048_element_check_04025 **********\n\n");
    });

    test('04049_element_check_04026', () async {
      print("\n********** テスト実行：04049_element_check_04026 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.msg1_size;
      print(qcashier.screen126.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.msg1_size = testData1;
      print(qcashier.screen126.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.msg1_size = testData2;
      print(qcashier.screen126.msg1_size);
      expect(qcashier.screen126.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.msg1_size = defalut;
      print(qcashier.screen126.msg1_size);
      expect(qcashier.screen126.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04049_element_check_04026 **********\n\n");
    });

    test('04050_element_check_04027', () async {
      print("\n********** テスト実行：04050_element_check_04027 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.msg2_size;
      print(qcashier.screen126.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.msg2_size = testData1s;
      print(qcashier.screen126.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.msg2_size == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.msg2_size == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.msg2_size = testData2s;
      print(qcashier.screen126.msg2_size);
      expect(qcashier.screen126.msg2_size == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.msg2_size == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.msg2_size = defalut;
      print(qcashier.screen126.msg2_size);
      expect(qcashier.screen126.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04050_element_check_04027 **********\n\n");
    });

    test('04051_element_check_04028', () async {
      print("\n********** テスト実行：04051_element_check_04028 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.sound1;
      print(qcashier.screen126.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.sound1 = testData1;
      print(qcashier.screen126.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.sound1 = testData2;
      print(qcashier.screen126.sound1);
      expect(qcashier.screen126.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.sound1 = defalut;
      print(qcashier.screen126.sound1);
      expect(qcashier.screen126.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04051_element_check_04028 **********\n\n");
    });

    test('04052_element_check_04029', () async {
      print("\n********** テスト実行：04052_element_check_04029 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.sound2;
      print(qcashier.screen126.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.sound2 = testData1;
      print(qcashier.screen126.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.sound2 = testData2;
      print(qcashier.screen126.sound2);
      expect(qcashier.screen126.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.sound2 = defalut;
      print(qcashier.screen126.sound2);
      expect(qcashier.screen126.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04052_element_check_04029 **********\n\n");
    });

    test('04053_element_check_04030', () async {
      print("\n********** テスト実行：04053_element_check_04030 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.sound3;
      print(qcashier.screen126.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.sound3 = testData1;
      print(qcashier.screen126.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.sound3 = testData2;
      print(qcashier.screen126.sound3);
      expect(qcashier.screen126.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.sound3 = defalut;
      print(qcashier.screen126.sound3);
      expect(qcashier.screen126.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04053_element_check_04030 **********\n\n");
    });

    test('04054_element_check_04031', () async {
      print("\n********** テスト実行：04054_element_check_04031 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.snd_timer;
      print(qcashier.screen126.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.snd_timer = testData1;
      print(qcashier.screen126.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.snd_timer = testData2;
      print(qcashier.screen126.snd_timer);
      expect(qcashier.screen126.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.snd_timer = defalut;
      print(qcashier.screen126.snd_timer);
      expect(qcashier.screen126.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04054_element_check_04031 **********\n\n");
    });

    test('04055_element_check_04032', () async {
      print("\n********** テスト実行：04055_element_check_04032 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.timer1;
      print(qcashier.screen126.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.timer1 = testData1;
      print(qcashier.screen126.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.timer1 = testData2;
      print(qcashier.screen126.timer1);
      expect(qcashier.screen126.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.timer1 = defalut;
      print(qcashier.screen126.timer1);
      expect(qcashier.screen126.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04055_element_check_04032 **********\n\n");
    });

    test('04056_element_check_04033', () async {
      print("\n********** テスト実行：04056_element_check_04033 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.timer2;
      print(qcashier.screen126.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.timer2 = testData1;
      print(qcashier.screen126.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.timer2 = testData2;
      print(qcashier.screen126.timer2);
      expect(qcashier.screen126.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.timer2 = defalut;
      print(qcashier.screen126.timer2);
      expect(qcashier.screen126.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04056_element_check_04033 **********\n\n");
    });

    test('04057_element_check_04034', () async {
      print("\n********** テスト実行：04057_element_check_04034 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.timer3;
      print(qcashier.screen126.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.timer3 = testData1;
      print(qcashier.screen126.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.timer3 = testData2;
      print(qcashier.screen126.timer3);
      expect(qcashier.screen126.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.timer3 = defalut;
      print(qcashier.screen126.timer3);
      expect(qcashier.screen126.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04057_element_check_04034 **********\n\n");
    });

    test('04058_element_check_04035', () async {
      print("\n********** テスト実行：04058_element_check_04035 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.dsp_flg1;
      print(qcashier.screen126.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.dsp_flg1 = testData1;
      print(qcashier.screen126.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.dsp_flg1 = testData2;
      print(qcashier.screen126.dsp_flg1);
      expect(qcashier.screen126.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.dsp_flg1 = defalut;
      print(qcashier.screen126.dsp_flg1);
      expect(qcashier.screen126.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04058_element_check_04035 **********\n\n");
    });

    test('04059_element_check_04036', () async {
      print("\n********** テスト実行：04059_element_check_04036 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.dsp_flg2;
      print(qcashier.screen126.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.dsp_flg2 = testData1;
      print(qcashier.screen126.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.dsp_flg2 = testData2;
      print(qcashier.screen126.dsp_flg2);
      expect(qcashier.screen126.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.dsp_flg2 = defalut;
      print(qcashier.screen126.dsp_flg2);
      expect(qcashier.screen126.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04059_element_check_04036 **********\n\n");
    });

    test('04060_element_check_04037', () async {
      print("\n********** テスト実行：04060_element_check_04037 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.movie01_ext;
      print(qcashier.screen126.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.movie01_ext = testData1;
      print(qcashier.screen126.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.movie01_ext = testData2;
      print(qcashier.screen126.movie01_ext);
      expect(qcashier.screen126.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.movie01_ext = defalut;
      print(qcashier.screen126.movie01_ext);
      expect(qcashier.screen126.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04060_element_check_04037 **********\n\n");
    });

    test('04061_element_check_04038', () async {
      print("\n********** テスト実行：04061_element_check_04038 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.movie02_ext;
      print(qcashier.screen126.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.movie02_ext = testData1;
      print(qcashier.screen126.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.movie02_ext = testData2;
      print(qcashier.screen126.movie02_ext);
      expect(qcashier.screen126.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.movie02_ext = defalut;
      print(qcashier.screen126.movie02_ext);
      expect(qcashier.screen126.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04061_element_check_04038 **********\n\n");
    });

    test('04062_element_check_04039', () async {
      print("\n********** テスト実行：04062_element_check_04039 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.movie03_ext;
      print(qcashier.screen126.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.movie03_ext = testData1;
      print(qcashier.screen126.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.movie03_ext = testData2;
      print(qcashier.screen126.movie03_ext);
      expect(qcashier.screen126.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.movie03_ext = defalut;
      print(qcashier.screen126.movie03_ext);
      expect(qcashier.screen126.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04062_element_check_04039 **********\n\n");
    });

    test('04063_element_check_04040', () async {
      print("\n********** テスト実行：04063_element_check_04040 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.movie04_ext;
      print(qcashier.screen126.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.movie04_ext = testData1;
      print(qcashier.screen126.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.movie04_ext = testData2;
      print(qcashier.screen126.movie04_ext);
      expect(qcashier.screen126.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.movie04_ext = defalut;
      print(qcashier.screen126.movie04_ext);
      expect(qcashier.screen126.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04063_element_check_04040 **********\n\n");
    });

    test('04064_element_check_04041', () async {
      print("\n********** テスト実行：04064_element_check_04041 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.line_title;
      print(qcashier.screen126.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.line_title = testData1s;
      print(qcashier.screen126.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.line_title = testData2s;
      print(qcashier.screen126.line_title);
      expect(qcashier.screen126.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.line_title = defalut;
      print(qcashier.screen126.line_title);
      expect(qcashier.screen126.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04064_element_check_04041 **********\n\n");
    });

    test('04065_element_check_04042', () async {
      print("\n********** テスト実行：04065_element_check_04042 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.line_title_ex;
      print(qcashier.screen126.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.line_title_ex = testData1s;
      print(qcashier.screen126.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.line_title_ex = testData2s;
      print(qcashier.screen126.line_title_ex);
      expect(qcashier.screen126.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.line_title_ex = defalut;
      print(qcashier.screen126.line_title_ex);
      expect(qcashier.screen126.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04065_element_check_04042 **********\n\n");
    });

    test('04066_element_check_04043', () async {
      print("\n********** テスト実行：04066_element_check_04043 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.line1;
      print(qcashier.screen126.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.line1 = testData1s;
      print(qcashier.screen126.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.line1 = testData2s;
      print(qcashier.screen126.line1);
      expect(qcashier.screen126.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.line1 = defalut;
      print(qcashier.screen126.line1);
      expect(qcashier.screen126.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04066_element_check_04043 **********\n\n");
    });

    test('04067_element_check_04044', () async {
      print("\n********** テスト実行：04067_element_check_04044 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.line2;
      print(qcashier.screen126.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.line2 = testData1s;
      print(qcashier.screen126.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.line2 = testData2s;
      print(qcashier.screen126.line2);
      expect(qcashier.screen126.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.line2 = defalut;
      print(qcashier.screen126.line2);
      expect(qcashier.screen126.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04067_element_check_04044 **********\n\n");
    });

    test('04068_element_check_04045', () async {
      print("\n********** テスト実行：04068_element_check_04045 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.line3;
      print(qcashier.screen126.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.line3 = testData1s;
      print(qcashier.screen126.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.line3 = testData2s;
      print(qcashier.screen126.line3);
      expect(qcashier.screen126.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.line3 = defalut;
      print(qcashier.screen126.line3);
      expect(qcashier.screen126.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04068_element_check_04045 **********\n\n");
    });

    test('04069_element_check_04046', () async {
      print("\n********** テスト実行：04069_element_check_04046 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.line4;
      print(qcashier.screen126.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.line4 = testData1s;
      print(qcashier.screen126.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.line4 = testData2s;
      print(qcashier.screen126.line4);
      expect(qcashier.screen126.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.line4 = defalut;
      print(qcashier.screen126.line4);
      expect(qcashier.screen126.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04069_element_check_04046 **********\n\n");
    });

    test('04070_element_check_04047', () async {
      print("\n********** テスト実行：04070_element_check_04047 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.line1_ex;
      print(qcashier.screen126.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.line1_ex = testData1s;
      print(qcashier.screen126.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.line1_ex = testData2s;
      print(qcashier.screen126.line1_ex);
      expect(qcashier.screen126.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.line1_ex = defalut;
      print(qcashier.screen126.line1_ex);
      expect(qcashier.screen126.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04070_element_check_04047 **********\n\n");
    });

    test('04071_element_check_04048', () async {
      print("\n********** テスト実行：04071_element_check_04048 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.line2_ex;
      print(qcashier.screen126.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.line2_ex = testData1s;
      print(qcashier.screen126.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.line2_ex = testData2s;
      print(qcashier.screen126.line2_ex);
      expect(qcashier.screen126.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.line2_ex = defalut;
      print(qcashier.screen126.line2_ex);
      expect(qcashier.screen126.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04071_element_check_04048 **********\n\n");
    });

    test('04072_element_check_04049', () async {
      print("\n********** テスト実行：04072_element_check_04049 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.line3_ex;
      print(qcashier.screen126.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.line3_ex = testData1s;
      print(qcashier.screen126.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.line3_ex = testData2s;
      print(qcashier.screen126.line3_ex);
      expect(qcashier.screen126.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.line3_ex = defalut;
      print(qcashier.screen126.line3_ex);
      expect(qcashier.screen126.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04072_element_check_04049 **********\n\n");
    });

    test('04073_element_check_04050', () async {
      print("\n********** テスト実行：04073_element_check_04050 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.line4_ex;
      print(qcashier.screen126.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.line4_ex = testData1s;
      print(qcashier.screen126.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.line4_ex = testData2s;
      print(qcashier.screen126.line4_ex);
      expect(qcashier.screen126.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.line4_ex = defalut;
      print(qcashier.screen126.line4_ex);
      expect(qcashier.screen126.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04073_element_check_04050 **********\n\n");
    });

    test('04074_element_check_04051', () async {
      print("\n********** テスト実行：04074_element_check_04051 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.sound_led1;
      print(qcashier.screen126.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.sound_led1 = testData1;
      print(qcashier.screen126.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.sound_led1 = testData2;
      print(qcashier.screen126.sound_led1);
      expect(qcashier.screen126.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.sound_led1 = defalut;
      print(qcashier.screen126.sound_led1);
      expect(qcashier.screen126.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04074_element_check_04051 **********\n\n");
    });

    test('04075_element_check_04052', () async {
      print("\n********** テスト実行：04075_element_check_04052 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.sound_led2;
      print(qcashier.screen126.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.sound_led2 = testData1;
      print(qcashier.screen126.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.sound_led2 = testData2;
      print(qcashier.screen126.sound_led2);
      expect(qcashier.screen126.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.sound_led2 = defalut;
      print(qcashier.screen126.sound_led2);
      expect(qcashier.screen126.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04075_element_check_04052 **********\n\n");
    });

    test('04076_element_check_04053', () async {
      print("\n********** テスト実行：04076_element_check_04053 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen126.sound_led3;
      print(qcashier.screen126.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen126.sound_led3 = testData1;
      print(qcashier.screen126.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen126.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen126.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen126.sound_led3 = testData2;
      print(qcashier.screen126.sound_led3);
      expect(qcashier.screen126.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen126.sound_led3 = defalut;
      print(qcashier.screen126.sound_led3);
      expect(qcashier.screen126.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen126.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04076_element_check_04053 **********\n\n");
    });

    test('04077_element_check_04054', () async {
      print("\n********** テスト実行：04077_element_check_04054 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.title;
      print(qcashier.screen127.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.title = testData1s;
      print(qcashier.screen127.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.title = testData2s;
      print(qcashier.screen127.title);
      expect(qcashier.screen127.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.title = defalut;
      print(qcashier.screen127.title);
      expect(qcashier.screen127.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04077_element_check_04054 **********\n\n");
    });

    test('04078_element_check_04055', () async {
      print("\n********** テスト実行：04078_element_check_04055 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.msg1;
      print(qcashier.screen127.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.msg1 = testData1s;
      print(qcashier.screen127.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.msg1 = testData2s;
      print(qcashier.screen127.msg1);
      expect(qcashier.screen127.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.msg1 = defalut;
      print(qcashier.screen127.msg1);
      expect(qcashier.screen127.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04078_element_check_04055 **********\n\n");
    });

    test('04079_element_check_04056', () async {
      print("\n********** テスト実行：04079_element_check_04056 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.msg2;
      print(qcashier.screen127.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.msg2 = testData1s;
      print(qcashier.screen127.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.msg2 = testData2s;
      print(qcashier.screen127.msg2);
      expect(qcashier.screen127.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.msg2 = defalut;
      print(qcashier.screen127.msg2);
      expect(qcashier.screen127.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04079_element_check_04056 **********\n\n");
    });

    test('04080_element_check_04057', () async {
      print("\n********** テスト実行：04080_element_check_04057 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.msg1_size;
      print(qcashier.screen127.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.msg1_size = testData1;
      print(qcashier.screen127.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.msg1_size = testData2;
      print(qcashier.screen127.msg1_size);
      expect(qcashier.screen127.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.msg1_size = defalut;
      print(qcashier.screen127.msg1_size);
      expect(qcashier.screen127.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04080_element_check_04057 **********\n\n");
    });

    test('04081_element_check_04058', () async {
      print("\n********** テスト実行：04081_element_check_04058 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.msg2_size;
      print(qcashier.screen127.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.msg2_size = testData1;
      print(qcashier.screen127.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.msg2_size = testData2;
      print(qcashier.screen127.msg2_size);
      expect(qcashier.screen127.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.msg2_size = defalut;
      print(qcashier.screen127.msg2_size);
      expect(qcashier.screen127.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04081_element_check_04058 **********\n\n");
    });

    test('04082_element_check_04059', () async {
      print("\n********** テスト実行：04082_element_check_04059 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.sound1;
      print(qcashier.screen127.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.sound1 = testData1;
      print(qcashier.screen127.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.sound1 = testData2;
      print(qcashier.screen127.sound1);
      expect(qcashier.screen127.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.sound1 = defalut;
      print(qcashier.screen127.sound1);
      expect(qcashier.screen127.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04082_element_check_04059 **********\n\n");
    });

    test('04083_element_check_04060', () async {
      print("\n********** テスト実行：04083_element_check_04060 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.sound2;
      print(qcashier.screen127.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.sound2 = testData1;
      print(qcashier.screen127.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.sound2 = testData2;
      print(qcashier.screen127.sound2);
      expect(qcashier.screen127.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.sound2 = defalut;
      print(qcashier.screen127.sound2);
      expect(qcashier.screen127.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04083_element_check_04060 **********\n\n");
    });

    test('04084_element_check_04061', () async {
      print("\n********** テスト実行：04084_element_check_04061 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.sound3;
      print(qcashier.screen127.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.sound3 = testData1;
      print(qcashier.screen127.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.sound3 = testData2;
      print(qcashier.screen127.sound3);
      expect(qcashier.screen127.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.sound3 = defalut;
      print(qcashier.screen127.sound3);
      expect(qcashier.screen127.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04084_element_check_04061 **********\n\n");
    });

    test('04085_element_check_04062', () async {
      print("\n********** テスト実行：04085_element_check_04062 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.snd_timer;
      print(qcashier.screen127.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.snd_timer = testData1;
      print(qcashier.screen127.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.snd_timer = testData2;
      print(qcashier.screen127.snd_timer);
      expect(qcashier.screen127.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.snd_timer = defalut;
      print(qcashier.screen127.snd_timer);
      expect(qcashier.screen127.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04085_element_check_04062 **********\n\n");
    });

    test('04086_element_check_04063', () async {
      print("\n********** テスト実行：04086_element_check_04063 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.timer1;
      print(qcashier.screen127.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.timer1 = testData1;
      print(qcashier.screen127.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.timer1 = testData2;
      print(qcashier.screen127.timer1);
      expect(qcashier.screen127.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.timer1 = defalut;
      print(qcashier.screen127.timer1);
      expect(qcashier.screen127.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04086_element_check_04063 **********\n\n");
    });

    test('04087_element_check_04064', () async {
      print("\n********** テスト実行：04087_element_check_04064 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.timer2;
      print(qcashier.screen127.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.timer2 = testData1;
      print(qcashier.screen127.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.timer2 = testData2;
      print(qcashier.screen127.timer2);
      expect(qcashier.screen127.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.timer2 = defalut;
      print(qcashier.screen127.timer2);
      expect(qcashier.screen127.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04087_element_check_04064 **********\n\n");
    });

    test('04088_element_check_04065', () async {
      print("\n********** テスト実行：04088_element_check_04065 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.timer3;
      print(qcashier.screen127.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.timer3 = testData1;
      print(qcashier.screen127.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.timer3 = testData2;
      print(qcashier.screen127.timer3);
      expect(qcashier.screen127.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.timer3 = defalut;
      print(qcashier.screen127.timer3);
      expect(qcashier.screen127.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04088_element_check_04065 **********\n\n");
    });

    test('04089_element_check_04066', () async {
      print("\n********** テスト実行：04089_element_check_04066 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.dsp_flg1;
      print(qcashier.screen127.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.dsp_flg1 = testData1;
      print(qcashier.screen127.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.dsp_flg1 = testData2;
      print(qcashier.screen127.dsp_flg1);
      expect(qcashier.screen127.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.dsp_flg1 = defalut;
      print(qcashier.screen127.dsp_flg1);
      expect(qcashier.screen127.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04089_element_check_04066 **********\n\n");
    });

    test('04090_element_check_04067', () async {
      print("\n********** テスト実行：04090_element_check_04067 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.dsp_flg2;
      print(qcashier.screen127.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.dsp_flg2 = testData1;
      print(qcashier.screen127.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.dsp_flg2 = testData2;
      print(qcashier.screen127.dsp_flg2);
      expect(qcashier.screen127.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.dsp_flg2 = defalut;
      print(qcashier.screen127.dsp_flg2);
      expect(qcashier.screen127.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04090_element_check_04067 **********\n\n");
    });

    test('04091_element_check_04068', () async {
      print("\n********** テスト実行：04091_element_check_04068 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.movie01_ext;
      print(qcashier.screen127.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.movie01_ext = testData1;
      print(qcashier.screen127.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.movie01_ext = testData2;
      print(qcashier.screen127.movie01_ext);
      expect(qcashier.screen127.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.movie01_ext = defalut;
      print(qcashier.screen127.movie01_ext);
      expect(qcashier.screen127.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04091_element_check_04068 **********\n\n");
    });

    test('04092_element_check_04069', () async {
      print("\n********** テスト実行：04092_element_check_04069 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.movie02_ext;
      print(qcashier.screen127.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.movie02_ext = testData1;
      print(qcashier.screen127.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.movie02_ext = testData2;
      print(qcashier.screen127.movie02_ext);
      expect(qcashier.screen127.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.movie02_ext = defalut;
      print(qcashier.screen127.movie02_ext);
      expect(qcashier.screen127.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04092_element_check_04069 **********\n\n");
    });

    test('04093_element_check_04070', () async {
      print("\n********** テスト実行：04093_element_check_04070 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.movie03_ext;
      print(qcashier.screen127.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.movie03_ext = testData1;
      print(qcashier.screen127.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.movie03_ext = testData2;
      print(qcashier.screen127.movie03_ext);
      expect(qcashier.screen127.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.movie03_ext = defalut;
      print(qcashier.screen127.movie03_ext);
      expect(qcashier.screen127.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04093_element_check_04070 **********\n\n");
    });

    test('04094_element_check_04071', () async {
      print("\n********** テスト実行：04094_element_check_04071 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.movie04_ext;
      print(qcashier.screen127.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.movie04_ext = testData1;
      print(qcashier.screen127.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.movie04_ext = testData2;
      print(qcashier.screen127.movie04_ext);
      expect(qcashier.screen127.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.movie04_ext = defalut;
      print(qcashier.screen127.movie04_ext);
      expect(qcashier.screen127.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04094_element_check_04071 **********\n\n");
    });

    test('04095_element_check_04072', () async {
      print("\n********** テスト実行：04095_element_check_04072 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.line_title;
      print(qcashier.screen127.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.line_title = testData1s;
      print(qcashier.screen127.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.line_title = testData2s;
      print(qcashier.screen127.line_title);
      expect(qcashier.screen127.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.line_title = defalut;
      print(qcashier.screen127.line_title);
      expect(qcashier.screen127.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04095_element_check_04072 **********\n\n");
    });

    test('04096_element_check_04073', () async {
      print("\n********** テスト実行：04096_element_check_04073 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.line_title_ex;
      print(qcashier.screen127.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.line_title_ex = testData1s;
      print(qcashier.screen127.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.line_title_ex = testData2s;
      print(qcashier.screen127.line_title_ex);
      expect(qcashier.screen127.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.line_title_ex = defalut;
      print(qcashier.screen127.line_title_ex);
      expect(qcashier.screen127.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04096_element_check_04073 **********\n\n");
    });

    test('04097_element_check_04074', () async {
      print("\n********** テスト実行：04097_element_check_04074 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.line1;
      print(qcashier.screen127.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.line1 = testData1s;
      print(qcashier.screen127.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.line1 = testData2s;
      print(qcashier.screen127.line1);
      expect(qcashier.screen127.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.line1 = defalut;
      print(qcashier.screen127.line1);
      expect(qcashier.screen127.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04097_element_check_04074 **********\n\n");
    });

    test('04098_element_check_04075', () async {
      print("\n********** テスト実行：04098_element_check_04075 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.line2;
      print(qcashier.screen127.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.line2 = testData1s;
      print(qcashier.screen127.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.line2 = testData2s;
      print(qcashier.screen127.line2);
      expect(qcashier.screen127.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.line2 = defalut;
      print(qcashier.screen127.line2);
      expect(qcashier.screen127.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04098_element_check_04075 **********\n\n");
    });

    test('04099_element_check_04076', () async {
      print("\n********** テスト実行：04099_element_check_04076 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.line3;
      print(qcashier.screen127.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.line3 = testData1s;
      print(qcashier.screen127.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.line3 = testData2s;
      print(qcashier.screen127.line3);
      expect(qcashier.screen127.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.line3 = defalut;
      print(qcashier.screen127.line3);
      expect(qcashier.screen127.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04099_element_check_04076 **********\n\n");
    });

    test('04100_element_check_04077', () async {
      print("\n********** テスト実行：04100_element_check_04077 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.line4;
      print(qcashier.screen127.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.line4 = testData1s;
      print(qcashier.screen127.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.line4 = testData2s;
      print(qcashier.screen127.line4);
      expect(qcashier.screen127.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.line4 = defalut;
      print(qcashier.screen127.line4);
      expect(qcashier.screen127.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04100_element_check_04077 **********\n\n");
    });

    test('04101_element_check_04078', () async {
      print("\n********** テスト実行：04101_element_check_04078 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.line1_ex;
      print(qcashier.screen127.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.line1_ex = testData1s;
      print(qcashier.screen127.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.line1_ex = testData2s;
      print(qcashier.screen127.line1_ex);
      expect(qcashier.screen127.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.line1_ex = defalut;
      print(qcashier.screen127.line1_ex);
      expect(qcashier.screen127.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04101_element_check_04078 **********\n\n");
    });

    test('04102_element_check_04079', () async {
      print("\n********** テスト実行：04102_element_check_04079 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.line2_ex;
      print(qcashier.screen127.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.line2_ex = testData1s;
      print(qcashier.screen127.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.line2_ex = testData2s;
      print(qcashier.screen127.line2_ex);
      expect(qcashier.screen127.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.line2_ex = defalut;
      print(qcashier.screen127.line2_ex);
      expect(qcashier.screen127.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04102_element_check_04079 **********\n\n");
    });

    test('04103_element_check_04080', () async {
      print("\n********** テスト実行：04103_element_check_04080 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.line3_ex;
      print(qcashier.screen127.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.line3_ex = testData1s;
      print(qcashier.screen127.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.line3_ex = testData2s;
      print(qcashier.screen127.line3_ex);
      expect(qcashier.screen127.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.line3_ex = defalut;
      print(qcashier.screen127.line3_ex);
      expect(qcashier.screen127.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04103_element_check_04080 **********\n\n");
    });

    test('04104_element_check_04081', () async {
      print("\n********** テスト実行：04104_element_check_04081 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.line4_ex;
      print(qcashier.screen127.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.line4_ex = testData1s;
      print(qcashier.screen127.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.line4_ex = testData2s;
      print(qcashier.screen127.line4_ex);
      expect(qcashier.screen127.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.line4_ex = defalut;
      print(qcashier.screen127.line4_ex);
      expect(qcashier.screen127.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04104_element_check_04081 **********\n\n");
    });

    test('04105_element_check_04082', () async {
      print("\n********** テスト実行：04105_element_check_04082 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.sound_led1;
      print(qcashier.screen127.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.sound_led1 = testData1;
      print(qcashier.screen127.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.sound_led1 = testData2;
      print(qcashier.screen127.sound_led1);
      expect(qcashier.screen127.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.sound_led1 = defalut;
      print(qcashier.screen127.sound_led1);
      expect(qcashier.screen127.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04105_element_check_04082 **********\n\n");
    });

    test('04106_element_check_04083', () async {
      print("\n********** テスト実行：04106_element_check_04083 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.sound_led2;
      print(qcashier.screen127.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.sound_led2 = testData1;
      print(qcashier.screen127.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.sound_led2 = testData2;
      print(qcashier.screen127.sound_led2);
      expect(qcashier.screen127.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.sound_led2 = defalut;
      print(qcashier.screen127.sound_led2);
      expect(qcashier.screen127.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04106_element_check_04083 **********\n\n");
    });

    test('04107_element_check_04084', () async {
      print("\n********** テスト実行：04107_element_check_04084 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen127.sound_led3;
      print(qcashier.screen127.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen127.sound_led3 = testData1;
      print(qcashier.screen127.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen127.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen127.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen127.sound_led3 = testData2;
      print(qcashier.screen127.sound_led3);
      expect(qcashier.screen127.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen127.sound_led3 = defalut;
      print(qcashier.screen127.sound_led3);
      expect(qcashier.screen127.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen127.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04107_element_check_04084 **********\n\n");
    });

    test('04108_element_check_04085', () async {
      print("\n********** テスト実行：04108_element_check_04085 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.title;
      print(qcashier.screen128.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.title = testData1s;
      print(qcashier.screen128.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.title = testData2s;
      print(qcashier.screen128.title);
      expect(qcashier.screen128.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.title = defalut;
      print(qcashier.screen128.title);
      expect(qcashier.screen128.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04108_element_check_04085 **********\n\n");
    });

    test('04109_element_check_04086', () async {
      print("\n********** テスト実行：04109_element_check_04086 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.msg1;
      print(qcashier.screen128.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.msg1 = testData1s;
      print(qcashier.screen128.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.msg1 = testData2s;
      print(qcashier.screen128.msg1);
      expect(qcashier.screen128.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.msg1 = defalut;
      print(qcashier.screen128.msg1);
      expect(qcashier.screen128.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04109_element_check_04086 **********\n\n");
    });

    test('04110_element_check_04087', () async {
      print("\n********** テスト実行：04110_element_check_04087 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.msg2;
      print(qcashier.screen128.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.msg2 = testData1s;
      print(qcashier.screen128.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.msg2 = testData2s;
      print(qcashier.screen128.msg2);
      expect(qcashier.screen128.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.msg2 = defalut;
      print(qcashier.screen128.msg2);
      expect(qcashier.screen128.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04110_element_check_04087 **********\n\n");
    });

    test('04111_element_check_04088', () async {
      print("\n********** テスト実行：04111_element_check_04088 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.msg1_size;
      print(qcashier.screen128.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.msg1_size = testData1;
      print(qcashier.screen128.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.msg1_size = testData2;
      print(qcashier.screen128.msg1_size);
      expect(qcashier.screen128.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.msg1_size = defalut;
      print(qcashier.screen128.msg1_size);
      expect(qcashier.screen128.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04111_element_check_04088 **********\n\n");
    });

    test('04112_element_check_04089', () async {
      print("\n********** テスト実行：04112_element_check_04089 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.msg2_size;
      print(qcashier.screen128.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.msg2_size = testData1;
      print(qcashier.screen128.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.msg2_size = testData2;
      print(qcashier.screen128.msg2_size);
      expect(qcashier.screen128.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.msg2_size = defalut;
      print(qcashier.screen128.msg2_size);
      expect(qcashier.screen128.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04112_element_check_04089 **********\n\n");
    });

    test('04113_element_check_04090', () async {
      print("\n********** テスト実行：04113_element_check_04090 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.sound1;
      print(qcashier.screen128.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.sound1 = testData1;
      print(qcashier.screen128.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.sound1 = testData2;
      print(qcashier.screen128.sound1);
      expect(qcashier.screen128.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.sound1 = defalut;
      print(qcashier.screen128.sound1);
      expect(qcashier.screen128.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04113_element_check_04090 **********\n\n");
    });

    test('04114_element_check_04091', () async {
      print("\n********** テスト実行：04114_element_check_04091 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.sound2;
      print(qcashier.screen128.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.sound2 = testData1;
      print(qcashier.screen128.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.sound2 = testData2;
      print(qcashier.screen128.sound2);
      expect(qcashier.screen128.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.sound2 = defalut;
      print(qcashier.screen128.sound2);
      expect(qcashier.screen128.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04114_element_check_04091 **********\n\n");
    });

    test('04115_element_check_04092', () async {
      print("\n********** テスト実行：04115_element_check_04092 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.sound3;
      print(qcashier.screen128.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.sound3 = testData1;
      print(qcashier.screen128.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.sound3 = testData2;
      print(qcashier.screen128.sound3);
      expect(qcashier.screen128.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.sound3 = defalut;
      print(qcashier.screen128.sound3);
      expect(qcashier.screen128.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04115_element_check_04092 **********\n\n");
    });

    test('04116_element_check_04093', () async {
      print("\n********** テスト実行：04116_element_check_04093 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.snd_timer;
      print(qcashier.screen128.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.snd_timer = testData1;
      print(qcashier.screen128.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.snd_timer = testData2;
      print(qcashier.screen128.snd_timer);
      expect(qcashier.screen128.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.snd_timer = defalut;
      print(qcashier.screen128.snd_timer);
      expect(qcashier.screen128.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04116_element_check_04093 **********\n\n");
    });

    test('04117_element_check_04094', () async {
      print("\n********** テスト実行：04117_element_check_04094 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.timer1;
      print(qcashier.screen128.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.timer1 = testData1;
      print(qcashier.screen128.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.timer1 = testData2;
      print(qcashier.screen128.timer1);
      expect(qcashier.screen128.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.timer1 = defalut;
      print(qcashier.screen128.timer1);
      expect(qcashier.screen128.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04117_element_check_04094 **********\n\n");
    });

    test('04118_element_check_04095', () async {
      print("\n********** テスト実行：04118_element_check_04095 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.timer2;
      print(qcashier.screen128.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.timer2 = testData1;
      print(qcashier.screen128.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.timer2 = testData2;
      print(qcashier.screen128.timer2);
      expect(qcashier.screen128.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.timer2 = defalut;
      print(qcashier.screen128.timer2);
      expect(qcashier.screen128.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04118_element_check_04095 **********\n\n");
    });

    test('04119_element_check_04096', () async {
      print("\n********** テスト実行：04119_element_check_04096 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.timer3;
      print(qcashier.screen128.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.timer3 = testData1;
      print(qcashier.screen128.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.timer3 = testData2;
      print(qcashier.screen128.timer3);
      expect(qcashier.screen128.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.timer3 = defalut;
      print(qcashier.screen128.timer3);
      expect(qcashier.screen128.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04119_element_check_04096 **********\n\n");
    });

    test('04120_element_check_04097', () async {
      print("\n********** テスト実行：04120_element_check_04097 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.dsp_flg1;
      print(qcashier.screen128.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.dsp_flg1 = testData1;
      print(qcashier.screen128.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.dsp_flg1 = testData2;
      print(qcashier.screen128.dsp_flg1);
      expect(qcashier.screen128.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.dsp_flg1 = defalut;
      print(qcashier.screen128.dsp_flg1);
      expect(qcashier.screen128.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04120_element_check_04097 **********\n\n");
    });

    test('04121_element_check_04098', () async {
      print("\n********** テスト実行：04121_element_check_04098 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.dsp_flg2;
      print(qcashier.screen128.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.dsp_flg2 = testData1;
      print(qcashier.screen128.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.dsp_flg2 = testData2;
      print(qcashier.screen128.dsp_flg2);
      expect(qcashier.screen128.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.dsp_flg2 = defalut;
      print(qcashier.screen128.dsp_flg2);
      expect(qcashier.screen128.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04121_element_check_04098 **********\n\n");
    });

    test('04122_element_check_04099', () async {
      print("\n********** テスト実行：04122_element_check_04099 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.movie01_ext;
      print(qcashier.screen128.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.movie01_ext = testData1;
      print(qcashier.screen128.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.movie01_ext = testData2;
      print(qcashier.screen128.movie01_ext);
      expect(qcashier.screen128.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.movie01_ext = defalut;
      print(qcashier.screen128.movie01_ext);
      expect(qcashier.screen128.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04122_element_check_04099 **********\n\n");
    });

    test('04123_element_check_04100', () async {
      print("\n********** テスト実行：04123_element_check_04100 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.movie02_ext;
      print(qcashier.screen128.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.movie02_ext = testData1;
      print(qcashier.screen128.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.movie02_ext = testData2;
      print(qcashier.screen128.movie02_ext);
      expect(qcashier.screen128.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.movie02_ext = defalut;
      print(qcashier.screen128.movie02_ext);
      expect(qcashier.screen128.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04123_element_check_04100 **********\n\n");
    });

    test('04124_element_check_04101', () async {
      print("\n********** テスト実行：04124_element_check_04101 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.movie03_ext;
      print(qcashier.screen128.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.movie03_ext = testData1;
      print(qcashier.screen128.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.movie03_ext = testData2;
      print(qcashier.screen128.movie03_ext);
      expect(qcashier.screen128.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.movie03_ext = defalut;
      print(qcashier.screen128.movie03_ext);
      expect(qcashier.screen128.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04124_element_check_04101 **********\n\n");
    });

    test('04125_element_check_04102', () async {
      print("\n********** テスト実行：04125_element_check_04102 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.movie04_ext;
      print(qcashier.screen128.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.movie04_ext = testData1;
      print(qcashier.screen128.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.movie04_ext = testData2;
      print(qcashier.screen128.movie04_ext);
      expect(qcashier.screen128.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.movie04_ext = defalut;
      print(qcashier.screen128.movie04_ext);
      expect(qcashier.screen128.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04125_element_check_04102 **********\n\n");
    });

    test('04126_element_check_04103', () async {
      print("\n********** テスト実行：04126_element_check_04103 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.line_title;
      print(qcashier.screen128.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.line_title = testData1s;
      print(qcashier.screen128.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.line_title = testData2s;
      print(qcashier.screen128.line_title);
      expect(qcashier.screen128.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.line_title = defalut;
      print(qcashier.screen128.line_title);
      expect(qcashier.screen128.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04126_element_check_04103 **********\n\n");
    });

    test('04127_element_check_04104', () async {
      print("\n********** テスト実行：04127_element_check_04104 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.line_title_ex;
      print(qcashier.screen128.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.line_title_ex = testData1s;
      print(qcashier.screen128.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.line_title_ex = testData2s;
      print(qcashier.screen128.line_title_ex);
      expect(qcashier.screen128.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.line_title_ex = defalut;
      print(qcashier.screen128.line_title_ex);
      expect(qcashier.screen128.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04127_element_check_04104 **********\n\n");
    });

    test('04128_element_check_04105', () async {
      print("\n********** テスト実行：04128_element_check_04105 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.line1;
      print(qcashier.screen128.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.line1 = testData1s;
      print(qcashier.screen128.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.line1 = testData2s;
      print(qcashier.screen128.line1);
      expect(qcashier.screen128.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.line1 = defalut;
      print(qcashier.screen128.line1);
      expect(qcashier.screen128.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04128_element_check_04105 **********\n\n");
    });

    test('04129_element_check_04106', () async {
      print("\n********** テスト実行：04129_element_check_04106 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.line2;
      print(qcashier.screen128.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.line2 = testData1s;
      print(qcashier.screen128.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.line2 = testData2s;
      print(qcashier.screen128.line2);
      expect(qcashier.screen128.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.line2 = defalut;
      print(qcashier.screen128.line2);
      expect(qcashier.screen128.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04129_element_check_04106 **********\n\n");
    });

    test('04130_element_check_04107', () async {
      print("\n********** テスト実行：04130_element_check_04107 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.line3;
      print(qcashier.screen128.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.line3 = testData1s;
      print(qcashier.screen128.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.line3 = testData2s;
      print(qcashier.screen128.line3);
      expect(qcashier.screen128.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.line3 = defalut;
      print(qcashier.screen128.line3);
      expect(qcashier.screen128.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04130_element_check_04107 **********\n\n");
    });

    test('04131_element_check_04108', () async {
      print("\n********** テスト実行：04131_element_check_04108 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.line4;
      print(qcashier.screen128.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.line4 = testData1s;
      print(qcashier.screen128.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.line4 = testData2s;
      print(qcashier.screen128.line4);
      expect(qcashier.screen128.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.line4 = defalut;
      print(qcashier.screen128.line4);
      expect(qcashier.screen128.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04131_element_check_04108 **********\n\n");
    });

    test('04132_element_check_04109', () async {
      print("\n********** テスト実行：04132_element_check_04109 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.line1_ex;
      print(qcashier.screen128.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.line1_ex = testData1s;
      print(qcashier.screen128.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.line1_ex = testData2s;
      print(qcashier.screen128.line1_ex);
      expect(qcashier.screen128.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.line1_ex = defalut;
      print(qcashier.screen128.line1_ex);
      expect(qcashier.screen128.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04132_element_check_04109 **********\n\n");
    });

    test('04133_element_check_04110', () async {
      print("\n********** テスト実行：04133_element_check_04110 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.line2_ex;
      print(qcashier.screen128.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.line2_ex = testData1s;
      print(qcashier.screen128.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.line2_ex = testData2s;
      print(qcashier.screen128.line2_ex);
      expect(qcashier.screen128.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.line2_ex = defalut;
      print(qcashier.screen128.line2_ex);
      expect(qcashier.screen128.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04133_element_check_04110 **********\n\n");
    });

    test('04134_element_check_04111', () async {
      print("\n********** テスト実行：04134_element_check_04111 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.line3_ex;
      print(qcashier.screen128.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.line3_ex = testData1s;
      print(qcashier.screen128.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.line3_ex = testData2s;
      print(qcashier.screen128.line3_ex);
      expect(qcashier.screen128.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.line3_ex = defalut;
      print(qcashier.screen128.line3_ex);
      expect(qcashier.screen128.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04134_element_check_04111 **********\n\n");
    });

    test('04135_element_check_04112', () async {
      print("\n********** テスト実行：04135_element_check_04112 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.line4_ex;
      print(qcashier.screen128.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.line4_ex = testData1s;
      print(qcashier.screen128.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.line4_ex = testData2s;
      print(qcashier.screen128.line4_ex);
      expect(qcashier.screen128.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.line4_ex = defalut;
      print(qcashier.screen128.line4_ex);
      expect(qcashier.screen128.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04135_element_check_04112 **********\n\n");
    });

    test('04136_element_check_04113', () async {
      print("\n********** テスト実行：04136_element_check_04113 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.sound_led1;
      print(qcashier.screen128.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.sound_led1 = testData1;
      print(qcashier.screen128.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.sound_led1 = testData2;
      print(qcashier.screen128.sound_led1);
      expect(qcashier.screen128.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.sound_led1 = defalut;
      print(qcashier.screen128.sound_led1);
      expect(qcashier.screen128.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04136_element_check_04113 **********\n\n");
    });

    test('04137_element_check_04114', () async {
      print("\n********** テスト実行：04137_element_check_04114 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.sound_led2;
      print(qcashier.screen128.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.sound_led2 = testData1;
      print(qcashier.screen128.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.sound_led2 = testData2;
      print(qcashier.screen128.sound_led2);
      expect(qcashier.screen128.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.sound_led2 = defalut;
      print(qcashier.screen128.sound_led2);
      expect(qcashier.screen128.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04137_element_check_04114 **********\n\n");
    });

    test('04138_element_check_04115', () async {
      print("\n********** テスト実行：04138_element_check_04115 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen128.sound_led3;
      print(qcashier.screen128.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen128.sound_led3 = testData1;
      print(qcashier.screen128.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen128.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen128.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen128.sound_led3 = testData2;
      print(qcashier.screen128.sound_led3);
      expect(qcashier.screen128.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen128.sound_led3 = defalut;
      print(qcashier.screen128.sound_led3);
      expect(qcashier.screen128.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen128.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04138_element_check_04115 **********\n\n");
    });

    test('04139_element_check_04116', () async {
      print("\n********** テスト実行：04139_element_check_04116 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.title;
      print(qcashier.screen129.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.title = testData1s;
      print(qcashier.screen129.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.title = testData2s;
      print(qcashier.screen129.title);
      expect(qcashier.screen129.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.title = defalut;
      print(qcashier.screen129.title);
      expect(qcashier.screen129.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04139_element_check_04116 **********\n\n");
    });

    test('04140_element_check_04117', () async {
      print("\n********** テスト実行：04140_element_check_04117 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.msg1;
      print(qcashier.screen129.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.msg1 = testData1s;
      print(qcashier.screen129.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.msg1 = testData2s;
      print(qcashier.screen129.msg1);
      expect(qcashier.screen129.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.msg1 = defalut;
      print(qcashier.screen129.msg1);
      expect(qcashier.screen129.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04140_element_check_04117 **********\n\n");
    });

    test('04141_element_check_04118', () async {
      print("\n********** テスト実行：04141_element_check_04118 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.msg2;
      print(qcashier.screen129.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.msg2 = testData1s;
      print(qcashier.screen129.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.msg2 = testData2s;
      print(qcashier.screen129.msg2);
      expect(qcashier.screen129.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.msg2 = defalut;
      print(qcashier.screen129.msg2);
      expect(qcashier.screen129.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04141_element_check_04118 **********\n\n");
    });

    test('04142_element_check_04119', () async {
      print("\n********** テスト実行：04142_element_check_04119 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.msg1_size;
      print(qcashier.screen129.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.msg1_size = testData1;
      print(qcashier.screen129.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.msg1_size = testData2;
      print(qcashier.screen129.msg1_size);
      expect(qcashier.screen129.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.msg1_size = defalut;
      print(qcashier.screen129.msg1_size);
      expect(qcashier.screen129.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04142_element_check_04119 **********\n\n");
    });

    test('04143_element_check_04120', () async {
      print("\n********** テスト実行：04143_element_check_04120 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.msg2_size;
      print(qcashier.screen129.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.msg2_size = testData1;
      print(qcashier.screen129.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.msg2_size = testData2;
      print(qcashier.screen129.msg2_size);
      expect(qcashier.screen129.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.msg2_size = defalut;
      print(qcashier.screen129.msg2_size);
      expect(qcashier.screen129.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04143_element_check_04120 **********\n\n");
    });

    test('04144_element_check_04121', () async {
      print("\n********** テスト実行：04144_element_check_04121 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.sound1;
      print(qcashier.screen129.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.sound1 = testData1;
      print(qcashier.screen129.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.sound1 = testData2;
      print(qcashier.screen129.sound1);
      expect(qcashier.screen129.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.sound1 = defalut;
      print(qcashier.screen129.sound1);
      expect(qcashier.screen129.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04144_element_check_04121 **********\n\n");
    });

    test('04145_element_check_04122', () async {
      print("\n********** テスト実行：04145_element_check_04122 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.sound2;
      print(qcashier.screen129.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.sound2 = testData1;
      print(qcashier.screen129.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.sound2 = testData2;
      print(qcashier.screen129.sound2);
      expect(qcashier.screen129.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.sound2 = defalut;
      print(qcashier.screen129.sound2);
      expect(qcashier.screen129.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04145_element_check_04122 **********\n\n");
    });

    test('04146_element_check_04123', () async {
      print("\n********** テスト実行：04146_element_check_04123 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.sound3;
      print(qcashier.screen129.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.sound3 = testData1;
      print(qcashier.screen129.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.sound3 = testData2;
      print(qcashier.screen129.sound3);
      expect(qcashier.screen129.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.sound3 = defalut;
      print(qcashier.screen129.sound3);
      expect(qcashier.screen129.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04146_element_check_04123 **********\n\n");
    });

    test('04147_element_check_04124', () async {
      print("\n********** テスト実行：04147_element_check_04124 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.snd_timer;
      print(qcashier.screen129.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.snd_timer = testData1;
      print(qcashier.screen129.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.snd_timer = testData2;
      print(qcashier.screen129.snd_timer);
      expect(qcashier.screen129.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.snd_timer = defalut;
      print(qcashier.screen129.snd_timer);
      expect(qcashier.screen129.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04147_element_check_04124 **********\n\n");
    });

    test('04148_element_check_04125', () async {
      print("\n********** テスト実行：04148_element_check_04125 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.timer1;
      print(qcashier.screen129.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.timer1 = testData1;
      print(qcashier.screen129.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.timer1 = testData2;
      print(qcashier.screen129.timer1);
      expect(qcashier.screen129.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.timer1 = defalut;
      print(qcashier.screen129.timer1);
      expect(qcashier.screen129.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04148_element_check_04125 **********\n\n");
    });

    test('04149_element_check_04126', () async {
      print("\n********** テスト実行：04149_element_check_04126 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.timer2;
      print(qcashier.screen129.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.timer2 = testData1;
      print(qcashier.screen129.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.timer2 = testData2;
      print(qcashier.screen129.timer2);
      expect(qcashier.screen129.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.timer2 = defalut;
      print(qcashier.screen129.timer2);
      expect(qcashier.screen129.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04149_element_check_04126 **********\n\n");
    });

    test('04150_element_check_04127', () async {
      print("\n********** テスト実行：04150_element_check_04127 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.timer3;
      print(qcashier.screen129.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.timer3 = testData1;
      print(qcashier.screen129.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.timer3 = testData2;
      print(qcashier.screen129.timer3);
      expect(qcashier.screen129.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.timer3 = defalut;
      print(qcashier.screen129.timer3);
      expect(qcashier.screen129.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04150_element_check_04127 **********\n\n");
    });

    test('04151_element_check_04128', () async {
      print("\n********** テスト実行：04151_element_check_04128 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.dsp_flg1;
      print(qcashier.screen129.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.dsp_flg1 = testData1;
      print(qcashier.screen129.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.dsp_flg1 = testData2;
      print(qcashier.screen129.dsp_flg1);
      expect(qcashier.screen129.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.dsp_flg1 = defalut;
      print(qcashier.screen129.dsp_flg1);
      expect(qcashier.screen129.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04151_element_check_04128 **********\n\n");
    });

    test('04152_element_check_04129', () async {
      print("\n********** テスト実行：04152_element_check_04129 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.dsp_flg2;
      print(qcashier.screen129.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.dsp_flg2 = testData1;
      print(qcashier.screen129.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.dsp_flg2 = testData2;
      print(qcashier.screen129.dsp_flg2);
      expect(qcashier.screen129.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.dsp_flg2 = defalut;
      print(qcashier.screen129.dsp_flg2);
      expect(qcashier.screen129.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04152_element_check_04129 **********\n\n");
    });

    test('04153_element_check_04130', () async {
      print("\n********** テスト実行：04153_element_check_04130 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.movie01_ext;
      print(qcashier.screen129.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.movie01_ext = testData1;
      print(qcashier.screen129.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.movie01_ext = testData2;
      print(qcashier.screen129.movie01_ext);
      expect(qcashier.screen129.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.movie01_ext = defalut;
      print(qcashier.screen129.movie01_ext);
      expect(qcashier.screen129.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04153_element_check_04130 **********\n\n");
    });

    test('04154_element_check_04131', () async {
      print("\n********** テスト実行：04154_element_check_04131 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.movie02_ext;
      print(qcashier.screen129.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.movie02_ext = testData1;
      print(qcashier.screen129.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.movie02_ext = testData2;
      print(qcashier.screen129.movie02_ext);
      expect(qcashier.screen129.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.movie02_ext = defalut;
      print(qcashier.screen129.movie02_ext);
      expect(qcashier.screen129.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04154_element_check_04131 **********\n\n");
    });

    test('04155_element_check_04132', () async {
      print("\n********** テスト実行：04155_element_check_04132 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.movie03_ext;
      print(qcashier.screen129.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.movie03_ext = testData1;
      print(qcashier.screen129.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.movie03_ext = testData2;
      print(qcashier.screen129.movie03_ext);
      expect(qcashier.screen129.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.movie03_ext = defalut;
      print(qcashier.screen129.movie03_ext);
      expect(qcashier.screen129.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04155_element_check_04132 **********\n\n");
    });

    test('04156_element_check_04133', () async {
      print("\n********** テスト実行：04156_element_check_04133 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.movie04_ext;
      print(qcashier.screen129.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.movie04_ext = testData1;
      print(qcashier.screen129.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.movie04_ext = testData2;
      print(qcashier.screen129.movie04_ext);
      expect(qcashier.screen129.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.movie04_ext = defalut;
      print(qcashier.screen129.movie04_ext);
      expect(qcashier.screen129.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04156_element_check_04133 **********\n\n");
    });

    test('04157_element_check_04134', () async {
      print("\n********** テスト実行：04157_element_check_04134 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.line_title;
      print(qcashier.screen129.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.line_title = testData1s;
      print(qcashier.screen129.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.line_title = testData2s;
      print(qcashier.screen129.line_title);
      expect(qcashier.screen129.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.line_title = defalut;
      print(qcashier.screen129.line_title);
      expect(qcashier.screen129.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04157_element_check_04134 **********\n\n");
    });

    test('04158_element_check_04135', () async {
      print("\n********** テスト実行：04158_element_check_04135 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.line_title_ex;
      print(qcashier.screen129.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.line_title_ex = testData1s;
      print(qcashier.screen129.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.line_title_ex = testData2s;
      print(qcashier.screen129.line_title_ex);
      expect(qcashier.screen129.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.line_title_ex = defalut;
      print(qcashier.screen129.line_title_ex);
      expect(qcashier.screen129.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04158_element_check_04135 **********\n\n");
    });

    test('04159_element_check_04136', () async {
      print("\n********** テスト実行：04159_element_check_04136 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.line1;
      print(qcashier.screen129.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.line1 = testData1s;
      print(qcashier.screen129.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.line1 = testData2s;
      print(qcashier.screen129.line1);
      expect(qcashier.screen129.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.line1 = defalut;
      print(qcashier.screen129.line1);
      expect(qcashier.screen129.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04159_element_check_04136 **********\n\n");
    });

    test('04160_element_check_04137', () async {
      print("\n********** テスト実行：04160_element_check_04137 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.line2;
      print(qcashier.screen129.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.line2 = testData1s;
      print(qcashier.screen129.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.line2 = testData2s;
      print(qcashier.screen129.line2);
      expect(qcashier.screen129.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.line2 = defalut;
      print(qcashier.screen129.line2);
      expect(qcashier.screen129.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04160_element_check_04137 **********\n\n");
    });

    test('04161_element_check_04138', () async {
      print("\n********** テスト実行：04161_element_check_04138 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.line3;
      print(qcashier.screen129.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.line3 = testData1s;
      print(qcashier.screen129.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.line3 = testData2s;
      print(qcashier.screen129.line3);
      expect(qcashier.screen129.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.line3 = defalut;
      print(qcashier.screen129.line3);
      expect(qcashier.screen129.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04161_element_check_04138 **********\n\n");
    });

    test('04162_element_check_04139', () async {
      print("\n********** テスト実行：04162_element_check_04139 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.line4;
      print(qcashier.screen129.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.line4 = testData1s;
      print(qcashier.screen129.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.line4 = testData2s;
      print(qcashier.screen129.line4);
      expect(qcashier.screen129.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.line4 = defalut;
      print(qcashier.screen129.line4);
      expect(qcashier.screen129.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04162_element_check_04139 **********\n\n");
    });

    test('04163_element_check_04140', () async {
      print("\n********** テスト実行：04163_element_check_04140 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.line1_ex;
      print(qcashier.screen129.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.line1_ex = testData1s;
      print(qcashier.screen129.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.line1_ex = testData2s;
      print(qcashier.screen129.line1_ex);
      expect(qcashier.screen129.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.line1_ex = defalut;
      print(qcashier.screen129.line1_ex);
      expect(qcashier.screen129.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04163_element_check_04140 **********\n\n");
    });

    test('04164_element_check_04141', () async {
      print("\n********** テスト実行：04164_element_check_04141 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.line2_ex;
      print(qcashier.screen129.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.line2_ex = testData1s;
      print(qcashier.screen129.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.line2_ex = testData2s;
      print(qcashier.screen129.line2_ex);
      expect(qcashier.screen129.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.line2_ex = defalut;
      print(qcashier.screen129.line2_ex);
      expect(qcashier.screen129.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04164_element_check_04141 **********\n\n");
    });

    test('04165_element_check_04142', () async {
      print("\n********** テスト実行：04165_element_check_04142 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.line3_ex;
      print(qcashier.screen129.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.line3_ex = testData1s;
      print(qcashier.screen129.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.line3_ex = testData2s;
      print(qcashier.screen129.line3_ex);
      expect(qcashier.screen129.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.line3_ex = defalut;
      print(qcashier.screen129.line3_ex);
      expect(qcashier.screen129.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04165_element_check_04142 **********\n\n");
    });

    test('04166_element_check_04143', () async {
      print("\n********** テスト実行：04166_element_check_04143 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.line4_ex;
      print(qcashier.screen129.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.line4_ex = testData1s;
      print(qcashier.screen129.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.line4_ex = testData2s;
      print(qcashier.screen129.line4_ex);
      expect(qcashier.screen129.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.line4_ex = defalut;
      print(qcashier.screen129.line4_ex);
      expect(qcashier.screen129.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04166_element_check_04143 **********\n\n");
    });

    test('04167_element_check_04144', () async {
      print("\n********** テスト実行：04167_element_check_04144 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.sound_led1;
      print(qcashier.screen129.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.sound_led1 = testData1;
      print(qcashier.screen129.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.sound_led1 = testData2;
      print(qcashier.screen129.sound_led1);
      expect(qcashier.screen129.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.sound_led1 = defalut;
      print(qcashier.screen129.sound_led1);
      expect(qcashier.screen129.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04167_element_check_04144 **********\n\n");
    });

    test('04168_element_check_04145', () async {
      print("\n********** テスト実行：04168_element_check_04145 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.sound_led2;
      print(qcashier.screen129.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.sound_led2 = testData1;
      print(qcashier.screen129.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.sound_led2 = testData2;
      print(qcashier.screen129.sound_led2);
      expect(qcashier.screen129.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.sound_led2 = defalut;
      print(qcashier.screen129.sound_led2);
      expect(qcashier.screen129.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04168_element_check_04145 **********\n\n");
    });

    test('04169_element_check_04146', () async {
      print("\n********** テスト実行：04169_element_check_04146 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen129.sound_led3;
      print(qcashier.screen129.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen129.sound_led3 = testData1;
      print(qcashier.screen129.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen129.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen129.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen129.sound_led3 = testData2;
      print(qcashier.screen129.sound_led3);
      expect(qcashier.screen129.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen129.sound_led3 = defalut;
      print(qcashier.screen129.sound_led3);
      expect(qcashier.screen129.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen129.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04169_element_check_04146 **********\n\n");
    });

    test('04170_element_check_04147', () async {
      print("\n********** テスト実行：04170_element_check_04147 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.title;
      print(qcashier.screen130.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.title = testData1s;
      print(qcashier.screen130.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.title = testData2s;
      print(qcashier.screen130.title);
      expect(qcashier.screen130.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.title = defalut;
      print(qcashier.screen130.title);
      expect(qcashier.screen130.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04170_element_check_04147 **********\n\n");
    });

    test('04171_element_check_04148', () async {
      print("\n********** テスト実行：04171_element_check_04148 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.msg1;
      print(qcashier.screen130.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.msg1 = testData1s;
      print(qcashier.screen130.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.msg1 = testData2s;
      print(qcashier.screen130.msg1);
      expect(qcashier.screen130.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.msg1 = defalut;
      print(qcashier.screen130.msg1);
      expect(qcashier.screen130.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04171_element_check_04148 **********\n\n");
    });

    test('04172_element_check_04149', () async {
      print("\n********** テスト実行：04172_element_check_04149 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.msg2;
      print(qcashier.screen130.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.msg2 = testData1s;
      print(qcashier.screen130.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.msg2 = testData2s;
      print(qcashier.screen130.msg2);
      expect(qcashier.screen130.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.msg2 = defalut;
      print(qcashier.screen130.msg2);
      expect(qcashier.screen130.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04172_element_check_04149 **********\n\n");
    });

    test('04173_element_check_04150', () async {
      print("\n********** テスト実行：04173_element_check_04150 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.msg1_size;
      print(qcashier.screen130.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.msg1_size = testData1;
      print(qcashier.screen130.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.msg1_size = testData2;
      print(qcashier.screen130.msg1_size);
      expect(qcashier.screen130.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.msg1_size = defalut;
      print(qcashier.screen130.msg1_size);
      expect(qcashier.screen130.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04173_element_check_04150 **********\n\n");
    });

    test('04174_element_check_04151', () async {
      print("\n********** テスト実行：04174_element_check_04151 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.msg2_size;
      print(qcashier.screen130.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.msg2_size = testData1;
      print(qcashier.screen130.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.msg2_size = testData2;
      print(qcashier.screen130.msg2_size);
      expect(qcashier.screen130.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.msg2_size = defalut;
      print(qcashier.screen130.msg2_size);
      expect(qcashier.screen130.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04174_element_check_04151 **********\n\n");
    });

    test('04175_element_check_04152', () async {
      print("\n********** テスト実行：04175_element_check_04152 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.sound1;
      print(qcashier.screen130.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.sound1 = testData1;
      print(qcashier.screen130.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.sound1 = testData2;
      print(qcashier.screen130.sound1);
      expect(qcashier.screen130.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.sound1 = defalut;
      print(qcashier.screen130.sound1);
      expect(qcashier.screen130.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04175_element_check_04152 **********\n\n");
    });

    test('04176_element_check_04153', () async {
      print("\n********** テスト実行：04176_element_check_04153 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.sound2;
      print(qcashier.screen130.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.sound2 = testData1s;
      print(qcashier.screen130.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.sound2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.sound2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.sound2 = testData2s;
      print(qcashier.screen130.sound2);
      expect(qcashier.screen130.sound2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.sound2 = defalut;
      print(qcashier.screen130.sound2);
      expect(qcashier.screen130.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04176_element_check_04153 **********\n\n");
    });

    test('04177_element_check_04154', () async {
      print("\n********** テスト実行：04177_element_check_04154 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.sound3;
      print(qcashier.screen130.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.sound3 = testData1s;
      print(qcashier.screen130.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.sound3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.sound3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.sound3 = testData2s;
      print(qcashier.screen130.sound3);
      expect(qcashier.screen130.sound3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.sound3 = defalut;
      print(qcashier.screen130.sound3);
      expect(qcashier.screen130.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04177_element_check_04154 **********\n\n");
    });

    test('04178_element_check_04155', () async {
      print("\n********** テスト実行：04178_element_check_04155 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.snd_timer;
      print(qcashier.screen130.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.snd_timer = testData1;
      print(qcashier.screen130.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.snd_timer = testData2;
      print(qcashier.screen130.snd_timer);
      expect(qcashier.screen130.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.snd_timer = defalut;
      print(qcashier.screen130.snd_timer);
      expect(qcashier.screen130.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04178_element_check_04155 **********\n\n");
    });

    test('04179_element_check_04156', () async {
      print("\n********** テスト実行：04179_element_check_04156 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.timer1;
      print(qcashier.screen130.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.timer1 = testData1;
      print(qcashier.screen130.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.timer1 = testData2;
      print(qcashier.screen130.timer1);
      expect(qcashier.screen130.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.timer1 = defalut;
      print(qcashier.screen130.timer1);
      expect(qcashier.screen130.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04179_element_check_04156 **********\n\n");
    });

    test('04180_element_check_04157', () async {
      print("\n********** テスト実行：04180_element_check_04157 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.timer2;
      print(qcashier.screen130.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.timer2 = testData1;
      print(qcashier.screen130.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.timer2 = testData2;
      print(qcashier.screen130.timer2);
      expect(qcashier.screen130.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.timer2 = defalut;
      print(qcashier.screen130.timer2);
      expect(qcashier.screen130.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04180_element_check_04157 **********\n\n");
    });

    test('04181_element_check_04158', () async {
      print("\n********** テスト実行：04181_element_check_04158 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.timer3;
      print(qcashier.screen130.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.timer3 = testData1;
      print(qcashier.screen130.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.timer3 = testData2;
      print(qcashier.screen130.timer3);
      expect(qcashier.screen130.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.timer3 = defalut;
      print(qcashier.screen130.timer3);
      expect(qcashier.screen130.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04181_element_check_04158 **********\n\n");
    });

    test('04182_element_check_04159', () async {
      print("\n********** テスト実行：04182_element_check_04159 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.dsp_flg1;
      print(qcashier.screen130.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.dsp_flg1 = testData1;
      print(qcashier.screen130.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.dsp_flg1 = testData2;
      print(qcashier.screen130.dsp_flg1);
      expect(qcashier.screen130.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.dsp_flg1 = defalut;
      print(qcashier.screen130.dsp_flg1);
      expect(qcashier.screen130.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04182_element_check_04159 **********\n\n");
    });

    test('04183_element_check_04160', () async {
      print("\n********** テスト実行：04183_element_check_04160 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.dsp_flg2;
      print(qcashier.screen130.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.dsp_flg2 = testData1;
      print(qcashier.screen130.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.dsp_flg2 = testData2;
      print(qcashier.screen130.dsp_flg2);
      expect(qcashier.screen130.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.dsp_flg2 = defalut;
      print(qcashier.screen130.dsp_flg2);
      expect(qcashier.screen130.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04183_element_check_04160 **********\n\n");
    });

    test('04184_element_check_04161', () async {
      print("\n********** テスト実行：04184_element_check_04161 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.movie01_ext;
      print(qcashier.screen130.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.movie01_ext = testData1;
      print(qcashier.screen130.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.movie01_ext = testData2;
      print(qcashier.screen130.movie01_ext);
      expect(qcashier.screen130.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.movie01_ext = defalut;
      print(qcashier.screen130.movie01_ext);
      expect(qcashier.screen130.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04184_element_check_04161 **********\n\n");
    });

    test('04185_element_check_04162', () async {
      print("\n********** テスト実行：04185_element_check_04162 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.movie02_ext;
      print(qcashier.screen130.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.movie02_ext = testData1;
      print(qcashier.screen130.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.movie02_ext = testData2;
      print(qcashier.screen130.movie02_ext);
      expect(qcashier.screen130.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.movie02_ext = defalut;
      print(qcashier.screen130.movie02_ext);
      expect(qcashier.screen130.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04185_element_check_04162 **********\n\n");
    });

    test('04186_element_check_04163', () async {
      print("\n********** テスト実行：04186_element_check_04163 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.movie03_ext;
      print(qcashier.screen130.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.movie03_ext = testData1;
      print(qcashier.screen130.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.movie03_ext = testData2;
      print(qcashier.screen130.movie03_ext);
      expect(qcashier.screen130.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.movie03_ext = defalut;
      print(qcashier.screen130.movie03_ext);
      expect(qcashier.screen130.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04186_element_check_04163 **********\n\n");
    });

    test('04187_element_check_04164', () async {
      print("\n********** テスト実行：04187_element_check_04164 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.movie04_ext;
      print(qcashier.screen130.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.movie04_ext = testData1;
      print(qcashier.screen130.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.movie04_ext = testData2;
      print(qcashier.screen130.movie04_ext);
      expect(qcashier.screen130.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.movie04_ext = defalut;
      print(qcashier.screen130.movie04_ext);
      expect(qcashier.screen130.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04187_element_check_04164 **********\n\n");
    });

    test('04188_element_check_04165', () async {
      print("\n********** テスト実行：04188_element_check_04165 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.line_title;
      print(qcashier.screen130.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.line_title = testData1s;
      print(qcashier.screen130.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.line_title = testData2s;
      print(qcashier.screen130.line_title);
      expect(qcashier.screen130.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.line_title = defalut;
      print(qcashier.screen130.line_title);
      expect(qcashier.screen130.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04188_element_check_04165 **********\n\n");
    });

    test('04189_element_check_04166', () async {
      print("\n********** テスト実行：04189_element_check_04166 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.line_title_ex;
      print(qcashier.screen130.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.line_title_ex = testData1s;
      print(qcashier.screen130.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.line_title_ex = testData2s;
      print(qcashier.screen130.line_title_ex);
      expect(qcashier.screen130.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.line_title_ex = defalut;
      print(qcashier.screen130.line_title_ex);
      expect(qcashier.screen130.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04189_element_check_04166 **********\n\n");
    });

    test('04190_element_check_04167', () async {
      print("\n********** テスト実行：04190_element_check_04167 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.line1;
      print(qcashier.screen130.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.line1 = testData1s;
      print(qcashier.screen130.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.line1 = testData2s;
      print(qcashier.screen130.line1);
      expect(qcashier.screen130.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.line1 = defalut;
      print(qcashier.screen130.line1);
      expect(qcashier.screen130.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04190_element_check_04167 **********\n\n");
    });

    test('04191_element_check_04168', () async {
      print("\n********** テスト実行：04191_element_check_04168 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.line2;
      print(qcashier.screen130.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.line2 = testData1s;
      print(qcashier.screen130.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.line2 = testData2s;
      print(qcashier.screen130.line2);
      expect(qcashier.screen130.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.line2 = defalut;
      print(qcashier.screen130.line2);
      expect(qcashier.screen130.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04191_element_check_04168 **********\n\n");
    });

    test('04192_element_check_04169', () async {
      print("\n********** テスト実行：04192_element_check_04169 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.line3;
      print(qcashier.screen130.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.line3 = testData1s;
      print(qcashier.screen130.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.line3 = testData2s;
      print(qcashier.screen130.line3);
      expect(qcashier.screen130.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.line3 = defalut;
      print(qcashier.screen130.line3);
      expect(qcashier.screen130.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04192_element_check_04169 **********\n\n");
    });

    test('04193_element_check_04170', () async {
      print("\n********** テスト実行：04193_element_check_04170 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.line4;
      print(qcashier.screen130.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.line4 = testData1s;
      print(qcashier.screen130.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.line4 = testData2s;
      print(qcashier.screen130.line4);
      expect(qcashier.screen130.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.line4 = defalut;
      print(qcashier.screen130.line4);
      expect(qcashier.screen130.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04193_element_check_04170 **********\n\n");
    });

    test('04194_element_check_04171', () async {
      print("\n********** テスト実行：04194_element_check_04171 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.line1_ex;
      print(qcashier.screen130.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.line1_ex = testData1s;
      print(qcashier.screen130.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.line1_ex = testData2s;
      print(qcashier.screen130.line1_ex);
      expect(qcashier.screen130.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.line1_ex = defalut;
      print(qcashier.screen130.line1_ex);
      expect(qcashier.screen130.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04194_element_check_04171 **********\n\n");
    });

    test('04195_element_check_04172', () async {
      print("\n********** テスト実行：04195_element_check_04172 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.line2_ex;
      print(qcashier.screen130.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.line2_ex = testData1s;
      print(qcashier.screen130.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.line2_ex = testData2s;
      print(qcashier.screen130.line2_ex);
      expect(qcashier.screen130.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.line2_ex = defalut;
      print(qcashier.screen130.line2_ex);
      expect(qcashier.screen130.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04195_element_check_04172 **********\n\n");
    });

    test('04196_element_check_04173', () async {
      print("\n********** テスト実行：04196_element_check_04173 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.line3_ex;
      print(qcashier.screen130.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.line3_ex = testData1s;
      print(qcashier.screen130.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.line3_ex = testData2s;
      print(qcashier.screen130.line3_ex);
      expect(qcashier.screen130.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.line3_ex = defalut;
      print(qcashier.screen130.line3_ex);
      expect(qcashier.screen130.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04196_element_check_04173 **********\n\n");
    });

    test('04197_element_check_04174', () async {
      print("\n********** テスト実行：04197_element_check_04174 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.line4_ex;
      print(qcashier.screen130.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.line4_ex = testData1s;
      print(qcashier.screen130.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.line4_ex = testData2s;
      print(qcashier.screen130.line4_ex);
      expect(qcashier.screen130.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.line4_ex = defalut;
      print(qcashier.screen130.line4_ex);
      expect(qcashier.screen130.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04197_element_check_04174 **********\n\n");
    });

    test('04198_element_check_04175', () async {
      print("\n********** テスト実行：04198_element_check_04175 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.sound_led1;
      print(qcashier.screen130.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.sound_led1 = testData1;
      print(qcashier.screen130.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.sound_led1 = testData2;
      print(qcashier.screen130.sound_led1);
      expect(qcashier.screen130.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.sound_led1 = defalut;
      print(qcashier.screen130.sound_led1);
      expect(qcashier.screen130.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04198_element_check_04175 **********\n\n");
    });

    test('04199_element_check_04176', () async {
      print("\n********** テスト実行：04199_element_check_04176 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.sound_led2;
      print(qcashier.screen130.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.sound_led2 = testData1s;
      print(qcashier.screen130.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.sound_led2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.sound_led2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.sound_led2 = testData2s;
      print(qcashier.screen130.sound_led2);
      expect(qcashier.screen130.sound_led2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound_led2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.sound_led2 = defalut;
      print(qcashier.screen130.sound_led2);
      expect(qcashier.screen130.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04199_element_check_04176 **********\n\n");
    });

    test('04200_element_check_04177', () async {
      print("\n********** テスト実行：04200_element_check_04177 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen130.sound_led3;
      print(qcashier.screen130.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen130.sound_led3 = testData1s;
      print(qcashier.screen130.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen130.sound_led3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen130.sound_led3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen130.sound_led3 = testData2s;
      print(qcashier.screen130.sound_led3);
      expect(qcashier.screen130.sound_led3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound_led3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen130.sound_led3 = defalut;
      print(qcashier.screen130.sound_led3);
      expect(qcashier.screen130.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen130.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04200_element_check_04177 **********\n\n");
    });

    test('04201_element_check_04178', () async {
      print("\n********** テスト実行：04201_element_check_04178 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.title;
      print(qcashier.screen131.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.title = testData1s;
      print(qcashier.screen131.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.title = testData2s;
      print(qcashier.screen131.title);
      expect(qcashier.screen131.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.title = defalut;
      print(qcashier.screen131.title);
      expect(qcashier.screen131.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04201_element_check_04178 **********\n\n");
    });

    test('04202_element_check_04179', () async {
      print("\n********** テスト実行：04202_element_check_04179 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.msg1;
      print(qcashier.screen131.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.msg1 = testData1s;
      print(qcashier.screen131.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.msg1 = testData2s;
      print(qcashier.screen131.msg1);
      expect(qcashier.screen131.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.msg1 = defalut;
      print(qcashier.screen131.msg1);
      expect(qcashier.screen131.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04202_element_check_04179 **********\n\n");
    });

    test('04203_element_check_04180', () async {
      print("\n********** テスト実行：04203_element_check_04180 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.msg2;
      print(qcashier.screen131.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.msg2 = testData1s;
      print(qcashier.screen131.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.msg2 = testData2s;
      print(qcashier.screen131.msg2);
      expect(qcashier.screen131.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.msg2 = defalut;
      print(qcashier.screen131.msg2);
      expect(qcashier.screen131.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04203_element_check_04180 **********\n\n");
    });

    test('04204_element_check_04181', () async {
      print("\n********** テスト実行：04204_element_check_04181 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.msg1_size;
      print(qcashier.screen131.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.msg1_size = testData1;
      print(qcashier.screen131.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.msg1_size = testData2;
      print(qcashier.screen131.msg1_size);
      expect(qcashier.screen131.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.msg1_size = defalut;
      print(qcashier.screen131.msg1_size);
      expect(qcashier.screen131.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04204_element_check_04181 **********\n\n");
    });

    test('04205_element_check_04182', () async {
      print("\n********** テスト実行：04205_element_check_04182 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.msg2_size;
      print(qcashier.screen131.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.msg2_size = testData1;
      print(qcashier.screen131.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.msg2_size = testData2;
      print(qcashier.screen131.msg2_size);
      expect(qcashier.screen131.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.msg2_size = defalut;
      print(qcashier.screen131.msg2_size);
      expect(qcashier.screen131.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04205_element_check_04182 **********\n\n");
    });

    test('04206_element_check_04183', () async {
      print("\n********** テスト実行：04206_element_check_04183 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.sound1;
      print(qcashier.screen131.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.sound1 = testData1;
      print(qcashier.screen131.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.sound1 = testData2;
      print(qcashier.screen131.sound1);
      expect(qcashier.screen131.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.sound1 = defalut;
      print(qcashier.screen131.sound1);
      expect(qcashier.screen131.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04206_element_check_04183 **********\n\n");
    });

    test('04207_element_check_04184', () async {
      print("\n********** テスト実行：04207_element_check_04184 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.sound2;
      print(qcashier.screen131.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.sound2 = testData1;
      print(qcashier.screen131.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.sound2 = testData2;
      print(qcashier.screen131.sound2);
      expect(qcashier.screen131.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.sound2 = defalut;
      print(qcashier.screen131.sound2);
      expect(qcashier.screen131.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04207_element_check_04184 **********\n\n");
    });

    test('04208_element_check_04185', () async {
      print("\n********** テスト実行：04208_element_check_04185 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.sound3;
      print(qcashier.screen131.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.sound3 = testData1;
      print(qcashier.screen131.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.sound3 = testData2;
      print(qcashier.screen131.sound3);
      expect(qcashier.screen131.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.sound3 = defalut;
      print(qcashier.screen131.sound3);
      expect(qcashier.screen131.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04208_element_check_04185 **********\n\n");
    });

    test('04209_element_check_04186', () async {
      print("\n********** テスト実行：04209_element_check_04186 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.snd_timer;
      print(qcashier.screen131.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.snd_timer = testData1;
      print(qcashier.screen131.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.snd_timer = testData2;
      print(qcashier.screen131.snd_timer);
      expect(qcashier.screen131.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.snd_timer = defalut;
      print(qcashier.screen131.snd_timer);
      expect(qcashier.screen131.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04209_element_check_04186 **********\n\n");
    });

    test('04210_element_check_04187', () async {
      print("\n********** テスト実行：04210_element_check_04187 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.timer1;
      print(qcashier.screen131.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.timer1 = testData1;
      print(qcashier.screen131.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.timer1 = testData2;
      print(qcashier.screen131.timer1);
      expect(qcashier.screen131.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.timer1 = defalut;
      print(qcashier.screen131.timer1);
      expect(qcashier.screen131.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04210_element_check_04187 **********\n\n");
    });

    test('04211_element_check_04188', () async {
      print("\n********** テスト実行：04211_element_check_04188 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.timer2;
      print(qcashier.screen131.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.timer2 = testData1;
      print(qcashier.screen131.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.timer2 = testData2;
      print(qcashier.screen131.timer2);
      expect(qcashier.screen131.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.timer2 = defalut;
      print(qcashier.screen131.timer2);
      expect(qcashier.screen131.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04211_element_check_04188 **********\n\n");
    });

    test('04212_element_check_04189', () async {
      print("\n********** テスト実行：04212_element_check_04189 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.timer3;
      print(qcashier.screen131.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.timer3 = testData1;
      print(qcashier.screen131.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.timer3 = testData2;
      print(qcashier.screen131.timer3);
      expect(qcashier.screen131.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.timer3 = defalut;
      print(qcashier.screen131.timer3);
      expect(qcashier.screen131.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04212_element_check_04189 **********\n\n");
    });

    test('04213_element_check_04190', () async {
      print("\n********** テスト実行：04213_element_check_04190 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.dsp_flg1;
      print(qcashier.screen131.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.dsp_flg1 = testData1;
      print(qcashier.screen131.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.dsp_flg1 = testData2;
      print(qcashier.screen131.dsp_flg1);
      expect(qcashier.screen131.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.dsp_flg1 = defalut;
      print(qcashier.screen131.dsp_flg1);
      expect(qcashier.screen131.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04213_element_check_04190 **********\n\n");
    });

    test('04214_element_check_04191', () async {
      print("\n********** テスト実行：04214_element_check_04191 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.dsp_flg2;
      print(qcashier.screen131.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.dsp_flg2 = testData1;
      print(qcashier.screen131.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.dsp_flg2 = testData2;
      print(qcashier.screen131.dsp_flg2);
      expect(qcashier.screen131.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.dsp_flg2 = defalut;
      print(qcashier.screen131.dsp_flg2);
      expect(qcashier.screen131.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04214_element_check_04191 **********\n\n");
    });

    test('04215_element_check_04192', () async {
      print("\n********** テスト実行：04215_element_check_04192 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.movie01_ext;
      print(qcashier.screen131.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.movie01_ext = testData1;
      print(qcashier.screen131.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.movie01_ext = testData2;
      print(qcashier.screen131.movie01_ext);
      expect(qcashier.screen131.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.movie01_ext = defalut;
      print(qcashier.screen131.movie01_ext);
      expect(qcashier.screen131.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04215_element_check_04192 **********\n\n");
    });

    test('04216_element_check_04193', () async {
      print("\n********** テスト実行：04216_element_check_04193 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.movie02_ext;
      print(qcashier.screen131.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.movie02_ext = testData1;
      print(qcashier.screen131.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.movie02_ext = testData2;
      print(qcashier.screen131.movie02_ext);
      expect(qcashier.screen131.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.movie02_ext = defalut;
      print(qcashier.screen131.movie02_ext);
      expect(qcashier.screen131.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04216_element_check_04193 **********\n\n");
    });

    test('04217_element_check_04194', () async {
      print("\n********** テスト実行：04217_element_check_04194 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.movie03_ext;
      print(qcashier.screen131.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.movie03_ext = testData1;
      print(qcashier.screen131.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.movie03_ext = testData2;
      print(qcashier.screen131.movie03_ext);
      expect(qcashier.screen131.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.movie03_ext = defalut;
      print(qcashier.screen131.movie03_ext);
      expect(qcashier.screen131.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04217_element_check_04194 **********\n\n");
    });

    test('04218_element_check_04195', () async {
      print("\n********** テスト実行：04218_element_check_04195 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.movie04_ext;
      print(qcashier.screen131.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.movie04_ext = testData1;
      print(qcashier.screen131.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.movie04_ext = testData2;
      print(qcashier.screen131.movie04_ext);
      expect(qcashier.screen131.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.movie04_ext = defalut;
      print(qcashier.screen131.movie04_ext);
      expect(qcashier.screen131.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04218_element_check_04195 **********\n\n");
    });

    test('04219_element_check_04196', () async {
      print("\n********** テスト実行：04219_element_check_04196 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.line_title;
      print(qcashier.screen131.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.line_title = testData1s;
      print(qcashier.screen131.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.line_title = testData2s;
      print(qcashier.screen131.line_title);
      expect(qcashier.screen131.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.line_title = defalut;
      print(qcashier.screen131.line_title);
      expect(qcashier.screen131.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04219_element_check_04196 **********\n\n");
    });

    test('04220_element_check_04197', () async {
      print("\n********** テスト実行：04220_element_check_04197 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.line_title_ex;
      print(qcashier.screen131.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.line_title_ex = testData1s;
      print(qcashier.screen131.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.line_title_ex = testData2s;
      print(qcashier.screen131.line_title_ex);
      expect(qcashier.screen131.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.line_title_ex = defalut;
      print(qcashier.screen131.line_title_ex);
      expect(qcashier.screen131.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04220_element_check_04197 **********\n\n");
    });

    test('04221_element_check_04198', () async {
      print("\n********** テスト実行：04221_element_check_04198 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.line1;
      print(qcashier.screen131.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.line1 = testData1s;
      print(qcashier.screen131.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.line1 = testData2s;
      print(qcashier.screen131.line1);
      expect(qcashier.screen131.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.line1 = defalut;
      print(qcashier.screen131.line1);
      expect(qcashier.screen131.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04221_element_check_04198 **********\n\n");
    });

    test('04222_element_check_04199', () async {
      print("\n********** テスト実行：04222_element_check_04199 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.line2;
      print(qcashier.screen131.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.line2 = testData1s;
      print(qcashier.screen131.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.line2 = testData2s;
      print(qcashier.screen131.line2);
      expect(qcashier.screen131.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.line2 = defalut;
      print(qcashier.screen131.line2);
      expect(qcashier.screen131.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04222_element_check_04199 **********\n\n");
    });

    test('04223_element_check_04200', () async {
      print("\n********** テスト実行：04223_element_check_04200 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.line3;
      print(qcashier.screen131.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.line3 = testData1s;
      print(qcashier.screen131.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.line3 = testData2s;
      print(qcashier.screen131.line3);
      expect(qcashier.screen131.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.line3 = defalut;
      print(qcashier.screen131.line3);
      expect(qcashier.screen131.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04223_element_check_04200 **********\n\n");
    });

    test('04224_element_check_04201', () async {
      print("\n********** テスト実行：04224_element_check_04201 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.line4;
      print(qcashier.screen131.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.line4 = testData1s;
      print(qcashier.screen131.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.line4 = testData2s;
      print(qcashier.screen131.line4);
      expect(qcashier.screen131.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.line4 = defalut;
      print(qcashier.screen131.line4);
      expect(qcashier.screen131.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04224_element_check_04201 **********\n\n");
    });

    test('04225_element_check_04202', () async {
      print("\n********** テスト実行：04225_element_check_04202 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.line1_ex;
      print(qcashier.screen131.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.line1_ex = testData1s;
      print(qcashier.screen131.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.line1_ex = testData2s;
      print(qcashier.screen131.line1_ex);
      expect(qcashier.screen131.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.line1_ex = defalut;
      print(qcashier.screen131.line1_ex);
      expect(qcashier.screen131.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04225_element_check_04202 **********\n\n");
    });

    test('04226_element_check_04203', () async {
      print("\n********** テスト実行：04226_element_check_04203 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.line2_ex;
      print(qcashier.screen131.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.line2_ex = testData1s;
      print(qcashier.screen131.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.line2_ex = testData2s;
      print(qcashier.screen131.line2_ex);
      expect(qcashier.screen131.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.line2_ex = defalut;
      print(qcashier.screen131.line2_ex);
      expect(qcashier.screen131.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04226_element_check_04203 **********\n\n");
    });

    test('04227_element_check_04204', () async {
      print("\n********** テスト実行：04227_element_check_04204 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.line3_ex;
      print(qcashier.screen131.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.line3_ex = testData1s;
      print(qcashier.screen131.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.line3_ex = testData2s;
      print(qcashier.screen131.line3_ex);
      expect(qcashier.screen131.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.line3_ex = defalut;
      print(qcashier.screen131.line3_ex);
      expect(qcashier.screen131.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04227_element_check_04204 **********\n\n");
    });

    test('04228_element_check_04205', () async {
      print("\n********** テスト実行：04228_element_check_04205 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.line4_ex;
      print(qcashier.screen131.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.line4_ex = testData1s;
      print(qcashier.screen131.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.line4_ex = testData2s;
      print(qcashier.screen131.line4_ex);
      expect(qcashier.screen131.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.line4_ex = defalut;
      print(qcashier.screen131.line4_ex);
      expect(qcashier.screen131.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04228_element_check_04205 **********\n\n");
    });

    test('04229_element_check_04206', () async {
      print("\n********** テスト実行：04229_element_check_04206 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.sound_led1;
      print(qcashier.screen131.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.sound_led1 = testData1;
      print(qcashier.screen131.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.sound_led1 = testData2;
      print(qcashier.screen131.sound_led1);
      expect(qcashier.screen131.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.sound_led1 = defalut;
      print(qcashier.screen131.sound_led1);
      expect(qcashier.screen131.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04229_element_check_04206 **********\n\n");
    });

    test('04230_element_check_04207', () async {
      print("\n********** テスト実行：04230_element_check_04207 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.sound_led2;
      print(qcashier.screen131.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.sound_led2 = testData1;
      print(qcashier.screen131.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.sound_led2 = testData2;
      print(qcashier.screen131.sound_led2);
      expect(qcashier.screen131.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.sound_led2 = defalut;
      print(qcashier.screen131.sound_led2);
      expect(qcashier.screen131.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04230_element_check_04207 **********\n\n");
    });

    test('04231_element_check_04208', () async {
      print("\n********** テスト実行：04231_element_check_04208 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen131.sound_led3;
      print(qcashier.screen131.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen131.sound_led3 = testData1;
      print(qcashier.screen131.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen131.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen131.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen131.sound_led3 = testData2;
      print(qcashier.screen131.sound_led3);
      expect(qcashier.screen131.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen131.sound_led3 = defalut;
      print(qcashier.screen131.sound_led3);
      expect(qcashier.screen131.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen131.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04231_element_check_04208 **********\n\n");
    });

    test('04232_element_check_04209', () async {
      print("\n********** テスト実行：04232_element_check_04209 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.title;
      print(qcashier.screen132.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.title = testData1s;
      print(qcashier.screen132.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.title = testData2s;
      print(qcashier.screen132.title);
      expect(qcashier.screen132.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.title = defalut;
      print(qcashier.screen132.title);
      expect(qcashier.screen132.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04232_element_check_04209 **********\n\n");
    });

    test('04233_element_check_04210', () async {
      print("\n********** テスト実行：04233_element_check_04210 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.msg1;
      print(qcashier.screen132.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.msg1 = testData1s;
      print(qcashier.screen132.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.msg1 = testData2s;
      print(qcashier.screen132.msg1);
      expect(qcashier.screen132.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.msg1 = defalut;
      print(qcashier.screen132.msg1);
      expect(qcashier.screen132.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04233_element_check_04210 **********\n\n");
    });

    test('04234_element_check_04211', () async {
      print("\n********** テスト実行：04234_element_check_04211 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.msg2;
      print(qcashier.screen132.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.msg2 = testData1s;
      print(qcashier.screen132.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.msg2 = testData2s;
      print(qcashier.screen132.msg2);
      expect(qcashier.screen132.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.msg2 = defalut;
      print(qcashier.screen132.msg2);
      expect(qcashier.screen132.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04234_element_check_04211 **********\n\n");
    });

    test('04235_element_check_04212', () async {
      print("\n********** テスト実行：04235_element_check_04212 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.msg1_size;
      print(qcashier.screen132.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.msg1_size = testData1;
      print(qcashier.screen132.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.msg1_size = testData2;
      print(qcashier.screen132.msg1_size);
      expect(qcashier.screen132.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.msg1_size = defalut;
      print(qcashier.screen132.msg1_size);
      expect(qcashier.screen132.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04235_element_check_04212 **********\n\n");
    });

    test('04236_element_check_04213', () async {
      print("\n********** テスト実行：04236_element_check_04213 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.msg2_size;
      print(qcashier.screen132.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.msg2_size = testData1s;
      print(qcashier.screen132.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.msg2_size == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.msg2_size == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.msg2_size = testData2s;
      print(qcashier.screen132.msg2_size);
      expect(qcashier.screen132.msg2_size == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.msg2_size == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.msg2_size = defalut;
      print(qcashier.screen132.msg2_size);
      expect(qcashier.screen132.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04236_element_check_04213 **********\n\n");
    });

    test('04237_element_check_04214', () async {
      print("\n********** テスト実行：04237_element_check_04214 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.sound1;
      print(qcashier.screen132.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.sound1 = testData1;
      print(qcashier.screen132.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.sound1 = testData2;
      print(qcashier.screen132.sound1);
      expect(qcashier.screen132.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.sound1 = defalut;
      print(qcashier.screen132.sound1);
      expect(qcashier.screen132.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04237_element_check_04214 **********\n\n");
    });

    test('04238_element_check_04215', () async {
      print("\n********** テスト実行：04238_element_check_04215 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.sound2;
      print(qcashier.screen132.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.sound2 = testData1;
      print(qcashier.screen132.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.sound2 = testData2;
      print(qcashier.screen132.sound2);
      expect(qcashier.screen132.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.sound2 = defalut;
      print(qcashier.screen132.sound2);
      expect(qcashier.screen132.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04238_element_check_04215 **********\n\n");
    });

    test('04239_element_check_04216', () async {
      print("\n********** テスト実行：04239_element_check_04216 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.sound3;
      print(qcashier.screen132.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.sound3 = testData1;
      print(qcashier.screen132.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.sound3 = testData2;
      print(qcashier.screen132.sound3);
      expect(qcashier.screen132.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.sound3 = defalut;
      print(qcashier.screen132.sound3);
      expect(qcashier.screen132.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04239_element_check_04216 **********\n\n");
    });

    test('04240_element_check_04217', () async {
      print("\n********** テスト実行：04240_element_check_04217 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.snd_timer;
      print(qcashier.screen132.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.snd_timer = testData1;
      print(qcashier.screen132.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.snd_timer = testData2;
      print(qcashier.screen132.snd_timer);
      expect(qcashier.screen132.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.snd_timer = defalut;
      print(qcashier.screen132.snd_timer);
      expect(qcashier.screen132.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04240_element_check_04217 **********\n\n");
    });

    test('04241_element_check_04218', () async {
      print("\n********** テスト実行：04241_element_check_04218 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.timer1;
      print(qcashier.screen132.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.timer1 = testData1;
      print(qcashier.screen132.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.timer1 = testData2;
      print(qcashier.screen132.timer1);
      expect(qcashier.screen132.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.timer1 = defalut;
      print(qcashier.screen132.timer1);
      expect(qcashier.screen132.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04241_element_check_04218 **********\n\n");
    });

    test('04242_element_check_04219', () async {
      print("\n********** テスト実行：04242_element_check_04219 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.timer2;
      print(qcashier.screen132.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.timer2 = testData1;
      print(qcashier.screen132.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.timer2 = testData2;
      print(qcashier.screen132.timer2);
      expect(qcashier.screen132.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.timer2 = defalut;
      print(qcashier.screen132.timer2);
      expect(qcashier.screen132.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04242_element_check_04219 **********\n\n");
    });

    test('04243_element_check_04220', () async {
      print("\n********** テスト実行：04243_element_check_04220 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.timer3;
      print(qcashier.screen132.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.timer3 = testData1;
      print(qcashier.screen132.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.timer3 = testData2;
      print(qcashier.screen132.timer3);
      expect(qcashier.screen132.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.timer3 = defalut;
      print(qcashier.screen132.timer3);
      expect(qcashier.screen132.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04243_element_check_04220 **********\n\n");
    });

    test('04244_element_check_04221', () async {
      print("\n********** テスト実行：04244_element_check_04221 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.dsp_flg1;
      print(qcashier.screen132.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.dsp_flg1 = testData1;
      print(qcashier.screen132.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.dsp_flg1 = testData2;
      print(qcashier.screen132.dsp_flg1);
      expect(qcashier.screen132.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.dsp_flg1 = defalut;
      print(qcashier.screen132.dsp_flg1);
      expect(qcashier.screen132.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04244_element_check_04221 **********\n\n");
    });

    test('04245_element_check_04222', () async {
      print("\n********** テスト実行：04245_element_check_04222 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.dsp_flg2;
      print(qcashier.screen132.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.dsp_flg2 = testData1;
      print(qcashier.screen132.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.dsp_flg2 = testData2;
      print(qcashier.screen132.dsp_flg2);
      expect(qcashier.screen132.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.dsp_flg2 = defalut;
      print(qcashier.screen132.dsp_flg2);
      expect(qcashier.screen132.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04245_element_check_04222 **********\n\n");
    });

    test('04246_element_check_04223', () async {
      print("\n********** テスト実行：04246_element_check_04223 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.movie01_ext;
      print(qcashier.screen132.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.movie01_ext = testData1;
      print(qcashier.screen132.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.movie01_ext = testData2;
      print(qcashier.screen132.movie01_ext);
      expect(qcashier.screen132.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.movie01_ext = defalut;
      print(qcashier.screen132.movie01_ext);
      expect(qcashier.screen132.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04246_element_check_04223 **********\n\n");
    });

    test('04247_element_check_04224', () async {
      print("\n********** テスト実行：04247_element_check_04224 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.movie02_ext;
      print(qcashier.screen132.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.movie02_ext = testData1;
      print(qcashier.screen132.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.movie02_ext = testData2;
      print(qcashier.screen132.movie02_ext);
      expect(qcashier.screen132.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.movie02_ext = defalut;
      print(qcashier.screen132.movie02_ext);
      expect(qcashier.screen132.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04247_element_check_04224 **********\n\n");
    });

    test('04248_element_check_04225', () async {
      print("\n********** テスト実行：04248_element_check_04225 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.movie03_ext;
      print(qcashier.screen132.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.movie03_ext = testData1;
      print(qcashier.screen132.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.movie03_ext = testData2;
      print(qcashier.screen132.movie03_ext);
      expect(qcashier.screen132.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.movie03_ext = defalut;
      print(qcashier.screen132.movie03_ext);
      expect(qcashier.screen132.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04248_element_check_04225 **********\n\n");
    });

    test('04249_element_check_04226', () async {
      print("\n********** テスト実行：04249_element_check_04226 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.movie04_ext;
      print(qcashier.screen132.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.movie04_ext = testData1;
      print(qcashier.screen132.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.movie04_ext = testData2;
      print(qcashier.screen132.movie04_ext);
      expect(qcashier.screen132.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.movie04_ext = defalut;
      print(qcashier.screen132.movie04_ext);
      expect(qcashier.screen132.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04249_element_check_04226 **********\n\n");
    });

    test('04250_element_check_04227', () async {
      print("\n********** テスト実行：04250_element_check_04227 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.line_title;
      print(qcashier.screen132.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.line_title = testData1s;
      print(qcashier.screen132.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.line_title = testData2s;
      print(qcashier.screen132.line_title);
      expect(qcashier.screen132.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.line_title = defalut;
      print(qcashier.screen132.line_title);
      expect(qcashier.screen132.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04250_element_check_04227 **********\n\n");
    });

    test('04251_element_check_04228', () async {
      print("\n********** テスト実行：04251_element_check_04228 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.line_title_ex;
      print(qcashier.screen132.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.line_title_ex = testData1s;
      print(qcashier.screen132.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.line_title_ex = testData2s;
      print(qcashier.screen132.line_title_ex);
      expect(qcashier.screen132.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.line_title_ex = defalut;
      print(qcashier.screen132.line_title_ex);
      expect(qcashier.screen132.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04251_element_check_04228 **********\n\n");
    });

    test('04252_element_check_04229', () async {
      print("\n********** テスト実行：04252_element_check_04229 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.line1;
      print(qcashier.screen132.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.line1 = testData1s;
      print(qcashier.screen132.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.line1 = testData2s;
      print(qcashier.screen132.line1);
      expect(qcashier.screen132.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.line1 = defalut;
      print(qcashier.screen132.line1);
      expect(qcashier.screen132.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04252_element_check_04229 **********\n\n");
    });

    test('04253_element_check_04230', () async {
      print("\n********** テスト実行：04253_element_check_04230 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.line2;
      print(qcashier.screen132.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.line2 = testData1s;
      print(qcashier.screen132.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.line2 = testData2s;
      print(qcashier.screen132.line2);
      expect(qcashier.screen132.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.line2 = defalut;
      print(qcashier.screen132.line2);
      expect(qcashier.screen132.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04253_element_check_04230 **********\n\n");
    });

    test('04254_element_check_04231', () async {
      print("\n********** テスト実行：04254_element_check_04231 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.line3;
      print(qcashier.screen132.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.line3 = testData1s;
      print(qcashier.screen132.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.line3 = testData2s;
      print(qcashier.screen132.line3);
      expect(qcashier.screen132.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.line3 = defalut;
      print(qcashier.screen132.line3);
      expect(qcashier.screen132.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04254_element_check_04231 **********\n\n");
    });

    test('04255_element_check_04232', () async {
      print("\n********** テスト実行：04255_element_check_04232 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.line4;
      print(qcashier.screen132.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.line4 = testData1s;
      print(qcashier.screen132.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.line4 = testData2s;
      print(qcashier.screen132.line4);
      expect(qcashier.screen132.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.line4 = defalut;
      print(qcashier.screen132.line4);
      expect(qcashier.screen132.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04255_element_check_04232 **********\n\n");
    });

    test('04256_element_check_04233', () async {
      print("\n********** テスト実行：04256_element_check_04233 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.line1_ex;
      print(qcashier.screen132.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.line1_ex = testData1s;
      print(qcashier.screen132.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.line1_ex = testData2s;
      print(qcashier.screen132.line1_ex);
      expect(qcashier.screen132.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.line1_ex = defalut;
      print(qcashier.screen132.line1_ex);
      expect(qcashier.screen132.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04256_element_check_04233 **********\n\n");
    });

    test('04257_element_check_04234', () async {
      print("\n********** テスト実行：04257_element_check_04234 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.line2_ex;
      print(qcashier.screen132.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.line2_ex = testData1s;
      print(qcashier.screen132.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.line2_ex = testData2s;
      print(qcashier.screen132.line2_ex);
      expect(qcashier.screen132.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.line2_ex = defalut;
      print(qcashier.screen132.line2_ex);
      expect(qcashier.screen132.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04257_element_check_04234 **********\n\n");
    });

    test('04258_element_check_04235', () async {
      print("\n********** テスト実行：04258_element_check_04235 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.line3_ex;
      print(qcashier.screen132.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.line3_ex = testData1s;
      print(qcashier.screen132.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.line3_ex = testData2s;
      print(qcashier.screen132.line3_ex);
      expect(qcashier.screen132.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.line3_ex = defalut;
      print(qcashier.screen132.line3_ex);
      expect(qcashier.screen132.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04258_element_check_04235 **********\n\n");
    });

    test('04259_element_check_04236', () async {
      print("\n********** テスト実行：04259_element_check_04236 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.line4_ex;
      print(qcashier.screen132.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.line4_ex = testData1s;
      print(qcashier.screen132.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.line4_ex = testData2s;
      print(qcashier.screen132.line4_ex);
      expect(qcashier.screen132.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.line4_ex = defalut;
      print(qcashier.screen132.line4_ex);
      expect(qcashier.screen132.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04259_element_check_04236 **********\n\n");
    });

    test('04260_element_check_04237', () async {
      print("\n********** テスト実行：04260_element_check_04237 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.sound_led1;
      print(qcashier.screen132.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.sound_led1 = testData1;
      print(qcashier.screen132.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.sound_led1 = testData2;
      print(qcashier.screen132.sound_led1);
      expect(qcashier.screen132.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.sound_led1 = defalut;
      print(qcashier.screen132.sound_led1);
      expect(qcashier.screen132.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04260_element_check_04237 **********\n\n");
    });

    test('04261_element_check_04238', () async {
      print("\n********** テスト実行：04261_element_check_04238 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.sound_led2;
      print(qcashier.screen132.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.sound_led2 = testData1;
      print(qcashier.screen132.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.sound_led2 = testData2;
      print(qcashier.screen132.sound_led2);
      expect(qcashier.screen132.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.sound_led2 = defalut;
      print(qcashier.screen132.sound_led2);
      expect(qcashier.screen132.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04261_element_check_04238 **********\n\n");
    });

    test('04262_element_check_04239', () async {
      print("\n********** テスト実行：04262_element_check_04239 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen132.sound_led3;
      print(qcashier.screen132.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen132.sound_led3 = testData1;
      print(qcashier.screen132.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen132.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen132.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen132.sound_led3 = testData2;
      print(qcashier.screen132.sound_led3);
      expect(qcashier.screen132.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen132.sound_led3 = defalut;
      print(qcashier.screen132.sound_led3);
      expect(qcashier.screen132.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen132.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04262_element_check_04239 **********\n\n");
    });

    test('04263_element_check_04240', () async {
      print("\n********** テスト実行：04263_element_check_04240 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.title;
      print(qcashier.screen133.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.title = testData1s;
      print(qcashier.screen133.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.title = testData2s;
      print(qcashier.screen133.title);
      expect(qcashier.screen133.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.title = defalut;
      print(qcashier.screen133.title);
      expect(qcashier.screen133.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04263_element_check_04240 **********\n\n");
    });

    test('04264_element_check_04241', () async {
      print("\n********** テスト実行：04264_element_check_04241 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.msg1;
      print(qcashier.screen133.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.msg1 = testData1s;
      print(qcashier.screen133.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.msg1 = testData2s;
      print(qcashier.screen133.msg1);
      expect(qcashier.screen133.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.msg1 = defalut;
      print(qcashier.screen133.msg1);
      expect(qcashier.screen133.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04264_element_check_04241 **********\n\n");
    });

    test('04265_element_check_04242', () async {
      print("\n********** テスト実行：04265_element_check_04242 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.msg2;
      print(qcashier.screen133.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.msg2 = testData1s;
      print(qcashier.screen133.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.msg2 = testData2s;
      print(qcashier.screen133.msg2);
      expect(qcashier.screen133.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.msg2 = defalut;
      print(qcashier.screen133.msg2);
      expect(qcashier.screen133.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04265_element_check_04242 **********\n\n");
    });

    test('04266_element_check_04243', () async {
      print("\n********** テスト実行：04266_element_check_04243 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.msg1_size;
      print(qcashier.screen133.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.msg1_size = testData1;
      print(qcashier.screen133.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.msg1_size = testData2;
      print(qcashier.screen133.msg1_size);
      expect(qcashier.screen133.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.msg1_size = defalut;
      print(qcashier.screen133.msg1_size);
      expect(qcashier.screen133.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04266_element_check_04243 **********\n\n");
    });

    test('04267_element_check_04244', () async {
      print("\n********** テスト実行：04267_element_check_04244 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.msg2_size;
      print(qcashier.screen133.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.msg2_size = testData1;
      print(qcashier.screen133.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.msg2_size = testData2;
      print(qcashier.screen133.msg2_size);
      expect(qcashier.screen133.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.msg2_size = defalut;
      print(qcashier.screen133.msg2_size);
      expect(qcashier.screen133.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04267_element_check_04244 **********\n\n");
    });

    test('04268_element_check_04245', () async {
      print("\n********** テスト実行：04268_element_check_04245 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.sound1;
      print(qcashier.screen133.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.sound1 = testData1;
      print(qcashier.screen133.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.sound1 = testData2;
      print(qcashier.screen133.sound1);
      expect(qcashier.screen133.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.sound1 = defalut;
      print(qcashier.screen133.sound1);
      expect(qcashier.screen133.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04268_element_check_04245 **********\n\n");
    });

    test('04269_element_check_04246', () async {
      print("\n********** テスト実行：04269_element_check_04246 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.sound2;
      print(qcashier.screen133.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.sound2 = testData1;
      print(qcashier.screen133.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.sound2 = testData2;
      print(qcashier.screen133.sound2);
      expect(qcashier.screen133.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.sound2 = defalut;
      print(qcashier.screen133.sound2);
      expect(qcashier.screen133.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04269_element_check_04246 **********\n\n");
    });

    test('04270_element_check_04247', () async {
      print("\n********** テスト実行：04270_element_check_04247 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.sound3;
      print(qcashier.screen133.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.sound3 = testData1;
      print(qcashier.screen133.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.sound3 = testData2;
      print(qcashier.screen133.sound3);
      expect(qcashier.screen133.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.sound3 = defalut;
      print(qcashier.screen133.sound3);
      expect(qcashier.screen133.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04270_element_check_04247 **********\n\n");
    });

    test('04271_element_check_04248', () async {
      print("\n********** テスト実行：04271_element_check_04248 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.snd_timer;
      print(qcashier.screen133.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.snd_timer = testData1;
      print(qcashier.screen133.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.snd_timer = testData2;
      print(qcashier.screen133.snd_timer);
      expect(qcashier.screen133.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.snd_timer = defalut;
      print(qcashier.screen133.snd_timer);
      expect(qcashier.screen133.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04271_element_check_04248 **********\n\n");
    });

    test('04272_element_check_04249', () async {
      print("\n********** テスト実行：04272_element_check_04249 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.timer1;
      print(qcashier.screen133.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.timer1 = testData1;
      print(qcashier.screen133.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.timer1 = testData2;
      print(qcashier.screen133.timer1);
      expect(qcashier.screen133.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.timer1 = defalut;
      print(qcashier.screen133.timer1);
      expect(qcashier.screen133.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04272_element_check_04249 **********\n\n");
    });

    test('04273_element_check_04250', () async {
      print("\n********** テスト実行：04273_element_check_04250 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.timer2;
      print(qcashier.screen133.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.timer2 = testData1;
      print(qcashier.screen133.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.timer2 = testData2;
      print(qcashier.screen133.timer2);
      expect(qcashier.screen133.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.timer2 = defalut;
      print(qcashier.screen133.timer2);
      expect(qcashier.screen133.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04273_element_check_04250 **********\n\n");
    });

    test('04274_element_check_04251', () async {
      print("\n********** テスト実行：04274_element_check_04251 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.timer3;
      print(qcashier.screen133.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.timer3 = testData1;
      print(qcashier.screen133.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.timer3 = testData2;
      print(qcashier.screen133.timer3);
      expect(qcashier.screen133.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.timer3 = defalut;
      print(qcashier.screen133.timer3);
      expect(qcashier.screen133.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04274_element_check_04251 **********\n\n");
    });

    test('04275_element_check_04252', () async {
      print("\n********** テスト実行：04275_element_check_04252 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.dsp_flg1;
      print(qcashier.screen133.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.dsp_flg1 = testData1;
      print(qcashier.screen133.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.dsp_flg1 = testData2;
      print(qcashier.screen133.dsp_flg1);
      expect(qcashier.screen133.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.dsp_flg1 = defalut;
      print(qcashier.screen133.dsp_flg1);
      expect(qcashier.screen133.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04275_element_check_04252 **********\n\n");
    });

    test('04276_element_check_04253', () async {
      print("\n********** テスト実行：04276_element_check_04253 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.dsp_flg2;
      print(qcashier.screen133.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.dsp_flg2 = testData1;
      print(qcashier.screen133.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.dsp_flg2 = testData2;
      print(qcashier.screen133.dsp_flg2);
      expect(qcashier.screen133.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.dsp_flg2 = defalut;
      print(qcashier.screen133.dsp_flg2);
      expect(qcashier.screen133.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04276_element_check_04253 **********\n\n");
    });

    test('04277_element_check_04254', () async {
      print("\n********** テスト実行：04277_element_check_04254 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.movie01_ext;
      print(qcashier.screen133.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.movie01_ext = testData1;
      print(qcashier.screen133.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.movie01_ext = testData2;
      print(qcashier.screen133.movie01_ext);
      expect(qcashier.screen133.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.movie01_ext = defalut;
      print(qcashier.screen133.movie01_ext);
      expect(qcashier.screen133.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04277_element_check_04254 **********\n\n");
    });

    test('04278_element_check_04255', () async {
      print("\n********** テスト実行：04278_element_check_04255 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.movie02_ext;
      print(qcashier.screen133.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.movie02_ext = testData1;
      print(qcashier.screen133.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.movie02_ext = testData2;
      print(qcashier.screen133.movie02_ext);
      expect(qcashier.screen133.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.movie02_ext = defalut;
      print(qcashier.screen133.movie02_ext);
      expect(qcashier.screen133.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04278_element_check_04255 **********\n\n");
    });

    test('04279_element_check_04256', () async {
      print("\n********** テスト実行：04279_element_check_04256 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.movie03_ext;
      print(qcashier.screen133.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.movie03_ext = testData1;
      print(qcashier.screen133.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.movie03_ext = testData2;
      print(qcashier.screen133.movie03_ext);
      expect(qcashier.screen133.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.movie03_ext = defalut;
      print(qcashier.screen133.movie03_ext);
      expect(qcashier.screen133.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04279_element_check_04256 **********\n\n");
    });

    test('04280_element_check_04257', () async {
      print("\n********** テスト実行：04280_element_check_04257 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.movie04_ext;
      print(qcashier.screen133.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.movie04_ext = testData1;
      print(qcashier.screen133.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.movie04_ext = testData2;
      print(qcashier.screen133.movie04_ext);
      expect(qcashier.screen133.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.movie04_ext = defalut;
      print(qcashier.screen133.movie04_ext);
      expect(qcashier.screen133.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04280_element_check_04257 **********\n\n");
    });

    test('04281_element_check_04258', () async {
      print("\n********** テスト実行：04281_element_check_04258 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.line_title;
      print(qcashier.screen133.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.line_title = testData1s;
      print(qcashier.screen133.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.line_title = testData2s;
      print(qcashier.screen133.line_title);
      expect(qcashier.screen133.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.line_title = defalut;
      print(qcashier.screen133.line_title);
      expect(qcashier.screen133.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04281_element_check_04258 **********\n\n");
    });

    test('04282_element_check_04259', () async {
      print("\n********** テスト実行：04282_element_check_04259 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.line_title_ex;
      print(qcashier.screen133.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.line_title_ex = testData1s;
      print(qcashier.screen133.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.line_title_ex = testData2s;
      print(qcashier.screen133.line_title_ex);
      expect(qcashier.screen133.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.line_title_ex = defalut;
      print(qcashier.screen133.line_title_ex);
      expect(qcashier.screen133.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04282_element_check_04259 **********\n\n");
    });

    test('04283_element_check_04260', () async {
      print("\n********** テスト実行：04283_element_check_04260 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.line1;
      print(qcashier.screen133.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.line1 = testData1s;
      print(qcashier.screen133.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.line1 = testData2s;
      print(qcashier.screen133.line1);
      expect(qcashier.screen133.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.line1 = defalut;
      print(qcashier.screen133.line1);
      expect(qcashier.screen133.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04283_element_check_04260 **********\n\n");
    });

    test('04284_element_check_04261', () async {
      print("\n********** テスト実行：04284_element_check_04261 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.line2;
      print(qcashier.screen133.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.line2 = testData1s;
      print(qcashier.screen133.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.line2 = testData2s;
      print(qcashier.screen133.line2);
      expect(qcashier.screen133.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.line2 = defalut;
      print(qcashier.screen133.line2);
      expect(qcashier.screen133.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04284_element_check_04261 **********\n\n");
    });

    test('04285_element_check_04262', () async {
      print("\n********** テスト実行：04285_element_check_04262 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.line3;
      print(qcashier.screen133.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.line3 = testData1s;
      print(qcashier.screen133.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.line3 = testData2s;
      print(qcashier.screen133.line3);
      expect(qcashier.screen133.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.line3 = defalut;
      print(qcashier.screen133.line3);
      expect(qcashier.screen133.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04285_element_check_04262 **********\n\n");
    });

    test('04286_element_check_04263', () async {
      print("\n********** テスト実行：04286_element_check_04263 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.line4;
      print(qcashier.screen133.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.line4 = testData1s;
      print(qcashier.screen133.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.line4 = testData2s;
      print(qcashier.screen133.line4);
      expect(qcashier.screen133.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.line4 = defalut;
      print(qcashier.screen133.line4);
      expect(qcashier.screen133.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04286_element_check_04263 **********\n\n");
    });

    test('04287_element_check_04264', () async {
      print("\n********** テスト実行：04287_element_check_04264 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.line1_ex;
      print(qcashier.screen133.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.line1_ex = testData1s;
      print(qcashier.screen133.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.line1_ex = testData2s;
      print(qcashier.screen133.line1_ex);
      expect(qcashier.screen133.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.line1_ex = defalut;
      print(qcashier.screen133.line1_ex);
      expect(qcashier.screen133.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04287_element_check_04264 **********\n\n");
    });

    test('04288_element_check_04265', () async {
      print("\n********** テスト実行：04288_element_check_04265 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.line2_ex;
      print(qcashier.screen133.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.line2_ex = testData1s;
      print(qcashier.screen133.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.line2_ex = testData2s;
      print(qcashier.screen133.line2_ex);
      expect(qcashier.screen133.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.line2_ex = defalut;
      print(qcashier.screen133.line2_ex);
      expect(qcashier.screen133.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04288_element_check_04265 **********\n\n");
    });

    test('04289_element_check_04266', () async {
      print("\n********** テスト実行：04289_element_check_04266 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.line3_ex;
      print(qcashier.screen133.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.line3_ex = testData1s;
      print(qcashier.screen133.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.line3_ex = testData2s;
      print(qcashier.screen133.line3_ex);
      expect(qcashier.screen133.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.line3_ex = defalut;
      print(qcashier.screen133.line3_ex);
      expect(qcashier.screen133.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04289_element_check_04266 **********\n\n");
    });

    test('04290_element_check_04267', () async {
      print("\n********** テスト実行：04290_element_check_04267 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.line4_ex;
      print(qcashier.screen133.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.line4_ex = testData1s;
      print(qcashier.screen133.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.line4_ex = testData2s;
      print(qcashier.screen133.line4_ex);
      expect(qcashier.screen133.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.line4_ex = defalut;
      print(qcashier.screen133.line4_ex);
      expect(qcashier.screen133.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04290_element_check_04267 **********\n\n");
    });

    test('04291_element_check_04268', () async {
      print("\n********** テスト実行：04291_element_check_04268 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.sound_led1;
      print(qcashier.screen133.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.sound_led1 = testData1;
      print(qcashier.screen133.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.sound_led1 = testData2;
      print(qcashier.screen133.sound_led1);
      expect(qcashier.screen133.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.sound_led1 = defalut;
      print(qcashier.screen133.sound_led1);
      expect(qcashier.screen133.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04291_element_check_04268 **********\n\n");
    });

    test('04292_element_check_04269', () async {
      print("\n********** テスト実行：04292_element_check_04269 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.sound_led2;
      print(qcashier.screen133.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.sound_led2 = testData1;
      print(qcashier.screen133.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.sound_led2 = testData2;
      print(qcashier.screen133.sound_led2);
      expect(qcashier.screen133.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.sound_led2 = defalut;
      print(qcashier.screen133.sound_led2);
      expect(qcashier.screen133.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04292_element_check_04269 **********\n\n");
    });

    test('04293_element_check_04270', () async {
      print("\n********** テスト実行：04293_element_check_04270 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen133.sound_led3;
      print(qcashier.screen133.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen133.sound_led3 = testData1;
      print(qcashier.screen133.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen133.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen133.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen133.sound_led3 = testData2;
      print(qcashier.screen133.sound_led3);
      expect(qcashier.screen133.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen133.sound_led3 = defalut;
      print(qcashier.screen133.sound_led3);
      expect(qcashier.screen133.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen133.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04293_element_check_04270 **********\n\n");
    });

    test('04294_element_check_04271', () async {
      print("\n********** テスト実行：04294_element_check_04271 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.title;
      print(qcashier.screen134.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.title = testData1s;
      print(qcashier.screen134.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.title = testData2s;
      print(qcashier.screen134.title);
      expect(qcashier.screen134.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.title = defalut;
      print(qcashier.screen134.title);
      expect(qcashier.screen134.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04294_element_check_04271 **********\n\n");
    });

    test('04295_element_check_04272', () async {
      print("\n********** テスト実行：04295_element_check_04272 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.msg1;
      print(qcashier.screen134.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.msg1 = testData1s;
      print(qcashier.screen134.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.msg1 = testData2s;
      print(qcashier.screen134.msg1);
      expect(qcashier.screen134.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.msg1 = defalut;
      print(qcashier.screen134.msg1);
      expect(qcashier.screen134.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04295_element_check_04272 **********\n\n");
    });

    test('04296_element_check_04273', () async {
      print("\n********** テスト実行：04296_element_check_04273 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.msg2;
      print(qcashier.screen134.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.msg2 = testData1s;
      print(qcashier.screen134.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.msg2 = testData2s;
      print(qcashier.screen134.msg2);
      expect(qcashier.screen134.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.msg2 = defalut;
      print(qcashier.screen134.msg2);
      expect(qcashier.screen134.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04296_element_check_04273 **********\n\n");
    });

    test('04297_element_check_04274', () async {
      print("\n********** テスト実行：04297_element_check_04274 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.msg1_size;
      print(qcashier.screen134.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.msg1_size = testData1;
      print(qcashier.screen134.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.msg1_size = testData2;
      print(qcashier.screen134.msg1_size);
      expect(qcashier.screen134.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.msg1_size = defalut;
      print(qcashier.screen134.msg1_size);
      expect(qcashier.screen134.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04297_element_check_04274 **********\n\n");
    });

    test('04298_element_check_04275', () async {
      print("\n********** テスト実行：04298_element_check_04275 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.msg2_size;
      print(qcashier.screen134.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.msg2_size = testData1s;
      print(qcashier.screen134.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.msg2_size == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.msg2_size == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.msg2_size = testData2s;
      print(qcashier.screen134.msg2_size);
      expect(qcashier.screen134.msg2_size == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.msg2_size == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.msg2_size = defalut;
      print(qcashier.screen134.msg2_size);
      expect(qcashier.screen134.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04298_element_check_04275 **********\n\n");
    });

    test('04299_element_check_04276', () async {
      print("\n********** テスト実行：04299_element_check_04276 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.sound1;
      print(qcashier.screen134.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.sound1 = testData1;
      print(qcashier.screen134.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.sound1 = testData2;
      print(qcashier.screen134.sound1);
      expect(qcashier.screen134.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.sound1 = defalut;
      print(qcashier.screen134.sound1);
      expect(qcashier.screen134.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04299_element_check_04276 **********\n\n");
    });

    test('04300_element_check_04277', () async {
      print("\n********** テスト実行：04300_element_check_04277 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.sound2;
      print(qcashier.screen134.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.sound2 = testData1;
      print(qcashier.screen134.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.sound2 = testData2;
      print(qcashier.screen134.sound2);
      expect(qcashier.screen134.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.sound2 = defalut;
      print(qcashier.screen134.sound2);
      expect(qcashier.screen134.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04300_element_check_04277 **********\n\n");
    });

    test('04301_element_check_04278', () async {
      print("\n********** テスト実行：04301_element_check_04278 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.sound3;
      print(qcashier.screen134.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.sound3 = testData1;
      print(qcashier.screen134.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.sound3 = testData2;
      print(qcashier.screen134.sound3);
      expect(qcashier.screen134.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.sound3 = defalut;
      print(qcashier.screen134.sound3);
      expect(qcashier.screen134.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04301_element_check_04278 **********\n\n");
    });

    test('04302_element_check_04279', () async {
      print("\n********** テスト実行：04302_element_check_04279 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.snd_timer;
      print(qcashier.screen134.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.snd_timer = testData1;
      print(qcashier.screen134.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.snd_timer = testData2;
      print(qcashier.screen134.snd_timer);
      expect(qcashier.screen134.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.snd_timer = defalut;
      print(qcashier.screen134.snd_timer);
      expect(qcashier.screen134.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04302_element_check_04279 **********\n\n");
    });

    test('04303_element_check_04280', () async {
      print("\n********** テスト実行：04303_element_check_04280 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.timer1;
      print(qcashier.screen134.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.timer1 = testData1;
      print(qcashier.screen134.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.timer1 = testData2;
      print(qcashier.screen134.timer1);
      expect(qcashier.screen134.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.timer1 = defalut;
      print(qcashier.screen134.timer1);
      expect(qcashier.screen134.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04303_element_check_04280 **********\n\n");
    });

    test('04304_element_check_04281', () async {
      print("\n********** テスト実行：04304_element_check_04281 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.timer2;
      print(qcashier.screen134.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.timer2 = testData1;
      print(qcashier.screen134.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.timer2 = testData2;
      print(qcashier.screen134.timer2);
      expect(qcashier.screen134.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.timer2 = defalut;
      print(qcashier.screen134.timer2);
      expect(qcashier.screen134.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04304_element_check_04281 **********\n\n");
    });

    test('04305_element_check_04282', () async {
      print("\n********** テスト実行：04305_element_check_04282 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.timer3;
      print(qcashier.screen134.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.timer3 = testData1;
      print(qcashier.screen134.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.timer3 = testData2;
      print(qcashier.screen134.timer3);
      expect(qcashier.screen134.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.timer3 = defalut;
      print(qcashier.screen134.timer3);
      expect(qcashier.screen134.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04305_element_check_04282 **********\n\n");
    });

    test('04306_element_check_04283', () async {
      print("\n********** テスト実行：04306_element_check_04283 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.dsp_flg1;
      print(qcashier.screen134.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.dsp_flg1 = testData1;
      print(qcashier.screen134.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.dsp_flg1 = testData2;
      print(qcashier.screen134.dsp_flg1);
      expect(qcashier.screen134.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.dsp_flg1 = defalut;
      print(qcashier.screen134.dsp_flg1);
      expect(qcashier.screen134.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04306_element_check_04283 **********\n\n");
    });

    test('04307_element_check_04284', () async {
      print("\n********** テスト実行：04307_element_check_04284 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.dsp_flg2;
      print(qcashier.screen134.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.dsp_flg2 = testData1;
      print(qcashier.screen134.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.dsp_flg2 = testData2;
      print(qcashier.screen134.dsp_flg2);
      expect(qcashier.screen134.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.dsp_flg2 = defalut;
      print(qcashier.screen134.dsp_flg2);
      expect(qcashier.screen134.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04307_element_check_04284 **********\n\n");
    });

    test('04308_element_check_04285', () async {
      print("\n********** テスト実行：04308_element_check_04285 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.movie01_ext;
      print(qcashier.screen134.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.movie01_ext = testData1;
      print(qcashier.screen134.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.movie01_ext = testData2;
      print(qcashier.screen134.movie01_ext);
      expect(qcashier.screen134.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.movie01_ext = defalut;
      print(qcashier.screen134.movie01_ext);
      expect(qcashier.screen134.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04308_element_check_04285 **********\n\n");
    });

    test('04309_element_check_04286', () async {
      print("\n********** テスト実行：04309_element_check_04286 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.movie02_ext;
      print(qcashier.screen134.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.movie02_ext = testData1;
      print(qcashier.screen134.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.movie02_ext = testData2;
      print(qcashier.screen134.movie02_ext);
      expect(qcashier.screen134.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.movie02_ext = defalut;
      print(qcashier.screen134.movie02_ext);
      expect(qcashier.screen134.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04309_element_check_04286 **********\n\n");
    });

    test('04310_element_check_04287', () async {
      print("\n********** テスト実行：04310_element_check_04287 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.movie03_ext;
      print(qcashier.screen134.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.movie03_ext = testData1;
      print(qcashier.screen134.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.movie03_ext = testData2;
      print(qcashier.screen134.movie03_ext);
      expect(qcashier.screen134.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.movie03_ext = defalut;
      print(qcashier.screen134.movie03_ext);
      expect(qcashier.screen134.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04310_element_check_04287 **********\n\n");
    });

    test('04311_element_check_04288', () async {
      print("\n********** テスト実行：04311_element_check_04288 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.movie04_ext;
      print(qcashier.screen134.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.movie04_ext = testData1;
      print(qcashier.screen134.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.movie04_ext = testData2;
      print(qcashier.screen134.movie04_ext);
      expect(qcashier.screen134.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.movie04_ext = defalut;
      print(qcashier.screen134.movie04_ext);
      expect(qcashier.screen134.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04311_element_check_04288 **********\n\n");
    });

    test('04312_element_check_04289', () async {
      print("\n********** テスト実行：04312_element_check_04289 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.line_title;
      print(qcashier.screen134.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.line_title = testData1s;
      print(qcashier.screen134.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.line_title = testData2s;
      print(qcashier.screen134.line_title);
      expect(qcashier.screen134.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.line_title = defalut;
      print(qcashier.screen134.line_title);
      expect(qcashier.screen134.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04312_element_check_04289 **********\n\n");
    });

    test('04313_element_check_04290', () async {
      print("\n********** テスト実行：04313_element_check_04290 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.line_title_ex;
      print(qcashier.screen134.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.line_title_ex = testData1s;
      print(qcashier.screen134.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.line_title_ex = testData2s;
      print(qcashier.screen134.line_title_ex);
      expect(qcashier.screen134.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.line_title_ex = defalut;
      print(qcashier.screen134.line_title_ex);
      expect(qcashier.screen134.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04313_element_check_04290 **********\n\n");
    });

    test('04314_element_check_04291', () async {
      print("\n********** テスト実行：04314_element_check_04291 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.line1;
      print(qcashier.screen134.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.line1 = testData1s;
      print(qcashier.screen134.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.line1 = testData2s;
      print(qcashier.screen134.line1);
      expect(qcashier.screen134.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.line1 = defalut;
      print(qcashier.screen134.line1);
      expect(qcashier.screen134.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04314_element_check_04291 **********\n\n");
    });

    test('04315_element_check_04292', () async {
      print("\n********** テスト実行：04315_element_check_04292 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.line2;
      print(qcashier.screen134.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.line2 = testData1s;
      print(qcashier.screen134.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.line2 = testData2s;
      print(qcashier.screen134.line2);
      expect(qcashier.screen134.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.line2 = defalut;
      print(qcashier.screen134.line2);
      expect(qcashier.screen134.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04315_element_check_04292 **********\n\n");
    });

    test('04316_element_check_04293', () async {
      print("\n********** テスト実行：04316_element_check_04293 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.line3;
      print(qcashier.screen134.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.line3 = testData1s;
      print(qcashier.screen134.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.line3 = testData2s;
      print(qcashier.screen134.line3);
      expect(qcashier.screen134.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.line3 = defalut;
      print(qcashier.screen134.line3);
      expect(qcashier.screen134.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04316_element_check_04293 **********\n\n");
    });

    test('04317_element_check_04294', () async {
      print("\n********** テスト実行：04317_element_check_04294 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.line4;
      print(qcashier.screen134.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.line4 = testData1s;
      print(qcashier.screen134.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.line4 = testData2s;
      print(qcashier.screen134.line4);
      expect(qcashier.screen134.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.line4 = defalut;
      print(qcashier.screen134.line4);
      expect(qcashier.screen134.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04317_element_check_04294 **********\n\n");
    });

    test('04318_element_check_04295', () async {
      print("\n********** テスト実行：04318_element_check_04295 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.line1_ex;
      print(qcashier.screen134.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.line1_ex = testData1s;
      print(qcashier.screen134.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.line1_ex = testData2s;
      print(qcashier.screen134.line1_ex);
      expect(qcashier.screen134.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.line1_ex = defalut;
      print(qcashier.screen134.line1_ex);
      expect(qcashier.screen134.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04318_element_check_04295 **********\n\n");
    });

    test('04319_element_check_04296', () async {
      print("\n********** テスト実行：04319_element_check_04296 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.line2_ex;
      print(qcashier.screen134.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.line2_ex = testData1s;
      print(qcashier.screen134.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.line2_ex = testData2s;
      print(qcashier.screen134.line2_ex);
      expect(qcashier.screen134.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.line2_ex = defalut;
      print(qcashier.screen134.line2_ex);
      expect(qcashier.screen134.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04319_element_check_04296 **********\n\n");
    });

    test('04320_element_check_04297', () async {
      print("\n********** テスト実行：04320_element_check_04297 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.line3_ex;
      print(qcashier.screen134.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.line3_ex = testData1s;
      print(qcashier.screen134.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.line3_ex = testData2s;
      print(qcashier.screen134.line3_ex);
      expect(qcashier.screen134.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.line3_ex = defalut;
      print(qcashier.screen134.line3_ex);
      expect(qcashier.screen134.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04320_element_check_04297 **********\n\n");
    });

    test('04321_element_check_04298', () async {
      print("\n********** テスト実行：04321_element_check_04298 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.line4_ex;
      print(qcashier.screen134.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.line4_ex = testData1s;
      print(qcashier.screen134.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.line4_ex = testData2s;
      print(qcashier.screen134.line4_ex);
      expect(qcashier.screen134.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.line4_ex = defalut;
      print(qcashier.screen134.line4_ex);
      expect(qcashier.screen134.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04321_element_check_04298 **********\n\n");
    });

    test('04322_element_check_04299', () async {
      print("\n********** テスト実行：04322_element_check_04299 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.sound_led1;
      print(qcashier.screen134.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.sound_led1 = testData1;
      print(qcashier.screen134.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.sound_led1 = testData2;
      print(qcashier.screen134.sound_led1);
      expect(qcashier.screen134.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.sound_led1 = defalut;
      print(qcashier.screen134.sound_led1);
      expect(qcashier.screen134.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04322_element_check_04299 **********\n\n");
    });

    test('04323_element_check_04300', () async {
      print("\n********** テスト実行：04323_element_check_04300 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.sound_led2;
      print(qcashier.screen134.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.sound_led2 = testData1;
      print(qcashier.screen134.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.sound_led2 = testData2;
      print(qcashier.screen134.sound_led2);
      expect(qcashier.screen134.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.sound_led2 = defalut;
      print(qcashier.screen134.sound_led2);
      expect(qcashier.screen134.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04323_element_check_04300 **********\n\n");
    });

    test('04324_element_check_04301', () async {
      print("\n********** テスト実行：04324_element_check_04301 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen134.sound_led3;
      print(qcashier.screen134.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen134.sound_led3 = testData1;
      print(qcashier.screen134.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen134.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen134.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen134.sound_led3 = testData2;
      print(qcashier.screen134.sound_led3);
      expect(qcashier.screen134.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen134.sound_led3 = defalut;
      print(qcashier.screen134.sound_led3);
      expect(qcashier.screen134.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen134.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04324_element_check_04301 **********\n\n");
    });

    test('04325_element_check_04302', () async {
      print("\n********** テスト実行：04325_element_check_04302 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.title;
      print(qcashier.screen135.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.title = testData1s;
      print(qcashier.screen135.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.title = testData2s;
      print(qcashier.screen135.title);
      expect(qcashier.screen135.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.title = defalut;
      print(qcashier.screen135.title);
      expect(qcashier.screen135.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04325_element_check_04302 **********\n\n");
    });

    test('04326_element_check_04303', () async {
      print("\n********** テスト実行：04326_element_check_04303 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.msg1;
      print(qcashier.screen135.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.msg1 = testData1s;
      print(qcashier.screen135.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.msg1 = testData2s;
      print(qcashier.screen135.msg1);
      expect(qcashier.screen135.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.msg1 = defalut;
      print(qcashier.screen135.msg1);
      expect(qcashier.screen135.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04326_element_check_04303 **********\n\n");
    });

    test('04327_element_check_04304', () async {
      print("\n********** テスト実行：04327_element_check_04304 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.msg2;
      print(qcashier.screen135.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.msg2 = testData1s;
      print(qcashier.screen135.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.msg2 = testData2s;
      print(qcashier.screen135.msg2);
      expect(qcashier.screen135.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.msg2 = defalut;
      print(qcashier.screen135.msg2);
      expect(qcashier.screen135.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04327_element_check_04304 **********\n\n");
    });

    test('04328_element_check_04305', () async {
      print("\n********** テスト実行：04328_element_check_04305 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.msg1_size;
      print(qcashier.screen135.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.msg1_size = testData1;
      print(qcashier.screen135.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.msg1_size = testData2;
      print(qcashier.screen135.msg1_size);
      expect(qcashier.screen135.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.msg1_size = defalut;
      print(qcashier.screen135.msg1_size);
      expect(qcashier.screen135.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04328_element_check_04305 **********\n\n");
    });

    test('04329_element_check_04306', () async {
      print("\n********** テスト実行：04329_element_check_04306 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.msg2_size;
      print(qcashier.screen135.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.msg2_size = testData1;
      print(qcashier.screen135.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.msg2_size = testData2;
      print(qcashier.screen135.msg2_size);
      expect(qcashier.screen135.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.msg2_size = defalut;
      print(qcashier.screen135.msg2_size);
      expect(qcashier.screen135.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04329_element_check_04306 **********\n\n");
    });

    test('04330_element_check_04307', () async {
      print("\n********** テスト実行：04330_element_check_04307 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.sound1;
      print(qcashier.screen135.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.sound1 = testData1;
      print(qcashier.screen135.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.sound1 = testData2;
      print(qcashier.screen135.sound1);
      expect(qcashier.screen135.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.sound1 = defalut;
      print(qcashier.screen135.sound1);
      expect(qcashier.screen135.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04330_element_check_04307 **********\n\n");
    });

    test('04331_element_check_04308', () async {
      print("\n********** テスト実行：04331_element_check_04308 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.sound2;
      print(qcashier.screen135.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.sound2 = testData1;
      print(qcashier.screen135.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.sound2 = testData2;
      print(qcashier.screen135.sound2);
      expect(qcashier.screen135.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.sound2 = defalut;
      print(qcashier.screen135.sound2);
      expect(qcashier.screen135.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04331_element_check_04308 **********\n\n");
    });

    test('04332_element_check_04309', () async {
      print("\n********** テスト実行：04332_element_check_04309 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.sound3;
      print(qcashier.screen135.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.sound3 = testData1;
      print(qcashier.screen135.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.sound3 = testData2;
      print(qcashier.screen135.sound3);
      expect(qcashier.screen135.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.sound3 = defalut;
      print(qcashier.screen135.sound3);
      expect(qcashier.screen135.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04332_element_check_04309 **********\n\n");
    });

    test('04333_element_check_04310', () async {
      print("\n********** テスト実行：04333_element_check_04310 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.snd_timer;
      print(qcashier.screen135.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.snd_timer = testData1;
      print(qcashier.screen135.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.snd_timer = testData2;
      print(qcashier.screen135.snd_timer);
      expect(qcashier.screen135.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.snd_timer = defalut;
      print(qcashier.screen135.snd_timer);
      expect(qcashier.screen135.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04333_element_check_04310 **********\n\n");
    });

    test('04334_element_check_04311', () async {
      print("\n********** テスト実行：04334_element_check_04311 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.timer1;
      print(qcashier.screen135.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.timer1 = testData1;
      print(qcashier.screen135.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.timer1 = testData2;
      print(qcashier.screen135.timer1);
      expect(qcashier.screen135.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.timer1 = defalut;
      print(qcashier.screen135.timer1);
      expect(qcashier.screen135.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04334_element_check_04311 **********\n\n");
    });

    test('04335_element_check_04312', () async {
      print("\n********** テスト実行：04335_element_check_04312 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.timer2;
      print(qcashier.screen135.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.timer2 = testData1;
      print(qcashier.screen135.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.timer2 = testData2;
      print(qcashier.screen135.timer2);
      expect(qcashier.screen135.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.timer2 = defalut;
      print(qcashier.screen135.timer2);
      expect(qcashier.screen135.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04335_element_check_04312 **********\n\n");
    });

    test('04336_element_check_04313', () async {
      print("\n********** テスト実行：04336_element_check_04313 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.timer3;
      print(qcashier.screen135.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.timer3 = testData1;
      print(qcashier.screen135.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.timer3 = testData2;
      print(qcashier.screen135.timer3);
      expect(qcashier.screen135.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.timer3 = defalut;
      print(qcashier.screen135.timer3);
      expect(qcashier.screen135.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04336_element_check_04313 **********\n\n");
    });

    test('04337_element_check_04314', () async {
      print("\n********** テスト実行：04337_element_check_04314 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.dsp_flg1;
      print(qcashier.screen135.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.dsp_flg1 = testData1;
      print(qcashier.screen135.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.dsp_flg1 = testData2;
      print(qcashier.screen135.dsp_flg1);
      expect(qcashier.screen135.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.dsp_flg1 = defalut;
      print(qcashier.screen135.dsp_flg1);
      expect(qcashier.screen135.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04337_element_check_04314 **********\n\n");
    });

    test('04338_element_check_04315', () async {
      print("\n********** テスト実行：04338_element_check_04315 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.dsp_flg2;
      print(qcashier.screen135.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.dsp_flg2 = testData1;
      print(qcashier.screen135.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.dsp_flg2 = testData2;
      print(qcashier.screen135.dsp_flg2);
      expect(qcashier.screen135.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.dsp_flg2 = defalut;
      print(qcashier.screen135.dsp_flg2);
      expect(qcashier.screen135.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04338_element_check_04315 **********\n\n");
    });

    test('04339_element_check_04316', () async {
      print("\n********** テスト実行：04339_element_check_04316 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.movie01_ext;
      print(qcashier.screen135.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.movie01_ext = testData1;
      print(qcashier.screen135.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.movie01_ext = testData2;
      print(qcashier.screen135.movie01_ext);
      expect(qcashier.screen135.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.movie01_ext = defalut;
      print(qcashier.screen135.movie01_ext);
      expect(qcashier.screen135.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04339_element_check_04316 **********\n\n");
    });

    test('04340_element_check_04317', () async {
      print("\n********** テスト実行：04340_element_check_04317 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.movie02_ext;
      print(qcashier.screen135.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.movie02_ext = testData1;
      print(qcashier.screen135.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.movie02_ext = testData2;
      print(qcashier.screen135.movie02_ext);
      expect(qcashier.screen135.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.movie02_ext = defalut;
      print(qcashier.screen135.movie02_ext);
      expect(qcashier.screen135.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04340_element_check_04317 **********\n\n");
    });

    test('04341_element_check_04318', () async {
      print("\n********** テスト実行：04341_element_check_04318 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.movie03_ext;
      print(qcashier.screen135.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.movie03_ext = testData1;
      print(qcashier.screen135.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.movie03_ext = testData2;
      print(qcashier.screen135.movie03_ext);
      expect(qcashier.screen135.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.movie03_ext = defalut;
      print(qcashier.screen135.movie03_ext);
      expect(qcashier.screen135.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04341_element_check_04318 **********\n\n");
    });

    test('04342_element_check_04319', () async {
      print("\n********** テスト実行：04342_element_check_04319 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.movie04_ext;
      print(qcashier.screen135.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.movie04_ext = testData1;
      print(qcashier.screen135.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.movie04_ext = testData2;
      print(qcashier.screen135.movie04_ext);
      expect(qcashier.screen135.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.movie04_ext = defalut;
      print(qcashier.screen135.movie04_ext);
      expect(qcashier.screen135.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04342_element_check_04319 **********\n\n");
    });

    test('04343_element_check_04320', () async {
      print("\n********** テスト実行：04343_element_check_04320 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.line_title;
      print(qcashier.screen135.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.line_title = testData1s;
      print(qcashier.screen135.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.line_title = testData2s;
      print(qcashier.screen135.line_title);
      expect(qcashier.screen135.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.line_title = defalut;
      print(qcashier.screen135.line_title);
      expect(qcashier.screen135.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04343_element_check_04320 **********\n\n");
    });

    test('04344_element_check_04321', () async {
      print("\n********** テスト実行：04344_element_check_04321 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.line_title_ex;
      print(qcashier.screen135.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.line_title_ex = testData1s;
      print(qcashier.screen135.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.line_title_ex = testData2s;
      print(qcashier.screen135.line_title_ex);
      expect(qcashier.screen135.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.line_title_ex = defalut;
      print(qcashier.screen135.line_title_ex);
      expect(qcashier.screen135.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04344_element_check_04321 **********\n\n");
    });

    test('04345_element_check_04322', () async {
      print("\n********** テスト実行：04345_element_check_04322 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.line1;
      print(qcashier.screen135.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.line1 = testData1s;
      print(qcashier.screen135.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.line1 = testData2s;
      print(qcashier.screen135.line1);
      expect(qcashier.screen135.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.line1 = defalut;
      print(qcashier.screen135.line1);
      expect(qcashier.screen135.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04345_element_check_04322 **********\n\n");
    });

    test('04346_element_check_04323', () async {
      print("\n********** テスト実行：04346_element_check_04323 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.line2;
      print(qcashier.screen135.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.line2 = testData1s;
      print(qcashier.screen135.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.line2 = testData2s;
      print(qcashier.screen135.line2);
      expect(qcashier.screen135.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.line2 = defalut;
      print(qcashier.screen135.line2);
      expect(qcashier.screen135.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04346_element_check_04323 **********\n\n");
    });

    test('04347_element_check_04324', () async {
      print("\n********** テスト実行：04347_element_check_04324 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.line3;
      print(qcashier.screen135.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.line3 = testData1s;
      print(qcashier.screen135.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.line3 = testData2s;
      print(qcashier.screen135.line3);
      expect(qcashier.screen135.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.line3 = defalut;
      print(qcashier.screen135.line3);
      expect(qcashier.screen135.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04347_element_check_04324 **********\n\n");
    });

    test('04348_element_check_04325', () async {
      print("\n********** テスト実行：04348_element_check_04325 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.line4;
      print(qcashier.screen135.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.line4 = testData1s;
      print(qcashier.screen135.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.line4 = testData2s;
      print(qcashier.screen135.line4);
      expect(qcashier.screen135.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.line4 = defalut;
      print(qcashier.screen135.line4);
      expect(qcashier.screen135.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04348_element_check_04325 **********\n\n");
    });

    test('04349_element_check_04326', () async {
      print("\n********** テスト実行：04349_element_check_04326 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.line1_ex;
      print(qcashier.screen135.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.line1_ex = testData1s;
      print(qcashier.screen135.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.line1_ex = testData2s;
      print(qcashier.screen135.line1_ex);
      expect(qcashier.screen135.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.line1_ex = defalut;
      print(qcashier.screen135.line1_ex);
      expect(qcashier.screen135.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04349_element_check_04326 **********\n\n");
    });

    test('04350_element_check_04327', () async {
      print("\n********** テスト実行：04350_element_check_04327 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.line2_ex;
      print(qcashier.screen135.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.line2_ex = testData1s;
      print(qcashier.screen135.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.line2_ex = testData2s;
      print(qcashier.screen135.line2_ex);
      expect(qcashier.screen135.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.line2_ex = defalut;
      print(qcashier.screen135.line2_ex);
      expect(qcashier.screen135.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04350_element_check_04327 **********\n\n");
    });

    test('04351_element_check_04328', () async {
      print("\n********** テスト実行：04351_element_check_04328 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.line3_ex;
      print(qcashier.screen135.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.line3_ex = testData1s;
      print(qcashier.screen135.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.line3_ex = testData2s;
      print(qcashier.screen135.line3_ex);
      expect(qcashier.screen135.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.line3_ex = defalut;
      print(qcashier.screen135.line3_ex);
      expect(qcashier.screen135.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04351_element_check_04328 **********\n\n");
    });

    test('04352_element_check_04329', () async {
      print("\n********** テスト実行：04352_element_check_04329 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.line4_ex;
      print(qcashier.screen135.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.line4_ex = testData1s;
      print(qcashier.screen135.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.line4_ex = testData2s;
      print(qcashier.screen135.line4_ex);
      expect(qcashier.screen135.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.line4_ex = defalut;
      print(qcashier.screen135.line4_ex);
      expect(qcashier.screen135.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04352_element_check_04329 **********\n\n");
    });

    test('04353_element_check_04330', () async {
      print("\n********** テスト実行：04353_element_check_04330 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.sound_led1;
      print(qcashier.screen135.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.sound_led1 = testData1;
      print(qcashier.screen135.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.sound_led1 = testData2;
      print(qcashier.screen135.sound_led1);
      expect(qcashier.screen135.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.sound_led1 = defalut;
      print(qcashier.screen135.sound_led1);
      expect(qcashier.screen135.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04353_element_check_04330 **********\n\n");
    });

    test('04354_element_check_04331', () async {
      print("\n********** テスト実行：04354_element_check_04331 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.sound_led2;
      print(qcashier.screen135.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.sound_led2 = testData1;
      print(qcashier.screen135.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.sound_led2 = testData2;
      print(qcashier.screen135.sound_led2);
      expect(qcashier.screen135.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.sound_led2 = defalut;
      print(qcashier.screen135.sound_led2);
      expect(qcashier.screen135.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04354_element_check_04331 **********\n\n");
    });

    test('04355_element_check_04332', () async {
      print("\n********** テスト実行：04355_element_check_04332 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen135.sound_led3;
      print(qcashier.screen135.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen135.sound_led3 = testData1;
      print(qcashier.screen135.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen135.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen135.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen135.sound_led3 = testData2;
      print(qcashier.screen135.sound_led3);
      expect(qcashier.screen135.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen135.sound_led3 = defalut;
      print(qcashier.screen135.sound_led3);
      expect(qcashier.screen135.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen135.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04355_element_check_04332 **********\n\n");
    });

    test('04356_element_check_04333', () async {
      print("\n********** テスト実行：04356_element_check_04333 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.title;
      print(qcashier.screen136.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.title = testData1s;
      print(qcashier.screen136.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.title = testData2s;
      print(qcashier.screen136.title);
      expect(qcashier.screen136.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.title = defalut;
      print(qcashier.screen136.title);
      expect(qcashier.screen136.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04356_element_check_04333 **********\n\n");
    });

    test('04357_element_check_04334', () async {
      print("\n********** テスト実行：04357_element_check_04334 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.msg1;
      print(qcashier.screen136.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.msg1 = testData1s;
      print(qcashier.screen136.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.msg1 = testData2s;
      print(qcashier.screen136.msg1);
      expect(qcashier.screen136.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.msg1 = defalut;
      print(qcashier.screen136.msg1);
      expect(qcashier.screen136.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04357_element_check_04334 **********\n\n");
    });

    test('04358_element_check_04335', () async {
      print("\n********** テスト実行：04358_element_check_04335 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.msg2;
      print(qcashier.screen136.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.msg2 = testData1s;
      print(qcashier.screen136.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.msg2 = testData2s;
      print(qcashier.screen136.msg2);
      expect(qcashier.screen136.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.msg2 = defalut;
      print(qcashier.screen136.msg2);
      expect(qcashier.screen136.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04358_element_check_04335 **********\n\n");
    });

    test('04359_element_check_04336', () async {
      print("\n********** テスト実行：04359_element_check_04336 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.msg1_size;
      print(qcashier.screen136.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.msg1_size = testData1;
      print(qcashier.screen136.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.msg1_size = testData2;
      print(qcashier.screen136.msg1_size);
      expect(qcashier.screen136.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.msg1_size = defalut;
      print(qcashier.screen136.msg1_size);
      expect(qcashier.screen136.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04359_element_check_04336 **********\n\n");
    });

    test('04360_element_check_04337', () async {
      print("\n********** テスト実行：04360_element_check_04337 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.msg2_size;
      print(qcashier.screen136.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.msg2_size = testData1;
      print(qcashier.screen136.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.msg2_size = testData2;
      print(qcashier.screen136.msg2_size);
      expect(qcashier.screen136.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.msg2_size = defalut;
      print(qcashier.screen136.msg2_size);
      expect(qcashier.screen136.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04360_element_check_04337 **********\n\n");
    });

    test('04361_element_check_04338', () async {
      print("\n********** テスト実行：04361_element_check_04338 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.sound1;
      print(qcashier.screen136.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.sound1 = testData1;
      print(qcashier.screen136.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.sound1 = testData2;
      print(qcashier.screen136.sound1);
      expect(qcashier.screen136.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.sound1 = defalut;
      print(qcashier.screen136.sound1);
      expect(qcashier.screen136.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04361_element_check_04338 **********\n\n");
    });

    test('04362_element_check_04339', () async {
      print("\n********** テスト実行：04362_element_check_04339 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.sound2;
      print(qcashier.screen136.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.sound2 = testData1;
      print(qcashier.screen136.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.sound2 = testData2;
      print(qcashier.screen136.sound2);
      expect(qcashier.screen136.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.sound2 = defalut;
      print(qcashier.screen136.sound2);
      expect(qcashier.screen136.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04362_element_check_04339 **********\n\n");
    });

    test('04363_element_check_04340', () async {
      print("\n********** テスト実行：04363_element_check_04340 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.sound3;
      print(qcashier.screen136.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.sound3 = testData1;
      print(qcashier.screen136.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.sound3 = testData2;
      print(qcashier.screen136.sound3);
      expect(qcashier.screen136.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.sound3 = defalut;
      print(qcashier.screen136.sound3);
      expect(qcashier.screen136.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04363_element_check_04340 **********\n\n");
    });

    test('04364_element_check_04341', () async {
      print("\n********** テスト実行：04364_element_check_04341 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.snd_timer;
      print(qcashier.screen136.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.snd_timer = testData1;
      print(qcashier.screen136.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.snd_timer = testData2;
      print(qcashier.screen136.snd_timer);
      expect(qcashier.screen136.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.snd_timer = defalut;
      print(qcashier.screen136.snd_timer);
      expect(qcashier.screen136.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04364_element_check_04341 **********\n\n");
    });

    test('04365_element_check_04342', () async {
      print("\n********** テスト実行：04365_element_check_04342 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.timer1;
      print(qcashier.screen136.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.timer1 = testData1;
      print(qcashier.screen136.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.timer1 = testData2;
      print(qcashier.screen136.timer1);
      expect(qcashier.screen136.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.timer1 = defalut;
      print(qcashier.screen136.timer1);
      expect(qcashier.screen136.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04365_element_check_04342 **********\n\n");
    });

    test('04366_element_check_04343', () async {
      print("\n********** テスト実行：04366_element_check_04343 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.timer2;
      print(qcashier.screen136.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.timer2 = testData1;
      print(qcashier.screen136.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.timer2 = testData2;
      print(qcashier.screen136.timer2);
      expect(qcashier.screen136.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.timer2 = defalut;
      print(qcashier.screen136.timer2);
      expect(qcashier.screen136.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04366_element_check_04343 **********\n\n");
    });

    test('04367_element_check_04344', () async {
      print("\n********** テスト実行：04367_element_check_04344 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.timer3;
      print(qcashier.screen136.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.timer3 = testData1;
      print(qcashier.screen136.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.timer3 = testData2;
      print(qcashier.screen136.timer3);
      expect(qcashier.screen136.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.timer3 = defalut;
      print(qcashier.screen136.timer3);
      expect(qcashier.screen136.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04367_element_check_04344 **********\n\n");
    });

    test('04368_element_check_04345', () async {
      print("\n********** テスト実行：04368_element_check_04345 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.dsp_flg1;
      print(qcashier.screen136.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.dsp_flg1 = testData1;
      print(qcashier.screen136.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.dsp_flg1 = testData2;
      print(qcashier.screen136.dsp_flg1);
      expect(qcashier.screen136.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.dsp_flg1 = defalut;
      print(qcashier.screen136.dsp_flg1);
      expect(qcashier.screen136.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04368_element_check_04345 **********\n\n");
    });

    test('04369_element_check_04346', () async {
      print("\n********** テスト実行：04369_element_check_04346 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.dsp_flg2;
      print(qcashier.screen136.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.dsp_flg2 = testData1;
      print(qcashier.screen136.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.dsp_flg2 = testData2;
      print(qcashier.screen136.dsp_flg2);
      expect(qcashier.screen136.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.dsp_flg2 = defalut;
      print(qcashier.screen136.dsp_flg2);
      expect(qcashier.screen136.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04369_element_check_04346 **********\n\n");
    });

    test('04370_element_check_04347', () async {
      print("\n********** テスト実行：04370_element_check_04347 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.movie01_ext;
      print(qcashier.screen136.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.movie01_ext = testData1;
      print(qcashier.screen136.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.movie01_ext = testData2;
      print(qcashier.screen136.movie01_ext);
      expect(qcashier.screen136.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.movie01_ext = defalut;
      print(qcashier.screen136.movie01_ext);
      expect(qcashier.screen136.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04370_element_check_04347 **********\n\n");
    });

    test('04371_element_check_04348', () async {
      print("\n********** テスト実行：04371_element_check_04348 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.movie02_ext;
      print(qcashier.screen136.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.movie02_ext = testData1;
      print(qcashier.screen136.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.movie02_ext = testData2;
      print(qcashier.screen136.movie02_ext);
      expect(qcashier.screen136.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.movie02_ext = defalut;
      print(qcashier.screen136.movie02_ext);
      expect(qcashier.screen136.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04371_element_check_04348 **********\n\n");
    });

    test('04372_element_check_04349', () async {
      print("\n********** テスト実行：04372_element_check_04349 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.movie03_ext;
      print(qcashier.screen136.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.movie03_ext = testData1;
      print(qcashier.screen136.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.movie03_ext = testData2;
      print(qcashier.screen136.movie03_ext);
      expect(qcashier.screen136.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.movie03_ext = defalut;
      print(qcashier.screen136.movie03_ext);
      expect(qcashier.screen136.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04372_element_check_04349 **********\n\n");
    });

    test('04373_element_check_04350', () async {
      print("\n********** テスト実行：04373_element_check_04350 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.movie04_ext;
      print(qcashier.screen136.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.movie04_ext = testData1;
      print(qcashier.screen136.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.movie04_ext = testData2;
      print(qcashier.screen136.movie04_ext);
      expect(qcashier.screen136.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.movie04_ext = defalut;
      print(qcashier.screen136.movie04_ext);
      expect(qcashier.screen136.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04373_element_check_04350 **********\n\n");
    });

    test('04374_element_check_04351', () async {
      print("\n********** テスト実行：04374_element_check_04351 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.line_title;
      print(qcashier.screen136.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.line_title = testData1s;
      print(qcashier.screen136.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.line_title = testData2s;
      print(qcashier.screen136.line_title);
      expect(qcashier.screen136.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.line_title = defalut;
      print(qcashier.screen136.line_title);
      expect(qcashier.screen136.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04374_element_check_04351 **********\n\n");
    });

    test('04375_element_check_04352', () async {
      print("\n********** テスト実行：04375_element_check_04352 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.line_title_ex;
      print(qcashier.screen136.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.line_title_ex = testData1s;
      print(qcashier.screen136.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.line_title_ex = testData2s;
      print(qcashier.screen136.line_title_ex);
      expect(qcashier.screen136.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.line_title_ex = defalut;
      print(qcashier.screen136.line_title_ex);
      expect(qcashier.screen136.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04375_element_check_04352 **********\n\n");
    });

    test('04376_element_check_04353', () async {
      print("\n********** テスト実行：04376_element_check_04353 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.line1;
      print(qcashier.screen136.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.line1 = testData1s;
      print(qcashier.screen136.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.line1 = testData2s;
      print(qcashier.screen136.line1);
      expect(qcashier.screen136.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.line1 = defalut;
      print(qcashier.screen136.line1);
      expect(qcashier.screen136.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04376_element_check_04353 **********\n\n");
    });

    test('04377_element_check_04354', () async {
      print("\n********** テスト実行：04377_element_check_04354 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.line2;
      print(qcashier.screen136.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.line2 = testData1s;
      print(qcashier.screen136.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.line2 = testData2s;
      print(qcashier.screen136.line2);
      expect(qcashier.screen136.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.line2 = defalut;
      print(qcashier.screen136.line2);
      expect(qcashier.screen136.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04377_element_check_04354 **********\n\n");
    });

    test('04378_element_check_04355', () async {
      print("\n********** テスト実行：04378_element_check_04355 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.line3;
      print(qcashier.screen136.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.line3 = testData1s;
      print(qcashier.screen136.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.line3 = testData2s;
      print(qcashier.screen136.line3);
      expect(qcashier.screen136.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.line3 = defalut;
      print(qcashier.screen136.line3);
      expect(qcashier.screen136.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04378_element_check_04355 **********\n\n");
    });

    test('04379_element_check_04356', () async {
      print("\n********** テスト実行：04379_element_check_04356 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.line4;
      print(qcashier.screen136.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.line4 = testData1s;
      print(qcashier.screen136.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.line4 = testData2s;
      print(qcashier.screen136.line4);
      expect(qcashier.screen136.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.line4 = defalut;
      print(qcashier.screen136.line4);
      expect(qcashier.screen136.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04379_element_check_04356 **********\n\n");
    });

    test('04380_element_check_04357', () async {
      print("\n********** テスト実行：04380_element_check_04357 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.line1_ex;
      print(qcashier.screen136.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.line1_ex = testData1s;
      print(qcashier.screen136.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.line1_ex = testData2s;
      print(qcashier.screen136.line1_ex);
      expect(qcashier.screen136.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.line1_ex = defalut;
      print(qcashier.screen136.line1_ex);
      expect(qcashier.screen136.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04380_element_check_04357 **********\n\n");
    });

    test('04381_element_check_04358', () async {
      print("\n********** テスト実行：04381_element_check_04358 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.line2_ex;
      print(qcashier.screen136.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.line2_ex = testData1s;
      print(qcashier.screen136.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.line2_ex = testData2s;
      print(qcashier.screen136.line2_ex);
      expect(qcashier.screen136.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.line2_ex = defalut;
      print(qcashier.screen136.line2_ex);
      expect(qcashier.screen136.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04381_element_check_04358 **********\n\n");
    });

    test('04382_element_check_04359', () async {
      print("\n********** テスト実行：04382_element_check_04359 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.line3_ex;
      print(qcashier.screen136.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.line3_ex = testData1s;
      print(qcashier.screen136.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.line3_ex = testData2s;
      print(qcashier.screen136.line3_ex);
      expect(qcashier.screen136.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.line3_ex = defalut;
      print(qcashier.screen136.line3_ex);
      expect(qcashier.screen136.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04382_element_check_04359 **********\n\n");
    });

    test('04383_element_check_04360', () async {
      print("\n********** テスト実行：04383_element_check_04360 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.line4_ex;
      print(qcashier.screen136.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.line4_ex = testData1s;
      print(qcashier.screen136.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.line4_ex = testData2s;
      print(qcashier.screen136.line4_ex);
      expect(qcashier.screen136.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.line4_ex = defalut;
      print(qcashier.screen136.line4_ex);
      expect(qcashier.screen136.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04383_element_check_04360 **********\n\n");
    });

    test('04384_element_check_04361', () async {
      print("\n********** テスト実行：04384_element_check_04361 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.sound_led1;
      print(qcashier.screen136.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.sound_led1 = testData1;
      print(qcashier.screen136.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.sound_led1 = testData2;
      print(qcashier.screen136.sound_led1);
      expect(qcashier.screen136.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.sound_led1 = defalut;
      print(qcashier.screen136.sound_led1);
      expect(qcashier.screen136.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04384_element_check_04361 **********\n\n");
    });

    test('04385_element_check_04362', () async {
      print("\n********** テスト実行：04385_element_check_04362 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.sound_led2;
      print(qcashier.screen136.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.sound_led2 = testData1;
      print(qcashier.screen136.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.sound_led2 = testData2;
      print(qcashier.screen136.sound_led2);
      expect(qcashier.screen136.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.sound_led2 = defalut;
      print(qcashier.screen136.sound_led2);
      expect(qcashier.screen136.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04385_element_check_04362 **********\n\n");
    });

    test('04386_element_check_04363', () async {
      print("\n********** テスト実行：04386_element_check_04363 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen136.sound_led3;
      print(qcashier.screen136.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen136.sound_led3 = testData1;
      print(qcashier.screen136.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen136.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen136.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen136.sound_led3 = testData2;
      print(qcashier.screen136.sound_led3);
      expect(qcashier.screen136.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen136.sound_led3 = defalut;
      print(qcashier.screen136.sound_led3);
      expect(qcashier.screen136.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen136.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04386_element_check_04363 **********\n\n");
    });

    test('04387_element_check_04364', () async {
      print("\n********** テスト実行：04387_element_check_04364 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.title;
      print(qcashier.screen137.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.title = testData1s;
      print(qcashier.screen137.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.title = testData2s;
      print(qcashier.screen137.title);
      expect(qcashier.screen137.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.title = defalut;
      print(qcashier.screen137.title);
      expect(qcashier.screen137.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04387_element_check_04364 **********\n\n");
    });

    test('04388_element_check_04365', () async {
      print("\n********** テスト実行：04388_element_check_04365 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.msg1;
      print(qcashier.screen137.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.msg1 = testData1s;
      print(qcashier.screen137.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.msg1 = testData2s;
      print(qcashier.screen137.msg1);
      expect(qcashier.screen137.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.msg1 = defalut;
      print(qcashier.screen137.msg1);
      expect(qcashier.screen137.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04388_element_check_04365 **********\n\n");
    });

    test('04389_element_check_04366', () async {
      print("\n********** テスト実行：04389_element_check_04366 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.msg2;
      print(qcashier.screen137.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.msg2 = testData1s;
      print(qcashier.screen137.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.msg2 = testData2s;
      print(qcashier.screen137.msg2);
      expect(qcashier.screen137.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.msg2 = defalut;
      print(qcashier.screen137.msg2);
      expect(qcashier.screen137.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04389_element_check_04366 **********\n\n");
    });

    test('04390_element_check_04367', () async {
      print("\n********** テスト実行：04390_element_check_04367 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.msg1_size;
      print(qcashier.screen137.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.msg1_size = testData1;
      print(qcashier.screen137.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.msg1_size = testData2;
      print(qcashier.screen137.msg1_size);
      expect(qcashier.screen137.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.msg1_size = defalut;
      print(qcashier.screen137.msg1_size);
      expect(qcashier.screen137.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04390_element_check_04367 **********\n\n");
    });

    test('04391_element_check_04368', () async {
      print("\n********** テスト実行：04391_element_check_04368 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.msg2_size;
      print(qcashier.screen137.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.msg2_size = testData1;
      print(qcashier.screen137.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.msg2_size = testData2;
      print(qcashier.screen137.msg2_size);
      expect(qcashier.screen137.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.msg2_size = defalut;
      print(qcashier.screen137.msg2_size);
      expect(qcashier.screen137.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04391_element_check_04368 **********\n\n");
    });

    test('04392_element_check_04369', () async {
      print("\n********** テスト実行：04392_element_check_04369 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.sound1;
      print(qcashier.screen137.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.sound1 = testData1;
      print(qcashier.screen137.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.sound1 = testData2;
      print(qcashier.screen137.sound1);
      expect(qcashier.screen137.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.sound1 = defalut;
      print(qcashier.screen137.sound1);
      expect(qcashier.screen137.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04392_element_check_04369 **********\n\n");
    });

    test('04393_element_check_04370', () async {
      print("\n********** テスト実行：04393_element_check_04370 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.sound2;
      print(qcashier.screen137.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.sound2 = testData1;
      print(qcashier.screen137.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.sound2 = testData2;
      print(qcashier.screen137.sound2);
      expect(qcashier.screen137.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.sound2 = defalut;
      print(qcashier.screen137.sound2);
      expect(qcashier.screen137.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04393_element_check_04370 **********\n\n");
    });

    test('04394_element_check_04371', () async {
      print("\n********** テスト実行：04394_element_check_04371 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.sound3;
      print(qcashier.screen137.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.sound3 = testData1;
      print(qcashier.screen137.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.sound3 = testData2;
      print(qcashier.screen137.sound3);
      expect(qcashier.screen137.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.sound3 = defalut;
      print(qcashier.screen137.sound3);
      expect(qcashier.screen137.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04394_element_check_04371 **********\n\n");
    });

    test('04395_element_check_04372', () async {
      print("\n********** テスト実行：04395_element_check_04372 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.snd_timer;
      print(qcashier.screen137.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.snd_timer = testData1;
      print(qcashier.screen137.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.snd_timer = testData2;
      print(qcashier.screen137.snd_timer);
      expect(qcashier.screen137.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.snd_timer = defalut;
      print(qcashier.screen137.snd_timer);
      expect(qcashier.screen137.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04395_element_check_04372 **********\n\n");
    });

    test('04396_element_check_04373', () async {
      print("\n********** テスト実行：04396_element_check_04373 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.timer1;
      print(qcashier.screen137.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.timer1 = testData1;
      print(qcashier.screen137.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.timer1 = testData2;
      print(qcashier.screen137.timer1);
      expect(qcashier.screen137.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.timer1 = defalut;
      print(qcashier.screen137.timer1);
      expect(qcashier.screen137.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04396_element_check_04373 **********\n\n");
    });

    test('04397_element_check_04374', () async {
      print("\n********** テスト実行：04397_element_check_04374 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.timer2;
      print(qcashier.screen137.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.timer2 = testData1;
      print(qcashier.screen137.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.timer2 = testData2;
      print(qcashier.screen137.timer2);
      expect(qcashier.screen137.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.timer2 = defalut;
      print(qcashier.screen137.timer2);
      expect(qcashier.screen137.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04397_element_check_04374 **********\n\n");
    });

    test('04398_element_check_04375', () async {
      print("\n********** テスト実行：04398_element_check_04375 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.timer3;
      print(qcashier.screen137.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.timer3 = testData1;
      print(qcashier.screen137.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.timer3 = testData2;
      print(qcashier.screen137.timer3);
      expect(qcashier.screen137.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.timer3 = defalut;
      print(qcashier.screen137.timer3);
      expect(qcashier.screen137.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04398_element_check_04375 **********\n\n");
    });

    test('04399_element_check_04376', () async {
      print("\n********** テスト実行：04399_element_check_04376 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.dsp_flg1;
      print(qcashier.screen137.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.dsp_flg1 = testData1;
      print(qcashier.screen137.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.dsp_flg1 = testData2;
      print(qcashier.screen137.dsp_flg1);
      expect(qcashier.screen137.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.dsp_flg1 = defalut;
      print(qcashier.screen137.dsp_flg1);
      expect(qcashier.screen137.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04399_element_check_04376 **********\n\n");
    });

    test('04400_element_check_04377', () async {
      print("\n********** テスト実行：04400_element_check_04377 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.dsp_flg2;
      print(qcashier.screen137.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.dsp_flg2 = testData1;
      print(qcashier.screen137.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.dsp_flg2 = testData2;
      print(qcashier.screen137.dsp_flg2);
      expect(qcashier.screen137.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.dsp_flg2 = defalut;
      print(qcashier.screen137.dsp_flg2);
      expect(qcashier.screen137.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04400_element_check_04377 **********\n\n");
    });

    test('04401_element_check_04378', () async {
      print("\n********** テスト実行：04401_element_check_04378 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.movie01_ext;
      print(qcashier.screen137.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.movie01_ext = testData1;
      print(qcashier.screen137.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.movie01_ext = testData2;
      print(qcashier.screen137.movie01_ext);
      expect(qcashier.screen137.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.movie01_ext = defalut;
      print(qcashier.screen137.movie01_ext);
      expect(qcashier.screen137.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04401_element_check_04378 **********\n\n");
    });

    test('04402_element_check_04379', () async {
      print("\n********** テスト実行：04402_element_check_04379 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.movie02_ext;
      print(qcashier.screen137.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.movie02_ext = testData1;
      print(qcashier.screen137.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.movie02_ext = testData2;
      print(qcashier.screen137.movie02_ext);
      expect(qcashier.screen137.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.movie02_ext = defalut;
      print(qcashier.screen137.movie02_ext);
      expect(qcashier.screen137.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04402_element_check_04379 **********\n\n");
    });

    test('04403_element_check_04380', () async {
      print("\n********** テスト実行：04403_element_check_04380 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.movie03_ext;
      print(qcashier.screen137.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.movie03_ext = testData1;
      print(qcashier.screen137.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.movie03_ext = testData2;
      print(qcashier.screen137.movie03_ext);
      expect(qcashier.screen137.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.movie03_ext = defalut;
      print(qcashier.screen137.movie03_ext);
      expect(qcashier.screen137.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04403_element_check_04380 **********\n\n");
    });

    test('04404_element_check_04381', () async {
      print("\n********** テスト実行：04404_element_check_04381 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.movie04_ext;
      print(qcashier.screen137.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.movie04_ext = testData1;
      print(qcashier.screen137.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.movie04_ext = testData2;
      print(qcashier.screen137.movie04_ext);
      expect(qcashier.screen137.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.movie04_ext = defalut;
      print(qcashier.screen137.movie04_ext);
      expect(qcashier.screen137.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04404_element_check_04381 **********\n\n");
    });

    test('04405_element_check_04382', () async {
      print("\n********** テスト実行：04405_element_check_04382 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.line_title;
      print(qcashier.screen137.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.line_title = testData1s;
      print(qcashier.screen137.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.line_title = testData2s;
      print(qcashier.screen137.line_title);
      expect(qcashier.screen137.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.line_title = defalut;
      print(qcashier.screen137.line_title);
      expect(qcashier.screen137.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04405_element_check_04382 **********\n\n");
    });

    test('04406_element_check_04383', () async {
      print("\n********** テスト実行：04406_element_check_04383 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.line_title_ex;
      print(qcashier.screen137.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.line_title_ex = testData1s;
      print(qcashier.screen137.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.line_title_ex = testData2s;
      print(qcashier.screen137.line_title_ex);
      expect(qcashier.screen137.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.line_title_ex = defalut;
      print(qcashier.screen137.line_title_ex);
      expect(qcashier.screen137.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04406_element_check_04383 **********\n\n");
    });

    test('04407_element_check_04384', () async {
      print("\n********** テスト実行：04407_element_check_04384 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.line1;
      print(qcashier.screen137.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.line1 = testData1s;
      print(qcashier.screen137.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.line1 = testData2s;
      print(qcashier.screen137.line1);
      expect(qcashier.screen137.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.line1 = defalut;
      print(qcashier.screen137.line1);
      expect(qcashier.screen137.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04407_element_check_04384 **********\n\n");
    });

    test('04408_element_check_04385', () async {
      print("\n********** テスト実行：04408_element_check_04385 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.line2;
      print(qcashier.screen137.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.line2 = testData1s;
      print(qcashier.screen137.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.line2 = testData2s;
      print(qcashier.screen137.line2);
      expect(qcashier.screen137.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.line2 = defalut;
      print(qcashier.screen137.line2);
      expect(qcashier.screen137.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04408_element_check_04385 **********\n\n");
    });

    test('04409_element_check_04386', () async {
      print("\n********** テスト実行：04409_element_check_04386 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.line3;
      print(qcashier.screen137.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.line3 = testData1s;
      print(qcashier.screen137.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.line3 = testData2s;
      print(qcashier.screen137.line3);
      expect(qcashier.screen137.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.line3 = defalut;
      print(qcashier.screen137.line3);
      expect(qcashier.screen137.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04409_element_check_04386 **********\n\n");
    });

    test('04410_element_check_04387', () async {
      print("\n********** テスト実行：04410_element_check_04387 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.line4;
      print(qcashier.screen137.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.line4 = testData1s;
      print(qcashier.screen137.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.line4 = testData2s;
      print(qcashier.screen137.line4);
      expect(qcashier.screen137.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.line4 = defalut;
      print(qcashier.screen137.line4);
      expect(qcashier.screen137.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04410_element_check_04387 **********\n\n");
    });

    test('04411_element_check_04388', () async {
      print("\n********** テスト実行：04411_element_check_04388 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.line1_ex;
      print(qcashier.screen137.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.line1_ex = testData1s;
      print(qcashier.screen137.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.line1_ex = testData2s;
      print(qcashier.screen137.line1_ex);
      expect(qcashier.screen137.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.line1_ex = defalut;
      print(qcashier.screen137.line1_ex);
      expect(qcashier.screen137.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04411_element_check_04388 **********\n\n");
    });

    test('04412_element_check_04389', () async {
      print("\n********** テスト実行：04412_element_check_04389 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.line2_ex;
      print(qcashier.screen137.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.line2_ex = testData1s;
      print(qcashier.screen137.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.line2_ex = testData2s;
      print(qcashier.screen137.line2_ex);
      expect(qcashier.screen137.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.line2_ex = defalut;
      print(qcashier.screen137.line2_ex);
      expect(qcashier.screen137.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04412_element_check_04389 **********\n\n");
    });

    test('04413_element_check_04390', () async {
      print("\n********** テスト実行：04413_element_check_04390 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.line3_ex;
      print(qcashier.screen137.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.line3_ex = testData1s;
      print(qcashier.screen137.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.line3_ex = testData2s;
      print(qcashier.screen137.line3_ex);
      expect(qcashier.screen137.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.line3_ex = defalut;
      print(qcashier.screen137.line3_ex);
      expect(qcashier.screen137.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04413_element_check_04390 **********\n\n");
    });

    test('04414_element_check_04391', () async {
      print("\n********** テスト実行：04414_element_check_04391 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.line4_ex;
      print(qcashier.screen137.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.line4_ex = testData1s;
      print(qcashier.screen137.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.line4_ex = testData2s;
      print(qcashier.screen137.line4_ex);
      expect(qcashier.screen137.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.line4_ex = defalut;
      print(qcashier.screen137.line4_ex);
      expect(qcashier.screen137.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04414_element_check_04391 **********\n\n");
    });

    test('04415_element_check_04392', () async {
      print("\n********** テスト実行：04415_element_check_04392 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.sound_led1;
      print(qcashier.screen137.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.sound_led1 = testData1;
      print(qcashier.screen137.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.sound_led1 = testData2;
      print(qcashier.screen137.sound_led1);
      expect(qcashier.screen137.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.sound_led1 = defalut;
      print(qcashier.screen137.sound_led1);
      expect(qcashier.screen137.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04415_element_check_04392 **********\n\n");
    });

    test('04416_element_check_04393', () async {
      print("\n********** テスト実行：04416_element_check_04393 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.sound_led2;
      print(qcashier.screen137.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.sound_led2 = testData1;
      print(qcashier.screen137.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.sound_led2 = testData2;
      print(qcashier.screen137.sound_led2);
      expect(qcashier.screen137.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.sound_led2 = defalut;
      print(qcashier.screen137.sound_led2);
      expect(qcashier.screen137.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04416_element_check_04393 **********\n\n");
    });

    test('04417_element_check_04394', () async {
      print("\n********** テスト実行：04417_element_check_04394 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen137.sound_led3;
      print(qcashier.screen137.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen137.sound_led3 = testData1;
      print(qcashier.screen137.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen137.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen137.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen137.sound_led3 = testData2;
      print(qcashier.screen137.sound_led3);
      expect(qcashier.screen137.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen137.sound_led3 = defalut;
      print(qcashier.screen137.sound_led3);
      expect(qcashier.screen137.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen137.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04417_element_check_04394 **********\n\n");
    });

    test('04418_element_check_04395', () async {
      print("\n********** テスト実行：04418_element_check_04395 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.title;
      print(qcashier.screen138.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.title = testData1s;
      print(qcashier.screen138.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.title = testData2s;
      print(qcashier.screen138.title);
      expect(qcashier.screen138.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.title = defalut;
      print(qcashier.screen138.title);
      expect(qcashier.screen138.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04418_element_check_04395 **********\n\n");
    });

    test('04419_element_check_04396', () async {
      print("\n********** テスト実行：04419_element_check_04396 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.msg1;
      print(qcashier.screen138.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.msg1 = testData1s;
      print(qcashier.screen138.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.msg1 = testData2s;
      print(qcashier.screen138.msg1);
      expect(qcashier.screen138.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.msg1 = defalut;
      print(qcashier.screen138.msg1);
      expect(qcashier.screen138.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04419_element_check_04396 **********\n\n");
    });

    test('04420_element_check_04397', () async {
      print("\n********** テスト実行：04420_element_check_04397 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.msg2;
      print(qcashier.screen138.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.msg2 = testData1s;
      print(qcashier.screen138.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.msg2 = testData2s;
      print(qcashier.screen138.msg2);
      expect(qcashier.screen138.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.msg2 = defalut;
      print(qcashier.screen138.msg2);
      expect(qcashier.screen138.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04420_element_check_04397 **********\n\n");
    });

    test('04421_element_check_04398', () async {
      print("\n********** テスト実行：04421_element_check_04398 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.msg1_size;
      print(qcashier.screen138.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.msg1_size = testData1;
      print(qcashier.screen138.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.msg1_size = testData2;
      print(qcashier.screen138.msg1_size);
      expect(qcashier.screen138.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.msg1_size = defalut;
      print(qcashier.screen138.msg1_size);
      expect(qcashier.screen138.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04421_element_check_04398 **********\n\n");
    });

    test('04422_element_check_04399', () async {
      print("\n********** テスト実行：04422_element_check_04399 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.msg2_size;
      print(qcashier.screen138.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.msg2_size = testData1;
      print(qcashier.screen138.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.msg2_size = testData2;
      print(qcashier.screen138.msg2_size);
      expect(qcashier.screen138.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.msg2_size = defalut;
      print(qcashier.screen138.msg2_size);
      expect(qcashier.screen138.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04422_element_check_04399 **********\n\n");
    });

    test('04423_element_check_04400', () async {
      print("\n********** テスト実行：04423_element_check_04400 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.sound1;
      print(qcashier.screen138.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.sound1 = testData1;
      print(qcashier.screen138.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.sound1 = testData2;
      print(qcashier.screen138.sound1);
      expect(qcashier.screen138.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.sound1 = defalut;
      print(qcashier.screen138.sound1);
      expect(qcashier.screen138.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04423_element_check_04400 **********\n\n");
    });

    test('04424_element_check_04401', () async {
      print("\n********** テスト実行：04424_element_check_04401 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.sound2;
      print(qcashier.screen138.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.sound2 = testData1;
      print(qcashier.screen138.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.sound2 = testData2;
      print(qcashier.screen138.sound2);
      expect(qcashier.screen138.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.sound2 = defalut;
      print(qcashier.screen138.sound2);
      expect(qcashier.screen138.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04424_element_check_04401 **********\n\n");
    });

    test('04425_element_check_04402', () async {
      print("\n********** テスト実行：04425_element_check_04402 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.sound3;
      print(qcashier.screen138.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.sound3 = testData1;
      print(qcashier.screen138.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.sound3 = testData2;
      print(qcashier.screen138.sound3);
      expect(qcashier.screen138.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.sound3 = defalut;
      print(qcashier.screen138.sound3);
      expect(qcashier.screen138.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04425_element_check_04402 **********\n\n");
    });

    test('04426_element_check_04403', () async {
      print("\n********** テスト実行：04426_element_check_04403 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.snd_timer;
      print(qcashier.screen138.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.snd_timer = testData1;
      print(qcashier.screen138.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.snd_timer = testData2;
      print(qcashier.screen138.snd_timer);
      expect(qcashier.screen138.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.snd_timer = defalut;
      print(qcashier.screen138.snd_timer);
      expect(qcashier.screen138.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04426_element_check_04403 **********\n\n");
    });

    test('04427_element_check_04404', () async {
      print("\n********** テスト実行：04427_element_check_04404 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.timer1;
      print(qcashier.screen138.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.timer1 = testData1;
      print(qcashier.screen138.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.timer1 = testData2;
      print(qcashier.screen138.timer1);
      expect(qcashier.screen138.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.timer1 = defalut;
      print(qcashier.screen138.timer1);
      expect(qcashier.screen138.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04427_element_check_04404 **********\n\n");
    });

    test('04428_element_check_04405', () async {
      print("\n********** テスト実行：04428_element_check_04405 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.timer2;
      print(qcashier.screen138.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.timer2 = testData1;
      print(qcashier.screen138.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.timer2 = testData2;
      print(qcashier.screen138.timer2);
      expect(qcashier.screen138.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.timer2 = defalut;
      print(qcashier.screen138.timer2);
      expect(qcashier.screen138.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04428_element_check_04405 **********\n\n");
    });

    test('04429_element_check_04406', () async {
      print("\n********** テスト実行：04429_element_check_04406 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.timer3;
      print(qcashier.screen138.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.timer3 = testData1;
      print(qcashier.screen138.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.timer3 = testData2;
      print(qcashier.screen138.timer3);
      expect(qcashier.screen138.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.timer3 = defalut;
      print(qcashier.screen138.timer3);
      expect(qcashier.screen138.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04429_element_check_04406 **********\n\n");
    });

    test('04430_element_check_04407', () async {
      print("\n********** テスト実行：04430_element_check_04407 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.dsp_flg1;
      print(qcashier.screen138.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.dsp_flg1 = testData1;
      print(qcashier.screen138.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.dsp_flg1 = testData2;
      print(qcashier.screen138.dsp_flg1);
      expect(qcashier.screen138.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.dsp_flg1 = defalut;
      print(qcashier.screen138.dsp_flg1);
      expect(qcashier.screen138.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04430_element_check_04407 **********\n\n");
    });

    test('04431_element_check_04408', () async {
      print("\n********** テスト実行：04431_element_check_04408 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.dsp_flg2;
      print(qcashier.screen138.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.dsp_flg2 = testData1;
      print(qcashier.screen138.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.dsp_flg2 = testData2;
      print(qcashier.screen138.dsp_flg2);
      expect(qcashier.screen138.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.dsp_flg2 = defalut;
      print(qcashier.screen138.dsp_flg2);
      expect(qcashier.screen138.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04431_element_check_04408 **********\n\n");
    });

    test('04432_element_check_04409', () async {
      print("\n********** テスト実行：04432_element_check_04409 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.movie01_ext;
      print(qcashier.screen138.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.movie01_ext = testData1;
      print(qcashier.screen138.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.movie01_ext = testData2;
      print(qcashier.screen138.movie01_ext);
      expect(qcashier.screen138.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.movie01_ext = defalut;
      print(qcashier.screen138.movie01_ext);
      expect(qcashier.screen138.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04432_element_check_04409 **********\n\n");
    });

    test('04433_element_check_04410', () async {
      print("\n********** テスト実行：04433_element_check_04410 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.movie02_ext;
      print(qcashier.screen138.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.movie02_ext = testData1;
      print(qcashier.screen138.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.movie02_ext = testData2;
      print(qcashier.screen138.movie02_ext);
      expect(qcashier.screen138.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.movie02_ext = defalut;
      print(qcashier.screen138.movie02_ext);
      expect(qcashier.screen138.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04433_element_check_04410 **********\n\n");
    });

    test('04434_element_check_04411', () async {
      print("\n********** テスト実行：04434_element_check_04411 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.movie03_ext;
      print(qcashier.screen138.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.movie03_ext = testData1;
      print(qcashier.screen138.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.movie03_ext = testData2;
      print(qcashier.screen138.movie03_ext);
      expect(qcashier.screen138.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.movie03_ext = defalut;
      print(qcashier.screen138.movie03_ext);
      expect(qcashier.screen138.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04434_element_check_04411 **********\n\n");
    });

    test('04435_element_check_04412', () async {
      print("\n********** テスト実行：04435_element_check_04412 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.movie04_ext;
      print(qcashier.screen138.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.movie04_ext = testData1;
      print(qcashier.screen138.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.movie04_ext = testData2;
      print(qcashier.screen138.movie04_ext);
      expect(qcashier.screen138.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.movie04_ext = defalut;
      print(qcashier.screen138.movie04_ext);
      expect(qcashier.screen138.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04435_element_check_04412 **********\n\n");
    });

    test('04436_element_check_04413', () async {
      print("\n********** テスト実行：04436_element_check_04413 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.line_title;
      print(qcashier.screen138.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.line_title = testData1s;
      print(qcashier.screen138.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.line_title = testData2s;
      print(qcashier.screen138.line_title);
      expect(qcashier.screen138.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.line_title = defalut;
      print(qcashier.screen138.line_title);
      expect(qcashier.screen138.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04436_element_check_04413 **********\n\n");
    });

    test('04437_element_check_04414', () async {
      print("\n********** テスト実行：04437_element_check_04414 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.line_title_ex;
      print(qcashier.screen138.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.line_title_ex = testData1s;
      print(qcashier.screen138.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.line_title_ex = testData2s;
      print(qcashier.screen138.line_title_ex);
      expect(qcashier.screen138.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.line_title_ex = defalut;
      print(qcashier.screen138.line_title_ex);
      expect(qcashier.screen138.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04437_element_check_04414 **********\n\n");
    });

    test('04438_element_check_04415', () async {
      print("\n********** テスト実行：04438_element_check_04415 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.line1;
      print(qcashier.screen138.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.line1 = testData1s;
      print(qcashier.screen138.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.line1 = testData2s;
      print(qcashier.screen138.line1);
      expect(qcashier.screen138.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.line1 = defalut;
      print(qcashier.screen138.line1);
      expect(qcashier.screen138.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04438_element_check_04415 **********\n\n");
    });

    test('04439_element_check_04416', () async {
      print("\n********** テスト実行：04439_element_check_04416 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.line2;
      print(qcashier.screen138.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.line2 = testData1s;
      print(qcashier.screen138.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.line2 = testData2s;
      print(qcashier.screen138.line2);
      expect(qcashier.screen138.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.line2 = defalut;
      print(qcashier.screen138.line2);
      expect(qcashier.screen138.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04439_element_check_04416 **********\n\n");
    });

    test('04440_element_check_04417', () async {
      print("\n********** テスト実行：04440_element_check_04417 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.line3;
      print(qcashier.screen138.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.line3 = testData1s;
      print(qcashier.screen138.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.line3 = testData2s;
      print(qcashier.screen138.line3);
      expect(qcashier.screen138.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.line3 = defalut;
      print(qcashier.screen138.line3);
      expect(qcashier.screen138.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04440_element_check_04417 **********\n\n");
    });

    test('04441_element_check_04418', () async {
      print("\n********** テスト実行：04441_element_check_04418 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.line4;
      print(qcashier.screen138.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.line4 = testData1s;
      print(qcashier.screen138.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.line4 = testData2s;
      print(qcashier.screen138.line4);
      expect(qcashier.screen138.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.line4 = defalut;
      print(qcashier.screen138.line4);
      expect(qcashier.screen138.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04441_element_check_04418 **********\n\n");
    });

    test('04442_element_check_04419', () async {
      print("\n********** テスト実行：04442_element_check_04419 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.line1_ex;
      print(qcashier.screen138.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.line1_ex = testData1s;
      print(qcashier.screen138.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.line1_ex = testData2s;
      print(qcashier.screen138.line1_ex);
      expect(qcashier.screen138.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.line1_ex = defalut;
      print(qcashier.screen138.line1_ex);
      expect(qcashier.screen138.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04442_element_check_04419 **********\n\n");
    });

    test('04443_element_check_04420', () async {
      print("\n********** テスト実行：04443_element_check_04420 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.line2_ex;
      print(qcashier.screen138.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.line2_ex = testData1s;
      print(qcashier.screen138.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.line2_ex = testData2s;
      print(qcashier.screen138.line2_ex);
      expect(qcashier.screen138.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.line2_ex = defalut;
      print(qcashier.screen138.line2_ex);
      expect(qcashier.screen138.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04443_element_check_04420 **********\n\n");
    });

    test('04444_element_check_04421', () async {
      print("\n********** テスト実行：04444_element_check_04421 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.line3_ex;
      print(qcashier.screen138.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.line3_ex = testData1s;
      print(qcashier.screen138.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.line3_ex = testData2s;
      print(qcashier.screen138.line3_ex);
      expect(qcashier.screen138.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.line3_ex = defalut;
      print(qcashier.screen138.line3_ex);
      expect(qcashier.screen138.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04444_element_check_04421 **********\n\n");
    });

    test('04445_element_check_04422', () async {
      print("\n********** テスト実行：04445_element_check_04422 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.line4_ex;
      print(qcashier.screen138.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.line4_ex = testData1s;
      print(qcashier.screen138.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.line4_ex = testData2s;
      print(qcashier.screen138.line4_ex);
      expect(qcashier.screen138.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.line4_ex = defalut;
      print(qcashier.screen138.line4_ex);
      expect(qcashier.screen138.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04445_element_check_04422 **********\n\n");
    });

    test('04446_element_check_04423', () async {
      print("\n********** テスト実行：04446_element_check_04423 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.sound_led1;
      print(qcashier.screen138.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.sound_led1 = testData1;
      print(qcashier.screen138.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.sound_led1 = testData2;
      print(qcashier.screen138.sound_led1);
      expect(qcashier.screen138.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.sound_led1 = defalut;
      print(qcashier.screen138.sound_led1);
      expect(qcashier.screen138.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04446_element_check_04423 **********\n\n");
    });

    test('04447_element_check_04424', () async {
      print("\n********** テスト実行：04447_element_check_04424 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.sound_led2;
      print(qcashier.screen138.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.sound_led2 = testData1;
      print(qcashier.screen138.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.sound_led2 = testData2;
      print(qcashier.screen138.sound_led2);
      expect(qcashier.screen138.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.sound_led2 = defalut;
      print(qcashier.screen138.sound_led2);
      expect(qcashier.screen138.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04447_element_check_04424 **********\n\n");
    });

    test('04448_element_check_04425', () async {
      print("\n********** テスト実行：04448_element_check_04425 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen138.sound_led3;
      print(qcashier.screen138.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen138.sound_led3 = testData1;
      print(qcashier.screen138.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen138.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen138.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen138.sound_led3 = testData2;
      print(qcashier.screen138.sound_led3);
      expect(qcashier.screen138.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen138.sound_led3 = defalut;
      print(qcashier.screen138.sound_led3);
      expect(qcashier.screen138.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen138.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04448_element_check_04425 **********\n\n");
    });

    test('04449_element_check_04426', () async {
      print("\n********** テスト実行：04449_element_check_04426 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.title;
      print(qcashier.screen139.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.title = testData1s;
      print(qcashier.screen139.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.title = testData2s;
      print(qcashier.screen139.title);
      expect(qcashier.screen139.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.title = defalut;
      print(qcashier.screen139.title);
      expect(qcashier.screen139.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04449_element_check_04426 **********\n\n");
    });

    test('04450_element_check_04427', () async {
      print("\n********** テスト実行：04450_element_check_04427 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.msg1;
      print(qcashier.screen139.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.msg1 = testData1s;
      print(qcashier.screen139.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.msg1 = testData2s;
      print(qcashier.screen139.msg1);
      expect(qcashier.screen139.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.msg1 = defalut;
      print(qcashier.screen139.msg1);
      expect(qcashier.screen139.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04450_element_check_04427 **********\n\n");
    });

    test('04451_element_check_04428', () async {
      print("\n********** テスト実行：04451_element_check_04428 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.msg2;
      print(qcashier.screen139.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.msg2 = testData1s;
      print(qcashier.screen139.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.msg2 = testData2s;
      print(qcashier.screen139.msg2);
      expect(qcashier.screen139.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.msg2 = defalut;
      print(qcashier.screen139.msg2);
      expect(qcashier.screen139.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04451_element_check_04428 **********\n\n");
    });

    test('04452_element_check_04429', () async {
      print("\n********** テスト実行：04452_element_check_04429 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.msg1_size;
      print(qcashier.screen139.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.msg1_size = testData1;
      print(qcashier.screen139.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.msg1_size = testData2;
      print(qcashier.screen139.msg1_size);
      expect(qcashier.screen139.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.msg1_size = defalut;
      print(qcashier.screen139.msg1_size);
      expect(qcashier.screen139.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04452_element_check_04429 **********\n\n");
    });

    test('04453_element_check_04430', () async {
      print("\n********** テスト実行：04453_element_check_04430 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.msg2_size;
      print(qcashier.screen139.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.msg2_size = testData1;
      print(qcashier.screen139.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.msg2_size = testData2;
      print(qcashier.screen139.msg2_size);
      expect(qcashier.screen139.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.msg2_size = defalut;
      print(qcashier.screen139.msg2_size);
      expect(qcashier.screen139.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04453_element_check_04430 **********\n\n");
    });

    test('04454_element_check_04431', () async {
      print("\n********** テスト実行：04454_element_check_04431 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.sound1;
      print(qcashier.screen139.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.sound1 = testData1;
      print(qcashier.screen139.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.sound1 = testData2;
      print(qcashier.screen139.sound1);
      expect(qcashier.screen139.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.sound1 = defalut;
      print(qcashier.screen139.sound1);
      expect(qcashier.screen139.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04454_element_check_04431 **********\n\n");
    });

    test('04455_element_check_04432', () async {
      print("\n********** テスト実行：04455_element_check_04432 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.sound2;
      print(qcashier.screen139.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.sound2 = testData1;
      print(qcashier.screen139.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.sound2 = testData2;
      print(qcashier.screen139.sound2);
      expect(qcashier.screen139.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.sound2 = defalut;
      print(qcashier.screen139.sound2);
      expect(qcashier.screen139.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04455_element_check_04432 **********\n\n");
    });

    test('04456_element_check_04433', () async {
      print("\n********** テスト実行：04456_element_check_04433 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.sound3;
      print(qcashier.screen139.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.sound3 = testData1;
      print(qcashier.screen139.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.sound3 = testData2;
      print(qcashier.screen139.sound3);
      expect(qcashier.screen139.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.sound3 = defalut;
      print(qcashier.screen139.sound3);
      expect(qcashier.screen139.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04456_element_check_04433 **********\n\n");
    });

    test('04457_element_check_04434', () async {
      print("\n********** テスト実行：04457_element_check_04434 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.snd_timer;
      print(qcashier.screen139.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.snd_timer = testData1;
      print(qcashier.screen139.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.snd_timer = testData2;
      print(qcashier.screen139.snd_timer);
      expect(qcashier.screen139.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.snd_timer = defalut;
      print(qcashier.screen139.snd_timer);
      expect(qcashier.screen139.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04457_element_check_04434 **********\n\n");
    });

    test('04458_element_check_04435', () async {
      print("\n********** テスト実行：04458_element_check_04435 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.timer1;
      print(qcashier.screen139.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.timer1 = testData1;
      print(qcashier.screen139.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.timer1 = testData2;
      print(qcashier.screen139.timer1);
      expect(qcashier.screen139.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.timer1 = defalut;
      print(qcashier.screen139.timer1);
      expect(qcashier.screen139.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04458_element_check_04435 **********\n\n");
    });

    test('04459_element_check_04436', () async {
      print("\n********** テスト実行：04459_element_check_04436 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.timer2;
      print(qcashier.screen139.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.timer2 = testData1;
      print(qcashier.screen139.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.timer2 = testData2;
      print(qcashier.screen139.timer2);
      expect(qcashier.screen139.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.timer2 = defalut;
      print(qcashier.screen139.timer2);
      expect(qcashier.screen139.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04459_element_check_04436 **********\n\n");
    });

    test('04460_element_check_04437', () async {
      print("\n********** テスト実行：04460_element_check_04437 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.timer3;
      print(qcashier.screen139.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.timer3 = testData1;
      print(qcashier.screen139.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.timer3 = testData2;
      print(qcashier.screen139.timer3);
      expect(qcashier.screen139.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.timer3 = defalut;
      print(qcashier.screen139.timer3);
      expect(qcashier.screen139.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04460_element_check_04437 **********\n\n");
    });

    test('04461_element_check_04438', () async {
      print("\n********** テスト実行：04461_element_check_04438 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.dsp_flg1;
      print(qcashier.screen139.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.dsp_flg1 = testData1;
      print(qcashier.screen139.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.dsp_flg1 = testData2;
      print(qcashier.screen139.dsp_flg1);
      expect(qcashier.screen139.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.dsp_flg1 = defalut;
      print(qcashier.screen139.dsp_flg1);
      expect(qcashier.screen139.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04461_element_check_04438 **********\n\n");
    });

    test('04462_element_check_04439', () async {
      print("\n********** テスト実行：04462_element_check_04439 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.dsp_flg2;
      print(qcashier.screen139.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.dsp_flg2 = testData1;
      print(qcashier.screen139.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.dsp_flg2 = testData2;
      print(qcashier.screen139.dsp_flg2);
      expect(qcashier.screen139.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.dsp_flg2 = defalut;
      print(qcashier.screen139.dsp_flg2);
      expect(qcashier.screen139.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04462_element_check_04439 **********\n\n");
    });

    test('04463_element_check_04440', () async {
      print("\n********** テスト実行：04463_element_check_04440 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.movie01_ext;
      print(qcashier.screen139.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.movie01_ext = testData1;
      print(qcashier.screen139.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.movie01_ext = testData2;
      print(qcashier.screen139.movie01_ext);
      expect(qcashier.screen139.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.movie01_ext = defalut;
      print(qcashier.screen139.movie01_ext);
      expect(qcashier.screen139.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04463_element_check_04440 **********\n\n");
    });

    test('04464_element_check_04441', () async {
      print("\n********** テスト実行：04464_element_check_04441 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.movie02_ext;
      print(qcashier.screen139.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.movie02_ext = testData1;
      print(qcashier.screen139.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.movie02_ext = testData2;
      print(qcashier.screen139.movie02_ext);
      expect(qcashier.screen139.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.movie02_ext = defalut;
      print(qcashier.screen139.movie02_ext);
      expect(qcashier.screen139.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04464_element_check_04441 **********\n\n");
    });

    test('04465_element_check_04442', () async {
      print("\n********** テスト実行：04465_element_check_04442 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.movie03_ext;
      print(qcashier.screen139.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.movie03_ext = testData1;
      print(qcashier.screen139.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.movie03_ext = testData2;
      print(qcashier.screen139.movie03_ext);
      expect(qcashier.screen139.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.movie03_ext = defalut;
      print(qcashier.screen139.movie03_ext);
      expect(qcashier.screen139.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04465_element_check_04442 **********\n\n");
    });

    test('04466_element_check_04443', () async {
      print("\n********** テスト実行：04466_element_check_04443 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.movie04_ext;
      print(qcashier.screen139.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.movie04_ext = testData1;
      print(qcashier.screen139.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.movie04_ext = testData2;
      print(qcashier.screen139.movie04_ext);
      expect(qcashier.screen139.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.movie04_ext = defalut;
      print(qcashier.screen139.movie04_ext);
      expect(qcashier.screen139.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04466_element_check_04443 **********\n\n");
    });

    test('04467_element_check_04444', () async {
      print("\n********** テスト実行：04467_element_check_04444 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.line_title;
      print(qcashier.screen139.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.line_title = testData1s;
      print(qcashier.screen139.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.line_title = testData2s;
      print(qcashier.screen139.line_title);
      expect(qcashier.screen139.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.line_title = defalut;
      print(qcashier.screen139.line_title);
      expect(qcashier.screen139.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04467_element_check_04444 **********\n\n");
    });

    test('04468_element_check_04445', () async {
      print("\n********** テスト実行：04468_element_check_04445 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.line_title_ex;
      print(qcashier.screen139.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.line_title_ex = testData1s;
      print(qcashier.screen139.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.line_title_ex = testData2s;
      print(qcashier.screen139.line_title_ex);
      expect(qcashier.screen139.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.line_title_ex = defalut;
      print(qcashier.screen139.line_title_ex);
      expect(qcashier.screen139.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04468_element_check_04445 **********\n\n");
    });

    test('04469_element_check_04446', () async {
      print("\n********** テスト実行：04469_element_check_04446 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.line1;
      print(qcashier.screen139.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.line1 = testData1s;
      print(qcashier.screen139.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.line1 = testData2s;
      print(qcashier.screen139.line1);
      expect(qcashier.screen139.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.line1 = defalut;
      print(qcashier.screen139.line1);
      expect(qcashier.screen139.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04469_element_check_04446 **********\n\n");
    });

    test('04470_element_check_04447', () async {
      print("\n********** テスト実行：04470_element_check_04447 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.line2;
      print(qcashier.screen139.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.line2 = testData1s;
      print(qcashier.screen139.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.line2 = testData2s;
      print(qcashier.screen139.line2);
      expect(qcashier.screen139.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.line2 = defalut;
      print(qcashier.screen139.line2);
      expect(qcashier.screen139.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04470_element_check_04447 **********\n\n");
    });

    test('04471_element_check_04448', () async {
      print("\n********** テスト実行：04471_element_check_04448 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.line3;
      print(qcashier.screen139.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.line3 = testData1s;
      print(qcashier.screen139.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.line3 = testData2s;
      print(qcashier.screen139.line3);
      expect(qcashier.screen139.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.line3 = defalut;
      print(qcashier.screen139.line3);
      expect(qcashier.screen139.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04471_element_check_04448 **********\n\n");
    });

    test('04472_element_check_04449', () async {
      print("\n********** テスト実行：04472_element_check_04449 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.line4;
      print(qcashier.screen139.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.line4 = testData1s;
      print(qcashier.screen139.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.line4 = testData2s;
      print(qcashier.screen139.line4);
      expect(qcashier.screen139.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.line4 = defalut;
      print(qcashier.screen139.line4);
      expect(qcashier.screen139.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04472_element_check_04449 **********\n\n");
    });

    test('04473_element_check_04450', () async {
      print("\n********** テスト実行：04473_element_check_04450 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.line1_ex;
      print(qcashier.screen139.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.line1_ex = testData1s;
      print(qcashier.screen139.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.line1_ex = testData2s;
      print(qcashier.screen139.line1_ex);
      expect(qcashier.screen139.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.line1_ex = defalut;
      print(qcashier.screen139.line1_ex);
      expect(qcashier.screen139.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04473_element_check_04450 **********\n\n");
    });

    test('04474_element_check_04451', () async {
      print("\n********** テスト実行：04474_element_check_04451 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.line2_ex;
      print(qcashier.screen139.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.line2_ex = testData1s;
      print(qcashier.screen139.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.line2_ex = testData2s;
      print(qcashier.screen139.line2_ex);
      expect(qcashier.screen139.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.line2_ex = defalut;
      print(qcashier.screen139.line2_ex);
      expect(qcashier.screen139.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04474_element_check_04451 **********\n\n");
    });

    test('04475_element_check_04452', () async {
      print("\n********** テスト実行：04475_element_check_04452 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.line3_ex;
      print(qcashier.screen139.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.line3_ex = testData1s;
      print(qcashier.screen139.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.line3_ex = testData2s;
      print(qcashier.screen139.line3_ex);
      expect(qcashier.screen139.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.line3_ex = defalut;
      print(qcashier.screen139.line3_ex);
      expect(qcashier.screen139.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04475_element_check_04452 **********\n\n");
    });

    test('04476_element_check_04453', () async {
      print("\n********** テスト実行：04476_element_check_04453 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.line4_ex;
      print(qcashier.screen139.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.line4_ex = testData1s;
      print(qcashier.screen139.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.line4_ex = testData2s;
      print(qcashier.screen139.line4_ex);
      expect(qcashier.screen139.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.line4_ex = defalut;
      print(qcashier.screen139.line4_ex);
      expect(qcashier.screen139.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04476_element_check_04453 **********\n\n");
    });

    test('04477_element_check_04454', () async {
      print("\n********** テスト実行：04477_element_check_04454 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.sound_led1;
      print(qcashier.screen139.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.sound_led1 = testData1;
      print(qcashier.screen139.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.sound_led1 = testData2;
      print(qcashier.screen139.sound_led1);
      expect(qcashier.screen139.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.sound_led1 = defalut;
      print(qcashier.screen139.sound_led1);
      expect(qcashier.screen139.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04477_element_check_04454 **********\n\n");
    });

    test('04478_element_check_04455', () async {
      print("\n********** テスト実行：04478_element_check_04455 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.sound_led2;
      print(qcashier.screen139.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.sound_led2 = testData1;
      print(qcashier.screen139.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.sound_led2 = testData2;
      print(qcashier.screen139.sound_led2);
      expect(qcashier.screen139.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.sound_led2 = defalut;
      print(qcashier.screen139.sound_led2);
      expect(qcashier.screen139.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04478_element_check_04455 **********\n\n");
    });

    test('04479_element_check_04456', () async {
      print("\n********** テスト実行：04479_element_check_04456 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen139.sound_led3;
      print(qcashier.screen139.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen139.sound_led3 = testData1;
      print(qcashier.screen139.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen139.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen139.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen139.sound_led3 = testData2;
      print(qcashier.screen139.sound_led3);
      expect(qcashier.screen139.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen139.sound_led3 = defalut;
      print(qcashier.screen139.sound_led3);
      expect(qcashier.screen139.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen139.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04479_element_check_04456 **********\n\n");
    });

    test('04480_element_check_04457', () async {
      print("\n********** テスト実行：04480_element_check_04457 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.title;
      print(qcashier.screen140.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.title = testData1s;
      print(qcashier.screen140.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.title = testData2s;
      print(qcashier.screen140.title);
      expect(qcashier.screen140.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.title = defalut;
      print(qcashier.screen140.title);
      expect(qcashier.screen140.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04480_element_check_04457 **********\n\n");
    });

    test('04481_element_check_04458', () async {
      print("\n********** テスト実行：04481_element_check_04458 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.msg1;
      print(qcashier.screen140.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.msg1 = testData1s;
      print(qcashier.screen140.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.msg1 = testData2s;
      print(qcashier.screen140.msg1);
      expect(qcashier.screen140.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.msg1 = defalut;
      print(qcashier.screen140.msg1);
      expect(qcashier.screen140.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04481_element_check_04458 **********\n\n");
    });

    test('04482_element_check_04459', () async {
      print("\n********** テスト実行：04482_element_check_04459 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.msg2;
      print(qcashier.screen140.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.msg2 = testData1s;
      print(qcashier.screen140.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.msg2 = testData2s;
      print(qcashier.screen140.msg2);
      expect(qcashier.screen140.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.msg2 = defalut;
      print(qcashier.screen140.msg2);
      expect(qcashier.screen140.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04482_element_check_04459 **********\n\n");
    });

    test('04483_element_check_04460', () async {
      print("\n********** テスト実行：04483_element_check_04460 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.msg1_size;
      print(qcashier.screen140.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.msg1_size = testData1;
      print(qcashier.screen140.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.msg1_size = testData2;
      print(qcashier.screen140.msg1_size);
      expect(qcashier.screen140.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.msg1_size = defalut;
      print(qcashier.screen140.msg1_size);
      expect(qcashier.screen140.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04483_element_check_04460 **********\n\n");
    });

    test('04484_element_check_04461', () async {
      print("\n********** テスト実行：04484_element_check_04461 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.msg2_size;
      print(qcashier.screen140.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.msg2_size = testData1;
      print(qcashier.screen140.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.msg2_size = testData2;
      print(qcashier.screen140.msg2_size);
      expect(qcashier.screen140.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.msg2_size = defalut;
      print(qcashier.screen140.msg2_size);
      expect(qcashier.screen140.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04484_element_check_04461 **********\n\n");
    });

    test('04485_element_check_04462', () async {
      print("\n********** テスト実行：04485_element_check_04462 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.sound1;
      print(qcashier.screen140.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.sound1 = testData1;
      print(qcashier.screen140.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.sound1 = testData2;
      print(qcashier.screen140.sound1);
      expect(qcashier.screen140.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.sound1 = defalut;
      print(qcashier.screen140.sound1);
      expect(qcashier.screen140.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04485_element_check_04462 **********\n\n");
    });

    test('04486_element_check_04463', () async {
      print("\n********** テスト実行：04486_element_check_04463 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.sound2;
      print(qcashier.screen140.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.sound2 = testData1;
      print(qcashier.screen140.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.sound2 = testData2;
      print(qcashier.screen140.sound2);
      expect(qcashier.screen140.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.sound2 = defalut;
      print(qcashier.screen140.sound2);
      expect(qcashier.screen140.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04486_element_check_04463 **********\n\n");
    });

    test('04487_element_check_04464', () async {
      print("\n********** テスト実行：04487_element_check_04464 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.sound3;
      print(qcashier.screen140.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.sound3 = testData1;
      print(qcashier.screen140.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.sound3 = testData2;
      print(qcashier.screen140.sound3);
      expect(qcashier.screen140.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.sound3 = defalut;
      print(qcashier.screen140.sound3);
      expect(qcashier.screen140.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04487_element_check_04464 **********\n\n");
    });

    test('04488_element_check_04465', () async {
      print("\n********** テスト実行：04488_element_check_04465 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.snd_timer;
      print(qcashier.screen140.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.snd_timer = testData1;
      print(qcashier.screen140.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.snd_timer = testData2;
      print(qcashier.screen140.snd_timer);
      expect(qcashier.screen140.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.snd_timer = defalut;
      print(qcashier.screen140.snd_timer);
      expect(qcashier.screen140.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04488_element_check_04465 **********\n\n");
    });

    test('04489_element_check_04466', () async {
      print("\n********** テスト実行：04489_element_check_04466 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.timer1;
      print(qcashier.screen140.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.timer1 = testData1;
      print(qcashier.screen140.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.timer1 = testData2;
      print(qcashier.screen140.timer1);
      expect(qcashier.screen140.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.timer1 = defalut;
      print(qcashier.screen140.timer1);
      expect(qcashier.screen140.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04489_element_check_04466 **********\n\n");
    });

    test('04490_element_check_04467', () async {
      print("\n********** テスト実行：04490_element_check_04467 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.timer2;
      print(qcashier.screen140.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.timer2 = testData1;
      print(qcashier.screen140.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.timer2 = testData2;
      print(qcashier.screen140.timer2);
      expect(qcashier.screen140.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.timer2 = defalut;
      print(qcashier.screen140.timer2);
      expect(qcashier.screen140.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04490_element_check_04467 **********\n\n");
    });

    test('04491_element_check_04468', () async {
      print("\n********** テスト実行：04491_element_check_04468 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.timer3;
      print(qcashier.screen140.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.timer3 = testData1;
      print(qcashier.screen140.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.timer3 = testData2;
      print(qcashier.screen140.timer3);
      expect(qcashier.screen140.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.timer3 = defalut;
      print(qcashier.screen140.timer3);
      expect(qcashier.screen140.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04491_element_check_04468 **********\n\n");
    });

    test('04492_element_check_04469', () async {
      print("\n********** テスト実行：04492_element_check_04469 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.dsp_flg1;
      print(qcashier.screen140.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.dsp_flg1 = testData1;
      print(qcashier.screen140.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.dsp_flg1 = testData2;
      print(qcashier.screen140.dsp_flg1);
      expect(qcashier.screen140.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.dsp_flg1 = defalut;
      print(qcashier.screen140.dsp_flg1);
      expect(qcashier.screen140.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04492_element_check_04469 **********\n\n");
    });

    test('04493_element_check_04470', () async {
      print("\n********** テスト実行：04493_element_check_04470 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.dsp_flg2;
      print(qcashier.screen140.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.dsp_flg2 = testData1;
      print(qcashier.screen140.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.dsp_flg2 = testData2;
      print(qcashier.screen140.dsp_flg2);
      expect(qcashier.screen140.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.dsp_flg2 = defalut;
      print(qcashier.screen140.dsp_flg2);
      expect(qcashier.screen140.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04493_element_check_04470 **********\n\n");
    });

    test('04494_element_check_04471', () async {
      print("\n********** テスト実行：04494_element_check_04471 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.movie01_ext;
      print(qcashier.screen140.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.movie01_ext = testData1;
      print(qcashier.screen140.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.movie01_ext = testData2;
      print(qcashier.screen140.movie01_ext);
      expect(qcashier.screen140.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.movie01_ext = defalut;
      print(qcashier.screen140.movie01_ext);
      expect(qcashier.screen140.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04494_element_check_04471 **********\n\n");
    });

    test('04495_element_check_04472', () async {
      print("\n********** テスト実行：04495_element_check_04472 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.movie02_ext;
      print(qcashier.screen140.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.movie02_ext = testData1;
      print(qcashier.screen140.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.movie02_ext = testData2;
      print(qcashier.screen140.movie02_ext);
      expect(qcashier.screen140.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.movie02_ext = defalut;
      print(qcashier.screen140.movie02_ext);
      expect(qcashier.screen140.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04495_element_check_04472 **********\n\n");
    });

    test('04496_element_check_04473', () async {
      print("\n********** テスト実行：04496_element_check_04473 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.movie03_ext;
      print(qcashier.screen140.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.movie03_ext = testData1;
      print(qcashier.screen140.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.movie03_ext = testData2;
      print(qcashier.screen140.movie03_ext);
      expect(qcashier.screen140.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.movie03_ext = defalut;
      print(qcashier.screen140.movie03_ext);
      expect(qcashier.screen140.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04496_element_check_04473 **********\n\n");
    });

    test('04497_element_check_04474', () async {
      print("\n********** テスト実行：04497_element_check_04474 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.movie04_ext;
      print(qcashier.screen140.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.movie04_ext = testData1;
      print(qcashier.screen140.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.movie04_ext = testData2;
      print(qcashier.screen140.movie04_ext);
      expect(qcashier.screen140.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.movie04_ext = defalut;
      print(qcashier.screen140.movie04_ext);
      expect(qcashier.screen140.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04497_element_check_04474 **********\n\n");
    });

    test('04498_element_check_04475', () async {
      print("\n********** テスト実行：04498_element_check_04475 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.line_title;
      print(qcashier.screen140.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.line_title = testData1s;
      print(qcashier.screen140.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.line_title = testData2s;
      print(qcashier.screen140.line_title);
      expect(qcashier.screen140.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.line_title = defalut;
      print(qcashier.screen140.line_title);
      expect(qcashier.screen140.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04498_element_check_04475 **********\n\n");
    });

    test('04499_element_check_04476', () async {
      print("\n********** テスト実行：04499_element_check_04476 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.line_title_ex;
      print(qcashier.screen140.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.line_title_ex = testData1s;
      print(qcashier.screen140.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.line_title_ex = testData2s;
      print(qcashier.screen140.line_title_ex);
      expect(qcashier.screen140.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.line_title_ex = defalut;
      print(qcashier.screen140.line_title_ex);
      expect(qcashier.screen140.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04499_element_check_04476 **********\n\n");
    });

    test('04500_element_check_04477', () async {
      print("\n********** テスト実行：04500_element_check_04477 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.line1;
      print(qcashier.screen140.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.line1 = testData1s;
      print(qcashier.screen140.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.line1 = testData2s;
      print(qcashier.screen140.line1);
      expect(qcashier.screen140.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.line1 = defalut;
      print(qcashier.screen140.line1);
      expect(qcashier.screen140.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04500_element_check_04477 **********\n\n");
    });

    test('04501_element_check_04478', () async {
      print("\n********** テスト実行：04501_element_check_04478 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.line2;
      print(qcashier.screen140.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.line2 = testData1s;
      print(qcashier.screen140.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.line2 = testData2s;
      print(qcashier.screen140.line2);
      expect(qcashier.screen140.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.line2 = defalut;
      print(qcashier.screen140.line2);
      expect(qcashier.screen140.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04501_element_check_04478 **********\n\n");
    });

    test('04502_element_check_04479', () async {
      print("\n********** テスト実行：04502_element_check_04479 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.line3;
      print(qcashier.screen140.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.line3 = testData1s;
      print(qcashier.screen140.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.line3 = testData2s;
      print(qcashier.screen140.line3);
      expect(qcashier.screen140.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.line3 = defalut;
      print(qcashier.screen140.line3);
      expect(qcashier.screen140.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04502_element_check_04479 **********\n\n");
    });

    test('04503_element_check_04480', () async {
      print("\n********** テスト実行：04503_element_check_04480 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.line4;
      print(qcashier.screen140.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.line4 = testData1s;
      print(qcashier.screen140.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.line4 = testData2s;
      print(qcashier.screen140.line4);
      expect(qcashier.screen140.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.line4 = defalut;
      print(qcashier.screen140.line4);
      expect(qcashier.screen140.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04503_element_check_04480 **********\n\n");
    });

    test('04504_element_check_04481', () async {
      print("\n********** テスト実行：04504_element_check_04481 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.line1_ex;
      print(qcashier.screen140.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.line1_ex = testData1s;
      print(qcashier.screen140.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.line1_ex = testData2s;
      print(qcashier.screen140.line1_ex);
      expect(qcashier.screen140.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.line1_ex = defalut;
      print(qcashier.screen140.line1_ex);
      expect(qcashier.screen140.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04504_element_check_04481 **********\n\n");
    });

    test('04505_element_check_04482', () async {
      print("\n********** テスト実行：04505_element_check_04482 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.line2_ex;
      print(qcashier.screen140.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.line2_ex = testData1s;
      print(qcashier.screen140.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.line2_ex = testData2s;
      print(qcashier.screen140.line2_ex);
      expect(qcashier.screen140.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.line2_ex = defalut;
      print(qcashier.screen140.line2_ex);
      expect(qcashier.screen140.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04505_element_check_04482 **********\n\n");
    });

    test('04506_element_check_04483', () async {
      print("\n********** テスト実行：04506_element_check_04483 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.line3_ex;
      print(qcashier.screen140.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.line3_ex = testData1s;
      print(qcashier.screen140.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.line3_ex = testData2s;
      print(qcashier.screen140.line3_ex);
      expect(qcashier.screen140.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.line3_ex = defalut;
      print(qcashier.screen140.line3_ex);
      expect(qcashier.screen140.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04506_element_check_04483 **********\n\n");
    });

    test('04507_element_check_04484', () async {
      print("\n********** テスト実行：04507_element_check_04484 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.line4_ex;
      print(qcashier.screen140.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.line4_ex = testData1s;
      print(qcashier.screen140.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.line4_ex = testData2s;
      print(qcashier.screen140.line4_ex);
      expect(qcashier.screen140.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.line4_ex = defalut;
      print(qcashier.screen140.line4_ex);
      expect(qcashier.screen140.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04507_element_check_04484 **********\n\n");
    });

    test('04508_element_check_04485', () async {
      print("\n********** テスト実行：04508_element_check_04485 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.sound_led1;
      print(qcashier.screen140.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.sound_led1 = testData1;
      print(qcashier.screen140.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.sound_led1 = testData2;
      print(qcashier.screen140.sound_led1);
      expect(qcashier.screen140.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.sound_led1 = defalut;
      print(qcashier.screen140.sound_led1);
      expect(qcashier.screen140.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04508_element_check_04485 **********\n\n");
    });

    test('04509_element_check_04486', () async {
      print("\n********** テスト実行：04509_element_check_04486 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.sound_led2;
      print(qcashier.screen140.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.sound_led2 = testData1;
      print(qcashier.screen140.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.sound_led2 = testData2;
      print(qcashier.screen140.sound_led2);
      expect(qcashier.screen140.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.sound_led2 = defalut;
      print(qcashier.screen140.sound_led2);
      expect(qcashier.screen140.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04509_element_check_04486 **********\n\n");
    });

    test('04510_element_check_04487', () async {
      print("\n********** テスト実行：04510_element_check_04487 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen140.sound_led3;
      print(qcashier.screen140.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen140.sound_led3 = testData1;
      print(qcashier.screen140.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen140.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen140.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen140.sound_led3 = testData2;
      print(qcashier.screen140.sound_led3);
      expect(qcashier.screen140.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen140.sound_led3 = defalut;
      print(qcashier.screen140.sound_led3);
      expect(qcashier.screen140.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen140.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04510_element_check_04487 **********\n\n");
    });

    test('04511_element_check_04488', () async {
      print("\n********** テスト実行：04511_element_check_04488 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.title;
      print(qcashier.screen141.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.title = testData1s;
      print(qcashier.screen141.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.title = testData2s;
      print(qcashier.screen141.title);
      expect(qcashier.screen141.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.title = defalut;
      print(qcashier.screen141.title);
      expect(qcashier.screen141.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04511_element_check_04488 **********\n\n");
    });

    test('04512_element_check_04489', () async {
      print("\n********** テスト実行：04512_element_check_04489 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.msg1;
      print(qcashier.screen141.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.msg1 = testData1s;
      print(qcashier.screen141.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.msg1 = testData2s;
      print(qcashier.screen141.msg1);
      expect(qcashier.screen141.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.msg1 = defalut;
      print(qcashier.screen141.msg1);
      expect(qcashier.screen141.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04512_element_check_04489 **********\n\n");
    });

    test('04513_element_check_04490', () async {
      print("\n********** テスト実行：04513_element_check_04490 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.msg2;
      print(qcashier.screen141.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.msg2 = testData1s;
      print(qcashier.screen141.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.msg2 = testData2s;
      print(qcashier.screen141.msg2);
      expect(qcashier.screen141.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.msg2 = defalut;
      print(qcashier.screen141.msg2);
      expect(qcashier.screen141.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04513_element_check_04490 **********\n\n");
    });

    test('04514_element_check_04491', () async {
      print("\n********** テスト実行：04514_element_check_04491 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.msg1_size;
      print(qcashier.screen141.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.msg1_size = testData1;
      print(qcashier.screen141.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.msg1_size = testData2;
      print(qcashier.screen141.msg1_size);
      expect(qcashier.screen141.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.msg1_size = defalut;
      print(qcashier.screen141.msg1_size);
      expect(qcashier.screen141.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04514_element_check_04491 **********\n\n");
    });

    test('04515_element_check_04492', () async {
      print("\n********** テスト実行：04515_element_check_04492 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.msg2_size;
      print(qcashier.screen141.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.msg2_size = testData1;
      print(qcashier.screen141.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.msg2_size = testData2;
      print(qcashier.screen141.msg2_size);
      expect(qcashier.screen141.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.msg2_size = defalut;
      print(qcashier.screen141.msg2_size);
      expect(qcashier.screen141.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04515_element_check_04492 **********\n\n");
    });

    test('04516_element_check_04493', () async {
      print("\n********** テスト実行：04516_element_check_04493 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.sound1;
      print(qcashier.screen141.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.sound1 = testData1;
      print(qcashier.screen141.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.sound1 = testData2;
      print(qcashier.screen141.sound1);
      expect(qcashier.screen141.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.sound1 = defalut;
      print(qcashier.screen141.sound1);
      expect(qcashier.screen141.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04516_element_check_04493 **********\n\n");
    });

    test('04517_element_check_04494', () async {
      print("\n********** テスト実行：04517_element_check_04494 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.sound2;
      print(qcashier.screen141.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.sound2 = testData1;
      print(qcashier.screen141.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.sound2 = testData2;
      print(qcashier.screen141.sound2);
      expect(qcashier.screen141.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.sound2 = defalut;
      print(qcashier.screen141.sound2);
      expect(qcashier.screen141.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04517_element_check_04494 **********\n\n");
    });

    test('04518_element_check_04495', () async {
      print("\n********** テスト実行：04518_element_check_04495 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.sound3;
      print(qcashier.screen141.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.sound3 = testData1;
      print(qcashier.screen141.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.sound3 = testData2;
      print(qcashier.screen141.sound3);
      expect(qcashier.screen141.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.sound3 = defalut;
      print(qcashier.screen141.sound3);
      expect(qcashier.screen141.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04518_element_check_04495 **********\n\n");
    });

    test('04519_element_check_04496', () async {
      print("\n********** テスト実行：04519_element_check_04496 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.snd_timer;
      print(qcashier.screen141.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.snd_timer = testData1;
      print(qcashier.screen141.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.snd_timer = testData2;
      print(qcashier.screen141.snd_timer);
      expect(qcashier.screen141.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.snd_timer = defalut;
      print(qcashier.screen141.snd_timer);
      expect(qcashier.screen141.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04519_element_check_04496 **********\n\n");
    });

    test('04520_element_check_04497', () async {
      print("\n********** テスト実行：04520_element_check_04497 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.timer1;
      print(qcashier.screen141.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.timer1 = testData1;
      print(qcashier.screen141.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.timer1 = testData2;
      print(qcashier.screen141.timer1);
      expect(qcashier.screen141.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.timer1 = defalut;
      print(qcashier.screen141.timer1);
      expect(qcashier.screen141.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04520_element_check_04497 **********\n\n");
    });

    test('04521_element_check_04498', () async {
      print("\n********** テスト実行：04521_element_check_04498 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.timer2;
      print(qcashier.screen141.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.timer2 = testData1;
      print(qcashier.screen141.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.timer2 = testData2;
      print(qcashier.screen141.timer2);
      expect(qcashier.screen141.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.timer2 = defalut;
      print(qcashier.screen141.timer2);
      expect(qcashier.screen141.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04521_element_check_04498 **********\n\n");
    });

    test('04522_element_check_04499', () async {
      print("\n********** テスト実行：04522_element_check_04499 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.timer3;
      print(qcashier.screen141.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.timer3 = testData1;
      print(qcashier.screen141.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.timer3 = testData2;
      print(qcashier.screen141.timer3);
      expect(qcashier.screen141.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.timer3 = defalut;
      print(qcashier.screen141.timer3);
      expect(qcashier.screen141.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04522_element_check_04499 **********\n\n");
    });

    test('04523_element_check_04500', () async {
      print("\n********** テスト実行：04523_element_check_04500 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.dsp_flg1;
      print(qcashier.screen141.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.dsp_flg1 = testData1;
      print(qcashier.screen141.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.dsp_flg1 = testData2;
      print(qcashier.screen141.dsp_flg1);
      expect(qcashier.screen141.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.dsp_flg1 = defalut;
      print(qcashier.screen141.dsp_flg1);
      expect(qcashier.screen141.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04523_element_check_04500 **********\n\n");
    });

    test('04524_element_check_04501', () async {
      print("\n********** テスト実行：04524_element_check_04501 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.dsp_flg2;
      print(qcashier.screen141.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.dsp_flg2 = testData1;
      print(qcashier.screen141.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.dsp_flg2 = testData2;
      print(qcashier.screen141.dsp_flg2);
      expect(qcashier.screen141.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.dsp_flg2 = defalut;
      print(qcashier.screen141.dsp_flg2);
      expect(qcashier.screen141.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04524_element_check_04501 **********\n\n");
    });

    test('04525_element_check_04502', () async {
      print("\n********** テスト実行：04525_element_check_04502 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.movie01_ext;
      print(qcashier.screen141.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.movie01_ext = testData1;
      print(qcashier.screen141.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.movie01_ext = testData2;
      print(qcashier.screen141.movie01_ext);
      expect(qcashier.screen141.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.movie01_ext = defalut;
      print(qcashier.screen141.movie01_ext);
      expect(qcashier.screen141.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04525_element_check_04502 **********\n\n");
    });

    test('04526_element_check_04503', () async {
      print("\n********** テスト実行：04526_element_check_04503 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.movie02_ext;
      print(qcashier.screen141.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.movie02_ext = testData1;
      print(qcashier.screen141.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.movie02_ext = testData2;
      print(qcashier.screen141.movie02_ext);
      expect(qcashier.screen141.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.movie02_ext = defalut;
      print(qcashier.screen141.movie02_ext);
      expect(qcashier.screen141.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04526_element_check_04503 **********\n\n");
    });

    test('04527_element_check_04504', () async {
      print("\n********** テスト実行：04527_element_check_04504 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.movie03_ext;
      print(qcashier.screen141.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.movie03_ext = testData1;
      print(qcashier.screen141.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.movie03_ext = testData2;
      print(qcashier.screen141.movie03_ext);
      expect(qcashier.screen141.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.movie03_ext = defalut;
      print(qcashier.screen141.movie03_ext);
      expect(qcashier.screen141.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04527_element_check_04504 **********\n\n");
    });

    test('04528_element_check_04505', () async {
      print("\n********** テスト実行：04528_element_check_04505 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.movie04_ext;
      print(qcashier.screen141.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.movie04_ext = testData1;
      print(qcashier.screen141.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.movie04_ext = testData2;
      print(qcashier.screen141.movie04_ext);
      expect(qcashier.screen141.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.movie04_ext = defalut;
      print(qcashier.screen141.movie04_ext);
      expect(qcashier.screen141.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04528_element_check_04505 **********\n\n");
    });

    test('04529_element_check_04506', () async {
      print("\n********** テスト実行：04529_element_check_04506 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.line_title;
      print(qcashier.screen141.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.line_title = testData1s;
      print(qcashier.screen141.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.line_title = testData2s;
      print(qcashier.screen141.line_title);
      expect(qcashier.screen141.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.line_title = defalut;
      print(qcashier.screen141.line_title);
      expect(qcashier.screen141.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04529_element_check_04506 **********\n\n");
    });

    test('04530_element_check_04507', () async {
      print("\n********** テスト実行：04530_element_check_04507 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.line_title_ex;
      print(qcashier.screen141.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.line_title_ex = testData1s;
      print(qcashier.screen141.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.line_title_ex = testData2s;
      print(qcashier.screen141.line_title_ex);
      expect(qcashier.screen141.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.line_title_ex = defalut;
      print(qcashier.screen141.line_title_ex);
      expect(qcashier.screen141.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04530_element_check_04507 **********\n\n");
    });

    test('04531_element_check_04508', () async {
      print("\n********** テスト実行：04531_element_check_04508 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.line1;
      print(qcashier.screen141.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.line1 = testData1s;
      print(qcashier.screen141.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.line1 = testData2s;
      print(qcashier.screen141.line1);
      expect(qcashier.screen141.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.line1 = defalut;
      print(qcashier.screen141.line1);
      expect(qcashier.screen141.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04531_element_check_04508 **********\n\n");
    });

    test('04532_element_check_04509', () async {
      print("\n********** テスト実行：04532_element_check_04509 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.line2;
      print(qcashier.screen141.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.line2 = testData1s;
      print(qcashier.screen141.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.line2 = testData2s;
      print(qcashier.screen141.line2);
      expect(qcashier.screen141.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.line2 = defalut;
      print(qcashier.screen141.line2);
      expect(qcashier.screen141.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04532_element_check_04509 **********\n\n");
    });

    test('04533_element_check_04510', () async {
      print("\n********** テスト実行：04533_element_check_04510 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.line3;
      print(qcashier.screen141.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.line3 = testData1s;
      print(qcashier.screen141.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.line3 = testData2s;
      print(qcashier.screen141.line3);
      expect(qcashier.screen141.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.line3 = defalut;
      print(qcashier.screen141.line3);
      expect(qcashier.screen141.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04533_element_check_04510 **********\n\n");
    });

    test('04534_element_check_04511', () async {
      print("\n********** テスト実行：04534_element_check_04511 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.line4;
      print(qcashier.screen141.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.line4 = testData1s;
      print(qcashier.screen141.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.line4 = testData2s;
      print(qcashier.screen141.line4);
      expect(qcashier.screen141.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.line4 = defalut;
      print(qcashier.screen141.line4);
      expect(qcashier.screen141.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04534_element_check_04511 **********\n\n");
    });

    test('04535_element_check_04512', () async {
      print("\n********** テスト実行：04535_element_check_04512 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.line1_ex;
      print(qcashier.screen141.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.line1_ex = testData1s;
      print(qcashier.screen141.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.line1_ex = testData2s;
      print(qcashier.screen141.line1_ex);
      expect(qcashier.screen141.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.line1_ex = defalut;
      print(qcashier.screen141.line1_ex);
      expect(qcashier.screen141.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04535_element_check_04512 **********\n\n");
    });

    test('04536_element_check_04513', () async {
      print("\n********** テスト実行：04536_element_check_04513 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.line2_ex;
      print(qcashier.screen141.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.line2_ex = testData1s;
      print(qcashier.screen141.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.line2_ex = testData2s;
      print(qcashier.screen141.line2_ex);
      expect(qcashier.screen141.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.line2_ex = defalut;
      print(qcashier.screen141.line2_ex);
      expect(qcashier.screen141.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04536_element_check_04513 **********\n\n");
    });

    test('04537_element_check_04514', () async {
      print("\n********** テスト実行：04537_element_check_04514 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.line3_ex;
      print(qcashier.screen141.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.line3_ex = testData1s;
      print(qcashier.screen141.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.line3_ex = testData2s;
      print(qcashier.screen141.line3_ex);
      expect(qcashier.screen141.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.line3_ex = defalut;
      print(qcashier.screen141.line3_ex);
      expect(qcashier.screen141.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04537_element_check_04514 **********\n\n");
    });

    test('04538_element_check_04515', () async {
      print("\n********** テスト実行：04538_element_check_04515 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.line4_ex;
      print(qcashier.screen141.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.line4_ex = testData1s;
      print(qcashier.screen141.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.line4_ex = testData2s;
      print(qcashier.screen141.line4_ex);
      expect(qcashier.screen141.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.line4_ex = defalut;
      print(qcashier.screen141.line4_ex);
      expect(qcashier.screen141.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04538_element_check_04515 **********\n\n");
    });

    test('04539_element_check_04516', () async {
      print("\n********** テスト実行：04539_element_check_04516 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.sound_led1;
      print(qcashier.screen141.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.sound_led1 = testData1;
      print(qcashier.screen141.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.sound_led1 = testData2;
      print(qcashier.screen141.sound_led1);
      expect(qcashier.screen141.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.sound_led1 = defalut;
      print(qcashier.screen141.sound_led1);
      expect(qcashier.screen141.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04539_element_check_04516 **********\n\n");
    });

    test('04540_element_check_04517', () async {
      print("\n********** テスト実行：04540_element_check_04517 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.sound_led2;
      print(qcashier.screen141.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.sound_led2 = testData1;
      print(qcashier.screen141.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.sound_led2 = testData2;
      print(qcashier.screen141.sound_led2);
      expect(qcashier.screen141.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.sound_led2 = defalut;
      print(qcashier.screen141.sound_led2);
      expect(qcashier.screen141.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04540_element_check_04517 **********\n\n");
    });

    test('04541_element_check_04518', () async {
      print("\n********** テスト実行：04541_element_check_04518 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen141.sound_led3;
      print(qcashier.screen141.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen141.sound_led3 = testData1;
      print(qcashier.screen141.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen141.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen141.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen141.sound_led3 = testData2;
      print(qcashier.screen141.sound_led3);
      expect(qcashier.screen141.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen141.sound_led3 = defalut;
      print(qcashier.screen141.sound_led3);
      expect(qcashier.screen141.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen141.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04541_element_check_04518 **********\n\n");
    });

    test('04542_element_check_04519', () async {
      print("\n********** テスト実行：04542_element_check_04519 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.title;
      print(qcashier.screen144.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.title = testData1s;
      print(qcashier.screen144.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.title = testData2s;
      print(qcashier.screen144.title);
      expect(qcashier.screen144.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.title = defalut;
      print(qcashier.screen144.title);
      expect(qcashier.screen144.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04542_element_check_04519 **********\n\n");
    });

    test('04543_element_check_04520', () async {
      print("\n********** テスト実行：04543_element_check_04520 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.msg1;
      print(qcashier.screen144.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.msg1 = testData1s;
      print(qcashier.screen144.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.msg1 = testData2s;
      print(qcashier.screen144.msg1);
      expect(qcashier.screen144.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.msg1 = defalut;
      print(qcashier.screen144.msg1);
      expect(qcashier.screen144.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04543_element_check_04520 **********\n\n");
    });

    test('04544_element_check_04521', () async {
      print("\n********** テスト実行：04544_element_check_04521 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.msg2;
      print(qcashier.screen144.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.msg2 = testData1s;
      print(qcashier.screen144.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.msg2 = testData2s;
      print(qcashier.screen144.msg2);
      expect(qcashier.screen144.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.msg2 = defalut;
      print(qcashier.screen144.msg2);
      expect(qcashier.screen144.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04544_element_check_04521 **********\n\n");
    });

    test('04545_element_check_04522', () async {
      print("\n********** テスト実行：04545_element_check_04522 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.msg1_size;
      print(qcashier.screen144.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.msg1_size = testData1;
      print(qcashier.screen144.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.msg1_size = testData2;
      print(qcashier.screen144.msg1_size);
      expect(qcashier.screen144.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.msg1_size = defalut;
      print(qcashier.screen144.msg1_size);
      expect(qcashier.screen144.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04545_element_check_04522 **********\n\n");
    });

    test('04546_element_check_04523', () async {
      print("\n********** テスト実行：04546_element_check_04523 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.msg2_size;
      print(qcashier.screen144.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.msg2_size = testData1;
      print(qcashier.screen144.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.msg2_size = testData2;
      print(qcashier.screen144.msg2_size);
      expect(qcashier.screen144.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.msg2_size = defalut;
      print(qcashier.screen144.msg2_size);
      expect(qcashier.screen144.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04546_element_check_04523 **********\n\n");
    });

    test('04547_element_check_04524', () async {
      print("\n********** テスト実行：04547_element_check_04524 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.sound1;
      print(qcashier.screen144.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.sound1 = testData1;
      print(qcashier.screen144.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.sound1 = testData2;
      print(qcashier.screen144.sound1);
      expect(qcashier.screen144.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.sound1 = defalut;
      print(qcashier.screen144.sound1);
      expect(qcashier.screen144.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04547_element_check_04524 **********\n\n");
    });

    test('04548_element_check_04525', () async {
      print("\n********** テスト実行：04548_element_check_04525 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.sound2;
      print(qcashier.screen144.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.sound2 = testData1;
      print(qcashier.screen144.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.sound2 = testData2;
      print(qcashier.screen144.sound2);
      expect(qcashier.screen144.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.sound2 = defalut;
      print(qcashier.screen144.sound2);
      expect(qcashier.screen144.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04548_element_check_04525 **********\n\n");
    });

    test('04549_element_check_04526', () async {
      print("\n********** テスト実行：04549_element_check_04526 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.sound3;
      print(qcashier.screen144.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.sound3 = testData1;
      print(qcashier.screen144.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.sound3 = testData2;
      print(qcashier.screen144.sound3);
      expect(qcashier.screen144.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.sound3 = defalut;
      print(qcashier.screen144.sound3);
      expect(qcashier.screen144.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04549_element_check_04526 **********\n\n");
    });

    test('04550_element_check_04527', () async {
      print("\n********** テスト実行：04550_element_check_04527 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.snd_timer;
      print(qcashier.screen144.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.snd_timer = testData1;
      print(qcashier.screen144.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.snd_timer = testData2;
      print(qcashier.screen144.snd_timer);
      expect(qcashier.screen144.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.snd_timer = defalut;
      print(qcashier.screen144.snd_timer);
      expect(qcashier.screen144.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04550_element_check_04527 **********\n\n");
    });

    test('04551_element_check_04528', () async {
      print("\n********** テスト実行：04551_element_check_04528 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.timer1;
      print(qcashier.screen144.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.timer1 = testData1;
      print(qcashier.screen144.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.timer1 = testData2;
      print(qcashier.screen144.timer1);
      expect(qcashier.screen144.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.timer1 = defalut;
      print(qcashier.screen144.timer1);
      expect(qcashier.screen144.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04551_element_check_04528 **********\n\n");
    });

    test('04552_element_check_04529', () async {
      print("\n********** テスト実行：04552_element_check_04529 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.timer2;
      print(qcashier.screen144.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.timer2 = testData1;
      print(qcashier.screen144.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.timer2 = testData2;
      print(qcashier.screen144.timer2);
      expect(qcashier.screen144.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.timer2 = defalut;
      print(qcashier.screen144.timer2);
      expect(qcashier.screen144.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04552_element_check_04529 **********\n\n");
    });

    test('04553_element_check_04530', () async {
      print("\n********** テスト実行：04553_element_check_04530 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.timer3;
      print(qcashier.screen144.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.timer3 = testData1;
      print(qcashier.screen144.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.timer3 = testData2;
      print(qcashier.screen144.timer3);
      expect(qcashier.screen144.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.timer3 = defalut;
      print(qcashier.screen144.timer3);
      expect(qcashier.screen144.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04553_element_check_04530 **********\n\n");
    });

    test('04554_element_check_04531', () async {
      print("\n********** テスト実行：04554_element_check_04531 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.dsp_flg1;
      print(qcashier.screen144.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.dsp_flg1 = testData1;
      print(qcashier.screen144.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.dsp_flg1 = testData2;
      print(qcashier.screen144.dsp_flg1);
      expect(qcashier.screen144.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.dsp_flg1 = defalut;
      print(qcashier.screen144.dsp_flg1);
      expect(qcashier.screen144.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04554_element_check_04531 **********\n\n");
    });

    test('04555_element_check_04532', () async {
      print("\n********** テスト実行：04555_element_check_04532 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.dsp_flg2;
      print(qcashier.screen144.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.dsp_flg2 = testData1;
      print(qcashier.screen144.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.dsp_flg2 = testData2;
      print(qcashier.screen144.dsp_flg2);
      expect(qcashier.screen144.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.dsp_flg2 = defalut;
      print(qcashier.screen144.dsp_flg2);
      expect(qcashier.screen144.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04555_element_check_04532 **********\n\n");
    });

    test('04556_element_check_04533', () async {
      print("\n********** テスト実行：04556_element_check_04533 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.movie01_ext;
      print(qcashier.screen144.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.movie01_ext = testData1;
      print(qcashier.screen144.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.movie01_ext = testData2;
      print(qcashier.screen144.movie01_ext);
      expect(qcashier.screen144.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.movie01_ext = defalut;
      print(qcashier.screen144.movie01_ext);
      expect(qcashier.screen144.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04556_element_check_04533 **********\n\n");
    });

    test('04557_element_check_04534', () async {
      print("\n********** テスト実行：04557_element_check_04534 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.movie02_ext;
      print(qcashier.screen144.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.movie02_ext = testData1;
      print(qcashier.screen144.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.movie02_ext = testData2;
      print(qcashier.screen144.movie02_ext);
      expect(qcashier.screen144.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.movie02_ext = defalut;
      print(qcashier.screen144.movie02_ext);
      expect(qcashier.screen144.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04557_element_check_04534 **********\n\n");
    });

    test('04558_element_check_04535', () async {
      print("\n********** テスト実行：04558_element_check_04535 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.movie03_ext;
      print(qcashier.screen144.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.movie03_ext = testData1;
      print(qcashier.screen144.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.movie03_ext = testData2;
      print(qcashier.screen144.movie03_ext);
      expect(qcashier.screen144.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.movie03_ext = defalut;
      print(qcashier.screen144.movie03_ext);
      expect(qcashier.screen144.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04558_element_check_04535 **********\n\n");
    });

    test('04559_element_check_04536', () async {
      print("\n********** テスト実行：04559_element_check_04536 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.movie04_ext;
      print(qcashier.screen144.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.movie04_ext = testData1;
      print(qcashier.screen144.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.movie04_ext = testData2;
      print(qcashier.screen144.movie04_ext);
      expect(qcashier.screen144.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.movie04_ext = defalut;
      print(qcashier.screen144.movie04_ext);
      expect(qcashier.screen144.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04559_element_check_04536 **********\n\n");
    });

    test('04560_element_check_04537', () async {
      print("\n********** テスト実行：04560_element_check_04537 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.line_title;
      print(qcashier.screen144.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.line_title = testData1s;
      print(qcashier.screen144.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.line_title = testData2s;
      print(qcashier.screen144.line_title);
      expect(qcashier.screen144.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.line_title = defalut;
      print(qcashier.screen144.line_title);
      expect(qcashier.screen144.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04560_element_check_04537 **********\n\n");
    });

    test('04561_element_check_04538', () async {
      print("\n********** テスト実行：04561_element_check_04538 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.line_title_ex;
      print(qcashier.screen144.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.line_title_ex = testData1s;
      print(qcashier.screen144.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.line_title_ex = testData2s;
      print(qcashier.screen144.line_title_ex);
      expect(qcashier.screen144.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.line_title_ex = defalut;
      print(qcashier.screen144.line_title_ex);
      expect(qcashier.screen144.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04561_element_check_04538 **********\n\n");
    });

    test('04562_element_check_04539', () async {
      print("\n********** テスト実行：04562_element_check_04539 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.line1;
      print(qcashier.screen144.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.line1 = testData1s;
      print(qcashier.screen144.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.line1 = testData2s;
      print(qcashier.screen144.line1);
      expect(qcashier.screen144.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.line1 = defalut;
      print(qcashier.screen144.line1);
      expect(qcashier.screen144.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04562_element_check_04539 **********\n\n");
    });

    test('04563_element_check_04540', () async {
      print("\n********** テスト実行：04563_element_check_04540 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.line2;
      print(qcashier.screen144.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.line2 = testData1s;
      print(qcashier.screen144.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.line2 = testData2s;
      print(qcashier.screen144.line2);
      expect(qcashier.screen144.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.line2 = defalut;
      print(qcashier.screen144.line2);
      expect(qcashier.screen144.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04563_element_check_04540 **********\n\n");
    });

    test('04564_element_check_04541', () async {
      print("\n********** テスト実行：04564_element_check_04541 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.line3;
      print(qcashier.screen144.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.line3 = testData1s;
      print(qcashier.screen144.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.line3 = testData2s;
      print(qcashier.screen144.line3);
      expect(qcashier.screen144.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.line3 = defalut;
      print(qcashier.screen144.line3);
      expect(qcashier.screen144.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04564_element_check_04541 **********\n\n");
    });

    test('04565_element_check_04542', () async {
      print("\n********** テスト実行：04565_element_check_04542 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.line4;
      print(qcashier.screen144.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.line4 = testData1s;
      print(qcashier.screen144.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.line4 = testData2s;
      print(qcashier.screen144.line4);
      expect(qcashier.screen144.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.line4 = defalut;
      print(qcashier.screen144.line4);
      expect(qcashier.screen144.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04565_element_check_04542 **********\n\n");
    });

    test('04566_element_check_04543', () async {
      print("\n********** テスト実行：04566_element_check_04543 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.line1_ex;
      print(qcashier.screen144.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.line1_ex = testData1s;
      print(qcashier.screen144.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.line1_ex = testData2s;
      print(qcashier.screen144.line1_ex);
      expect(qcashier.screen144.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.line1_ex = defalut;
      print(qcashier.screen144.line1_ex);
      expect(qcashier.screen144.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04566_element_check_04543 **********\n\n");
    });

    test('04567_element_check_04544', () async {
      print("\n********** テスト実行：04567_element_check_04544 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.line2_ex;
      print(qcashier.screen144.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.line2_ex = testData1s;
      print(qcashier.screen144.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.line2_ex = testData2s;
      print(qcashier.screen144.line2_ex);
      expect(qcashier.screen144.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.line2_ex = defalut;
      print(qcashier.screen144.line2_ex);
      expect(qcashier.screen144.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04567_element_check_04544 **********\n\n");
    });

    test('04568_element_check_04545', () async {
      print("\n********** テスト実行：04568_element_check_04545 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.line3_ex;
      print(qcashier.screen144.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.line3_ex = testData1s;
      print(qcashier.screen144.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.line3_ex = testData2s;
      print(qcashier.screen144.line3_ex);
      expect(qcashier.screen144.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.line3_ex = defalut;
      print(qcashier.screen144.line3_ex);
      expect(qcashier.screen144.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04568_element_check_04545 **********\n\n");
    });

    test('04569_element_check_04546', () async {
      print("\n********** テスト実行：04569_element_check_04546 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.line4_ex;
      print(qcashier.screen144.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.line4_ex = testData1s;
      print(qcashier.screen144.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.line4_ex = testData2s;
      print(qcashier.screen144.line4_ex);
      expect(qcashier.screen144.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.line4_ex = defalut;
      print(qcashier.screen144.line4_ex);
      expect(qcashier.screen144.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04569_element_check_04546 **********\n\n");
    });

    test('04570_element_check_04547', () async {
      print("\n********** テスト実行：04570_element_check_04547 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.sound_led1;
      print(qcashier.screen144.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.sound_led1 = testData1;
      print(qcashier.screen144.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.sound_led1 = testData2;
      print(qcashier.screen144.sound_led1);
      expect(qcashier.screen144.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.sound_led1 = defalut;
      print(qcashier.screen144.sound_led1);
      expect(qcashier.screen144.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04570_element_check_04547 **********\n\n");
    });

    test('04571_element_check_04548', () async {
      print("\n********** テスト実行：04571_element_check_04548 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.sound_led2;
      print(qcashier.screen144.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.sound_led2 = testData1;
      print(qcashier.screen144.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.sound_led2 = testData2;
      print(qcashier.screen144.sound_led2);
      expect(qcashier.screen144.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.sound_led2 = defalut;
      print(qcashier.screen144.sound_led2);
      expect(qcashier.screen144.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04571_element_check_04548 **********\n\n");
    });

    test('04572_element_check_04549', () async {
      print("\n********** テスト実行：04572_element_check_04549 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen144.sound_led3;
      print(qcashier.screen144.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen144.sound_led3 = testData1;
      print(qcashier.screen144.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen144.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen144.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen144.sound_led3 = testData2;
      print(qcashier.screen144.sound_led3);
      expect(qcashier.screen144.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen144.sound_led3 = defalut;
      print(qcashier.screen144.sound_led3);
      expect(qcashier.screen144.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen144.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04572_element_check_04549 **********\n\n");
    });

    test('04573_element_check_04550', () async {
      print("\n********** テスト実行：04573_element_check_04550 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ActSetUp.ReadAlertTime;
      print(qcashier.ActSetUp.ReadAlertTime);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ActSetUp.ReadAlertTime = testData1;
      print(qcashier.ActSetUp.ReadAlertTime);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ActSetUp.ReadAlertTime == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ActSetUp.ReadAlertTime == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ActSetUp.ReadAlertTime = testData2;
      print(qcashier.ActSetUp.ReadAlertTime);
      expect(qcashier.ActSetUp.ReadAlertTime == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ActSetUp.ReadAlertTime == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ActSetUp.ReadAlertTime = defalut;
      print(qcashier.ActSetUp.ReadAlertTime);
      expect(qcashier.ActSetUp.ReadAlertTime == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ActSetUp.ReadAlertTime == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04573_element_check_04550 **********\n\n");
    });

    test('04574_element_check_04551', () async {
      print("\n********** テスト実行：04574_element_check_04551 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ActSetUp.AutoReadInterval;
      print(qcashier.ActSetUp.AutoReadInterval);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ActSetUp.AutoReadInterval = testData1;
      print(qcashier.ActSetUp.AutoReadInterval);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ActSetUp.AutoReadInterval == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ActSetUp.AutoReadInterval == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ActSetUp.AutoReadInterval = testData2;
      print(qcashier.ActSetUp.AutoReadInterval);
      expect(qcashier.ActSetUp.AutoReadInterval == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ActSetUp.AutoReadInterval == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ActSetUp.AutoReadInterval = defalut;
      print(qcashier.ActSetUp.AutoReadInterval);
      expect(qcashier.ActSetUp.AutoReadInterval == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ActSetUp.AutoReadInterval == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04574_element_check_04551 **********\n\n");
    });

    test('04575_element_check_04552', () async {
      print("\n********** テスト実行：04575_element_check_04552 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ActSetUp.InterruptPrint;
      print(qcashier.ActSetUp.InterruptPrint);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ActSetUp.InterruptPrint = testData1;
      print(qcashier.ActSetUp.InterruptPrint);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ActSetUp.InterruptPrint == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ActSetUp.InterruptPrint == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ActSetUp.InterruptPrint = testData2;
      print(qcashier.ActSetUp.InterruptPrint);
      expect(qcashier.ActSetUp.InterruptPrint == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ActSetUp.InterruptPrint == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ActSetUp.InterruptPrint = defalut;
      print(qcashier.ActSetUp.InterruptPrint);
      expect(qcashier.ActSetUp.InterruptPrint == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ActSetUp.InterruptPrint == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04575_element_check_04552 **********\n\n");
    });

    test('04576_element_check_04553', () async {
      print("\n********** テスト実行：04576_element_check_04553 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ActSetUp.InterruptPay;
      print(qcashier.ActSetUp.InterruptPay);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ActSetUp.InterruptPay = testData1;
      print(qcashier.ActSetUp.InterruptPay);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ActSetUp.InterruptPay == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ActSetUp.InterruptPay == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ActSetUp.InterruptPay = testData2;
      print(qcashier.ActSetUp.InterruptPay);
      expect(qcashier.ActSetUp.InterruptPay == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ActSetUp.InterruptPay == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ActSetUp.InterruptPay = defalut;
      print(qcashier.ActSetUp.InterruptPay);
      expect(qcashier.ActSetUp.InterruptPay == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ActSetUp.InterruptPay == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04576_element_check_04553 **********\n\n");
    });

    test('04577_element_check_04554', () async {
      print("\n********** テスト実行：04577_element_check_04554 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ActSetUp.UpdGetFtpTimer;
      print(qcashier.ActSetUp.UpdGetFtpTimer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ActSetUp.UpdGetFtpTimer = testData1;
      print(qcashier.ActSetUp.UpdGetFtpTimer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ActSetUp.UpdGetFtpTimer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ActSetUp.UpdGetFtpTimer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ActSetUp.UpdGetFtpTimer = testData2;
      print(qcashier.ActSetUp.UpdGetFtpTimer);
      expect(qcashier.ActSetUp.UpdGetFtpTimer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ActSetUp.UpdGetFtpTimer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ActSetUp.UpdGetFtpTimer = defalut;
      print(qcashier.ActSetUp.UpdGetFtpTimer);
      expect(qcashier.ActSetUp.UpdGetFtpTimer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ActSetUp.UpdGetFtpTimer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04577_element_check_04554 **********\n\n");
    });

    test('04578_element_check_04555', () async {
      print("\n********** テスト実行：04578_element_check_04555 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.HiddenSetUp.TableReadInterval;
      print(qcashier.HiddenSetUp.TableReadInterval);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.HiddenSetUp.TableReadInterval = testData1;
      print(qcashier.HiddenSetUp.TableReadInterval);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.HiddenSetUp.TableReadInterval == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.HiddenSetUp.TableReadInterval == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.HiddenSetUp.TableReadInterval = testData2;
      print(qcashier.HiddenSetUp.TableReadInterval);
      expect(qcashier.HiddenSetUp.TableReadInterval == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.HiddenSetUp.TableReadInterval == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.HiddenSetUp.TableReadInterval = defalut;
      print(qcashier.HiddenSetUp.TableReadInterval);
      expect(qcashier.HiddenSetUp.TableReadInterval == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.HiddenSetUp.TableReadInterval == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04578_element_check_04555 **********\n\n");
    });

    test('04579_element_check_04556', () async {
      print("\n********** テスト実行：04579_element_check_04556 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.customer.cust_card_max;
      print(qcashier.customer.cust_card_max);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.customer.cust_card_max = testData1;
      print(qcashier.customer.cust_card_max);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.customer.cust_card_max == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.customer.cust_card_max == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.customer.cust_card_max = testData2;
      print(qcashier.customer.cust_card_max);
      expect(qcashier.customer.cust_card_max == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_max == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.customer.cust_card_max = defalut;
      print(qcashier.customer.cust_card_max);
      expect(qcashier.customer.cust_card_max == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_max == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04579_element_check_04556 **********\n\n");
    });

    test('04580_element_check_04557', () async {
      print("\n********** テスト実行：04580_element_check_04557 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.customer.cust_card_type1;
      print(qcashier.customer.cust_card_type1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.customer.cust_card_type1 = testData1;
      print(qcashier.customer.cust_card_type1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.customer.cust_card_type1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.customer.cust_card_type1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.customer.cust_card_type1 = testData2;
      print(qcashier.customer.cust_card_type1);
      expect(qcashier.customer.cust_card_type1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.customer.cust_card_type1 = defalut;
      print(qcashier.customer.cust_card_type1);
      expect(qcashier.customer.cust_card_type1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04580_element_check_04557 **********\n\n");
    });

    test('04581_element_check_04558', () async {
      print("\n********** テスト実行：04581_element_check_04558 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.customer.cust_card_type2;
      print(qcashier.customer.cust_card_type2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.customer.cust_card_type2 = testData1;
      print(qcashier.customer.cust_card_type2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.customer.cust_card_type2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.customer.cust_card_type2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.customer.cust_card_type2 = testData2;
      print(qcashier.customer.cust_card_type2);
      expect(qcashier.customer.cust_card_type2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.customer.cust_card_type2 = defalut;
      print(qcashier.customer.cust_card_type2);
      expect(qcashier.customer.cust_card_type2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04581_element_check_04558 **********\n\n");
    });

    test('04582_element_check_04559', () async {
      print("\n********** テスト実行：04582_element_check_04559 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.customer.cust_card_type3;
      print(qcashier.customer.cust_card_type3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.customer.cust_card_type3 = testData1;
      print(qcashier.customer.cust_card_type3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.customer.cust_card_type3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.customer.cust_card_type3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.customer.cust_card_type3 = testData2;
      print(qcashier.customer.cust_card_type3);
      expect(qcashier.customer.cust_card_type3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.customer.cust_card_type3 = defalut;
      print(qcashier.customer.cust_card_type3);
      expect(qcashier.customer.cust_card_type3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04582_element_check_04559 **********\n\n");
    });

    test('04583_element_check_04560', () async {
      print("\n********** テスト実行：04583_element_check_04560 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.customer.cust_card_type4;
      print(qcashier.customer.cust_card_type4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.customer.cust_card_type4 = testData1;
      print(qcashier.customer.cust_card_type4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.customer.cust_card_type4 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.customer.cust_card_type4 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.customer.cust_card_type4 = testData2;
      print(qcashier.customer.cust_card_type4);
      expect(qcashier.customer.cust_card_type4 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type4 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.customer.cust_card_type4 = defalut;
      print(qcashier.customer.cust_card_type4);
      expect(qcashier.customer.cust_card_type4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04583_element_check_04560 **********\n\n");
    });

    test('04584_element_check_04561', () async {
      print("\n********** テスト実行：04584_element_check_04561 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.customer.cust_card_type5;
      print(qcashier.customer.cust_card_type5);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.customer.cust_card_type5 = testData1;
      print(qcashier.customer.cust_card_type5);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.customer.cust_card_type5 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.customer.cust_card_type5 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.customer.cust_card_type5 = testData2;
      print(qcashier.customer.cust_card_type5);
      expect(qcashier.customer.cust_card_type5 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type5 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.customer.cust_card_type5 = defalut;
      print(qcashier.customer.cust_card_type5);
      expect(qcashier.customer.cust_card_type5 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type5 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04584_element_check_04561 **********\n\n");
    });

    test('04585_element_check_04562', () async {
      print("\n********** テスト実行：04585_element_check_04562 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.customer.cust_card_type6;
      print(qcashier.customer.cust_card_type6);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.customer.cust_card_type6 = testData1;
      print(qcashier.customer.cust_card_type6);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.customer.cust_card_type6 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.customer.cust_card_type6 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.customer.cust_card_type6 = testData2;
      print(qcashier.customer.cust_card_type6);
      expect(qcashier.customer.cust_card_type6 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type6 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.customer.cust_card_type6 = defalut;
      print(qcashier.customer.cust_card_type6);
      expect(qcashier.customer.cust_card_type6 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.customer.cust_card_type6 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04585_element_check_04562 **********\n\n");
    });

    test('04586_element_check_04563', () async {
      print("\n********** テスト実行：04586_element_check_04563 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_nonfile_plucd;
      print(qcashier.ShopAndGo.shop_and_go_nonfile_plucd);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_nonfile_plucd = testData1;
      print(qcashier.ShopAndGo.shop_and_go_nonfile_plucd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_nonfile_plucd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_nonfile_plucd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_nonfile_plucd = testData2;
      print(qcashier.ShopAndGo.shop_and_go_nonfile_plucd);
      expect(qcashier.ShopAndGo.shop_and_go_nonfile_plucd == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_nonfile_plucd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_nonfile_plucd = defalut;
      print(qcashier.ShopAndGo.shop_and_go_nonfile_plucd);
      expect(qcashier.ShopAndGo.shop_and_go_nonfile_plucd == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_nonfile_plucd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04586_element_check_04563 **********\n\n");
    });

    test('04587_element_check_04564', () async {
      print("\n********** テスト実行：04587_element_check_04564 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_nonscan_plucd;
      print(qcashier.ShopAndGo.shop_and_go_nonscan_plucd);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_nonscan_plucd = testData1;
      print(qcashier.ShopAndGo.shop_and_go_nonscan_plucd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_nonscan_plucd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_nonscan_plucd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_nonscan_plucd = testData2;
      print(qcashier.ShopAndGo.shop_and_go_nonscan_plucd);
      expect(qcashier.ShopAndGo.shop_and_go_nonscan_plucd == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_nonscan_plucd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_nonscan_plucd = defalut;
      print(qcashier.ShopAndGo.shop_and_go_nonscan_plucd);
      expect(qcashier.ShopAndGo.shop_and_go_nonscan_plucd == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_nonscan_plucd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04587_element_check_04564 **********\n\n");
    });

    test('04588_element_check_04565', () async {
      print("\n********** テスト実行：04588_element_check_04565 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_limit1;
      print(qcashier.ShopAndGo.shop_and_go_limit1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_limit1 = testData1;
      print(qcashier.ShopAndGo.shop_and_go_limit1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_limit1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_limit1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_limit1 = testData2;
      print(qcashier.ShopAndGo.shop_and_go_limit1);
      expect(qcashier.ShopAndGo.shop_and_go_limit1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_limit1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_limit1 = defalut;
      print(qcashier.ShopAndGo.shop_and_go_limit1);
      expect(qcashier.ShopAndGo.shop_and_go_limit1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_limit1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04588_element_check_04565 **********\n\n");
    });

    test('04589_element_check_04566', () async {
      print("\n********** テスト実行：04589_element_check_04566 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_limit2;
      print(qcashier.ShopAndGo.shop_and_go_limit2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_limit2 = testData1;
      print(qcashier.ShopAndGo.shop_and_go_limit2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_limit2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_limit2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_limit2 = testData2;
      print(qcashier.ShopAndGo.shop_and_go_limit2);
      expect(qcashier.ShopAndGo.shop_and_go_limit2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_limit2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_limit2 = defalut;
      print(qcashier.ShopAndGo.shop_and_go_limit2);
      expect(qcashier.ShopAndGo.shop_and_go_limit2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_limit2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04589_element_check_04566 **********\n\n");
    });

    test('04590_element_check_04567', () async {
      print("\n********** テスト実行：04590_element_check_04567 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_limit3;
      print(qcashier.ShopAndGo.shop_and_go_limit3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_limit3 = testData1;
      print(qcashier.ShopAndGo.shop_and_go_limit3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_limit3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_limit3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_limit3 = testData2;
      print(qcashier.ShopAndGo.shop_and_go_limit3);
      expect(qcashier.ShopAndGo.shop_and_go_limit3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_limit3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_limit3 = defalut;
      print(qcashier.ShopAndGo.shop_and_go_limit3);
      expect(qcashier.ShopAndGo.shop_and_go_limit3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_limit3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04590_element_check_04567 **********\n\n");
    });

    test('04591_element_check_04568', () async {
      print("\n********** テスト実行：04591_element_check_04568 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_test_srv_flg;
      print(qcashier.ShopAndGo.shop_and_go_test_srv_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_test_srv_flg = testData1;
      print(qcashier.ShopAndGo.shop_and_go_test_srv_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_test_srv_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_test_srv_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_test_srv_flg = testData2;
      print(qcashier.ShopAndGo.shop_and_go_test_srv_flg);
      expect(qcashier.ShopAndGo.shop_and_go_test_srv_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_test_srv_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_test_srv_flg = defalut;
      print(qcashier.ShopAndGo.shop_and_go_test_srv_flg);
      expect(qcashier.ShopAndGo.shop_and_go_test_srv_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_test_srv_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04591_element_check_04568 **********\n\n");
    });

    test('04592_element_check_04569', () async {
      print("\n********** テスト実行：04592_element_check_04569 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_companycode;
      print(qcashier.ShopAndGo.shop_and_go_companycode);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_companycode = testData1;
      print(qcashier.ShopAndGo.shop_and_go_companycode);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_companycode == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_companycode == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_companycode = testData2;
      print(qcashier.ShopAndGo.shop_and_go_companycode);
      expect(qcashier.ShopAndGo.shop_and_go_companycode == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_companycode == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_companycode = defalut;
      print(qcashier.ShopAndGo.shop_and_go_companycode);
      expect(qcashier.ShopAndGo.shop_and_go_companycode == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_companycode == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04592_element_check_04569 **********\n\n");
    });

    test('04593_element_check_04570', () async {
      print("\n********** テスト実行：04593_element_check_04570 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_storecode;
      print(qcashier.ShopAndGo.shop_and_go_storecode);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_storecode = testData1;
      print(qcashier.ShopAndGo.shop_and_go_storecode);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_storecode == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_storecode == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_storecode = testData2;
      print(qcashier.ShopAndGo.shop_and_go_storecode);
      expect(qcashier.ShopAndGo.shop_and_go_storecode == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_storecode == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_storecode = defalut;
      print(qcashier.ShopAndGo.shop_and_go_storecode);
      expect(qcashier.ShopAndGo.shop_and_go_storecode == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_storecode == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04593_element_check_04570 **********\n\n");
    });

    test('04594_element_check_04571', () async {
      print("\n********** テスト実行：04594_element_check_04571 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp;
      print(qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp = testData1;
      print(qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp = testData2;
      print(qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp);
      expect(qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp = defalut;
      print(qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp);
      expect(qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_mbr_chk_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04594_element_check_04571 **********\n\n");
    });

    test('04595_element_check_04572', () async {
      print("\n********** テスト実行：04595_element_check_04572 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_server_timeout;
      print(qcashier.ShopAndGo.shop_and_go_server_timeout);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_server_timeout = testData1;
      print(qcashier.ShopAndGo.shop_and_go_server_timeout);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_server_timeout == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_server_timeout == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_server_timeout = testData2;
      print(qcashier.ShopAndGo.shop_and_go_server_timeout);
      expect(qcashier.ShopAndGo.shop_and_go_server_timeout == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_server_timeout == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_server_timeout = defalut;
      print(qcashier.ShopAndGo.shop_and_go_server_timeout);
      expect(qcashier.ShopAndGo.shop_and_go_server_timeout == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_server_timeout == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04595_element_check_04572 **********\n\n");
    });

    test('04596_element_check_04573', () async {
      print("\n********** テスト実行：04596_element_check_04573 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_proxy;
      print(qcashier.ShopAndGo.shop_and_go_proxy);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_proxy = testData1s;
      print(qcashier.ShopAndGo.shop_and_go_proxy);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_proxy == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_proxy == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_proxy = testData2s;
      print(qcashier.ShopAndGo.shop_and_go_proxy);
      expect(qcashier.ShopAndGo.shop_and_go_proxy == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_proxy == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_proxy = defalut;
      print(qcashier.ShopAndGo.shop_and_go_proxy);
      expect(qcashier.ShopAndGo.shop_and_go_proxy == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_proxy == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04596_element_check_04573 **********\n\n");
    });

    test('04597_element_check_04574', () async {
      print("\n********** テスト実行：04597_element_check_04574 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_proxy_port;
      print(qcashier.ShopAndGo.shop_and_go_proxy_port);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_proxy_port = testData1;
      print(qcashier.ShopAndGo.shop_and_go_proxy_port);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_proxy_port == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_proxy_port == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_proxy_port = testData2;
      print(qcashier.ShopAndGo.shop_and_go_proxy_port);
      expect(qcashier.ShopAndGo.shop_and_go_proxy_port == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_proxy_port == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_proxy_port = defalut;
      print(qcashier.ShopAndGo.shop_and_go_proxy_port);
      expect(qcashier.ShopAndGo.shop_and_go_proxy_port == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_proxy_port == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04597_element_check_04574 **********\n\n");
    });

    test('04598_element_check_04575', () async {
      print("\n********** テスト実行：04598_element_check_04575 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp;
      print(qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp = testData1;
      print(qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp = testData2;
      print(qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp);
      expect(qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp = defalut;
      print(qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp);
      expect(qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_n_money_btn_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04598_element_check_04575 **********\n\n");
    });

    test('04599_element_check_04576', () async {
      print("\n********** テスト実行：04599_element_check_04576 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_domain;
      print(qcashier.ShopAndGo.shop_and_go_domain);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_domain = testData1s;
      print(qcashier.ShopAndGo.shop_and_go_domain);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_domain == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_domain == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_domain = testData2s;
      print(qcashier.ShopAndGo.shop_and_go_domain);
      expect(qcashier.ShopAndGo.shop_and_go_domain == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_domain == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_domain = defalut;
      print(qcashier.ShopAndGo.shop_and_go_domain);
      expect(qcashier.ShopAndGo.shop_and_go_domain == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_domain == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04599_element_check_04576 **********\n\n");
    });

    test('04600_element_check_04577', () async {
      print("\n********** テスト実行：04600_element_check_04577 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_mbr_card_dsp;
      print(qcashier.ShopAndGo.shop_and_go_mbr_card_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_mbr_card_dsp = testData1;
      print(qcashier.ShopAndGo.shop_and_go_mbr_card_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_mbr_card_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_mbr_card_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_mbr_card_dsp = testData2;
      print(qcashier.ShopAndGo.shop_and_go_mbr_card_dsp);
      expect(qcashier.ShopAndGo.shop_and_go_mbr_card_dsp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_mbr_card_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_mbr_card_dsp = defalut;
      print(qcashier.ShopAndGo.shop_and_go_mbr_card_dsp);
      expect(qcashier.ShopAndGo.shop_and_go_mbr_card_dsp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_mbr_card_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04600_element_check_04577 **********\n\n");
    });

    test('04601_element_check_04578', () async {
      print("\n********** テスト実行：04601_element_check_04578 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_cr50_domain;
      print(qcashier.ShopAndGo.shop_and_go_cr50_domain);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_cr50_domain = testData1s;
      print(qcashier.ShopAndGo.shop_and_go_cr50_domain);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_cr50_domain == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_cr50_domain == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_cr50_domain = testData2s;
      print(qcashier.ShopAndGo.shop_and_go_cr50_domain);
      expect(qcashier.ShopAndGo.shop_and_go_cr50_domain == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_cr50_domain == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_cr50_domain = defalut;
      print(qcashier.ShopAndGo.shop_and_go_cr50_domain);
      expect(qcashier.ShopAndGo.shop_and_go_cr50_domain == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_cr50_domain == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04601_element_check_04578 **********\n\n");
    });

    test('04602_element_check_04579', () async {
      print("\n********** テスト実行：04602_element_check_04579 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_point_domain;
      print(qcashier.ShopAndGo.shop_and_go_point_domain);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_point_domain = testData1s;
      print(qcashier.ShopAndGo.shop_and_go_point_domain);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_point_domain == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_point_domain == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_point_domain = testData2s;
      print(qcashier.ShopAndGo.shop_and_go_point_domain);
      expect(qcashier.ShopAndGo.shop_and_go_point_domain == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_point_domain == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_point_domain = defalut;
      print(qcashier.ShopAndGo.shop_and_go_point_domain);
      expect(qcashier.ShopAndGo.shop_and_go_point_domain == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_point_domain == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04602_element_check_04579 **********\n\n");
    });

    test('04603_element_check_04580', () async {
      print("\n********** テスト実行：04603_element_check_04580 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_cr50_plucd;
      print(qcashier.ShopAndGo.shop_and_go_cr50_plucd);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_cr50_plucd = testData1;
      print(qcashier.ShopAndGo.shop_and_go_cr50_plucd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_cr50_plucd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_cr50_plucd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_cr50_plucd = testData2;
      print(qcashier.ShopAndGo.shop_and_go_cr50_plucd);
      expect(qcashier.ShopAndGo.shop_and_go_cr50_plucd == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_cr50_plucd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_cr50_plucd = defalut;
      print(qcashier.ShopAndGo.shop_and_go_cr50_plucd);
      expect(qcashier.ShopAndGo.shop_and_go_cr50_plucd == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_cr50_plucd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04603_element_check_04580 **********\n\n");
    });

    test('04604_element_check_04581', () async {
      print("\n********** テスト実行：04604_element_check_04581 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_eatin_dsp;
      print(qcashier.ShopAndGo.shop_and_go_eatin_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_eatin_dsp = testData1;
      print(qcashier.ShopAndGo.shop_and_go_eatin_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_eatin_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_eatin_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_eatin_dsp = testData2;
      print(qcashier.ShopAndGo.shop_and_go_eatin_dsp);
      expect(qcashier.ShopAndGo.shop_and_go_eatin_dsp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_eatin_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_eatin_dsp = defalut;
      print(qcashier.ShopAndGo.shop_and_go_eatin_dsp);
      expect(qcashier.ShopAndGo.shop_and_go_eatin_dsp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_eatin_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04604_element_check_04581 **********\n\n");
    });

    test('04605_element_check_04582', () async {
      print("\n********** テスト実行：04605_element_check_04582 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_cogca_read_twice;
      print(qcashier.ShopAndGo.shop_and_go_cogca_read_twice);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_cogca_read_twice = testData1;
      print(qcashier.ShopAndGo.shop_and_go_cogca_read_twice);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_cogca_read_twice == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_cogca_read_twice == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_cogca_read_twice = testData2;
      print(qcashier.ShopAndGo.shop_and_go_cogca_read_twice);
      expect(qcashier.ShopAndGo.shop_and_go_cogca_read_twice == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_cogca_read_twice == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_cogca_read_twice = defalut;
      print(qcashier.ShopAndGo.shop_and_go_cogca_read_twice);
      expect(qcashier.ShopAndGo.shop_and_go_cogca_read_twice == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_cogca_read_twice == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04605_element_check_04582 **********\n\n");
    });

    test('04606_element_check_04583', () async {
      print("\n********** テスト実行：04606_element_check_04583 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_use_class;
      print(qcashier.ShopAndGo.shop_and_go_use_class);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_use_class = testData1;
      print(qcashier.ShopAndGo.shop_and_go_use_class);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_use_class == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_use_class == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_use_class = testData2;
      print(qcashier.ShopAndGo.shop_and_go_use_class);
      expect(qcashier.ShopAndGo.shop_and_go_use_class == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_use_class == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_use_class = defalut;
      print(qcashier.ShopAndGo.shop_and_go_use_class);
      expect(qcashier.ShopAndGo.shop_and_go_use_class == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_use_class == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04606_element_check_04583 **********\n\n");
    });

    test('04607_element_check_04584', () async {
      print("\n********** テスト実行：04607_element_check_04584 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_expensive_mark_prn;
      print(qcashier.ShopAndGo.shop_and_go_expensive_mark_prn);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_expensive_mark_prn = testData1;
      print(qcashier.ShopAndGo.shop_and_go_expensive_mark_prn);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_expensive_mark_prn == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_expensive_mark_prn == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_expensive_mark_prn = testData2;
      print(qcashier.ShopAndGo.shop_and_go_expensive_mark_prn);
      expect(qcashier.ShopAndGo.shop_and_go_expensive_mark_prn == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_expensive_mark_prn == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_expensive_mark_prn = defalut;
      print(qcashier.ShopAndGo.shop_and_go_expensive_mark_prn);
      expect(qcashier.ShopAndGo.shop_and_go_expensive_mark_prn == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_expensive_mark_prn == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04607_element_check_04584 **********\n\n");
    });

    test('04608_element_check_04585', () async {
      print("\n********** テスト実行：04608_element_check_04585 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_regbag_dsp;
      print(qcashier.ShopAndGo.shop_and_go_regbag_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_regbag_dsp = testData1;
      print(qcashier.ShopAndGo.shop_and_go_regbag_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_regbag_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_regbag_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_regbag_dsp = testData2;
      print(qcashier.ShopAndGo.shop_and_go_regbag_dsp);
      expect(qcashier.ShopAndGo.shop_and_go_regbag_dsp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_regbag_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_regbag_dsp = defalut;
      print(qcashier.ShopAndGo.shop_and_go_regbag_dsp);
      expect(qcashier.ShopAndGo.shop_and_go_regbag_dsp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_regbag_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04608_element_check_04585 **********\n\n");
    });

    test('04609_element_check_04586', () async {
      print("\n********** テスト実行：04609_element_check_04586 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_use_preset_grp_code;
      print(qcashier.ShopAndGo.shop_and_go_use_preset_grp_code);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_use_preset_grp_code = testData1;
      print(qcashier.ShopAndGo.shop_and_go_use_preset_grp_code);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_use_preset_grp_code == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_use_preset_grp_code == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_use_preset_grp_code = testData2;
      print(qcashier.ShopAndGo.shop_and_go_use_preset_grp_code);
      expect(qcashier.ShopAndGo.shop_and_go_use_preset_grp_code == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_use_preset_grp_code == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_use_preset_grp_code = defalut;
      print(qcashier.ShopAndGo.shop_and_go_use_preset_grp_code);
      expect(qcashier.ShopAndGo.shop_and_go_use_preset_grp_code == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_use_preset_grp_code == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04609_element_check_04586 **********\n\n");
    });

    test('04610_element_check_04587', () async {
      print("\n********** テスト実行：04610_element_check_04587 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference;
      print(qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference = testData1;
      print(qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference = testData2;
      print(qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference);
      expect(qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference = defalut;
      print(qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference);
      expect(qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_mente_nonplu_btn_reference == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04610_element_check_04587 **********\n\n");
    });

    test('04611_element_check_04588', () async {
      print("\n********** テスト実行：04611_element_check_04588 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time;
      print(qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time = testData1;
      print(qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time = testData2;
      print(qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time);
      expect(qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time = defalut;
      print(qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time);
      expect(qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_mbr_auto_cncl_time == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04611_element_check_04588 **********\n\n");
    });

    test('04612_element_check_04589', () async {
      print("\n********** テスト実行：04612_element_check_04589 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold;
      print(qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold = testData1;
      print(qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold = testData2;
      print(qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold);
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold = defalut;
      print(qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold);
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04612_element_check_04589 **********\n\n");
    });

    test('04613_element_check_04590', () async {
      print("\n********** テスト実行：04613_element_check_04590 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print;
      print(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print = testData1;
      print(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print = testData2;
      print(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print);
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print = defalut;
      print(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print);
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04613_element_check_04590 **********\n\n");
    });

    test('04614_element_check_04591', () async {
      print("\n********** テスト実行：04614_element_check_04591 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no;
      print(qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no = testData1;
      print(qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no = testData2;
      print(qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no);
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no = defalut;
      print(qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no);
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_rcpt_msg_use_no == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04614_element_check_04591 **********\n\n");
    });

    test('04615_element_check_04592', () async {
      print("\n********** テスト実行：04615_element_check_04592 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal;
      print(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal = testData1;
      print(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal = testData2;
      print(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal);
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal = defalut;
      print(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal);
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_apl_dl_qr_print_normal == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04615_element_check_04592 **********\n\n");
    });

    test('04616_element_check_04593', () async {
      print("\n********** テスト実行：04616_element_check_04593 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs;
      print(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs = testData1;
      print(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs = testData2;
      print(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs);
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs = defalut;
      print(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs);
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04616_element_check_04593 **********\n\n");
    });

    test('04617_element_check_04594', () async {
      print("\n********** テスト実行：04617_element_check_04594 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss;
      print(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss = testData1;
      print(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss = testData2;
      print(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss);
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss = defalut;
      print(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss);
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04617_element_check_04594 **********\n\n");
    });

    test('04618_element_check_04595', () async {
      print("\n********** テスト実行：04618_element_check_04595 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.ShopAndGo.shop_and_go_thread_timeout;
      print(qcashier.ShopAndGo.shop_and_go_thread_timeout);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.ShopAndGo.shop_and_go_thread_timeout = testData1;
      print(qcashier.ShopAndGo.shop_and_go_thread_timeout);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_thread_timeout == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.ShopAndGo.shop_and_go_thread_timeout == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.ShopAndGo.shop_and_go_thread_timeout = testData2;
      print(qcashier.ShopAndGo.shop_and_go_thread_timeout);
      expect(qcashier.ShopAndGo.shop_and_go_thread_timeout == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_thread_timeout == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.ShopAndGo.shop_and_go_thread_timeout = defalut;
      print(qcashier.ShopAndGo.shop_and_go_thread_timeout);
      expect(qcashier.ShopAndGo.shop_and_go_thread_timeout == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.ShopAndGo.shop_and_go_thread_timeout == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04618_element_check_04595 **********\n\n");
    });

    test('04619_element_check_04596', () async {
      print("\n********** テスト実行：04619_element_check_04596 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name1;
      print(qcashier.PaymentGroup.pay_grp_name1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name1 = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name1 = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name1);
      expect(qcashier.PaymentGroup.pay_grp_name1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name1 = defalut;
      print(qcashier.PaymentGroup.pay_grp_name1);
      expect(qcashier.PaymentGroup.pay_grp_name1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04619_element_check_04596 **********\n\n");
    });

    test('04620_element_check_04597', () async {
      print("\n********** テスト実行：04620_element_check_04597 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name2;
      print(qcashier.PaymentGroup.pay_grp_name2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name2 = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name2 = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name2);
      expect(qcashier.PaymentGroup.pay_grp_name2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name2 = defalut;
      print(qcashier.PaymentGroup.pay_grp_name2);
      expect(qcashier.PaymentGroup.pay_grp_name2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04620_element_check_04597 **********\n\n");
    });

    test('04621_element_check_04598', () async {
      print("\n********** テスト実行：04621_element_check_04598 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name3;
      print(qcashier.PaymentGroup.pay_grp_name3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name3 = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name3 = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name3);
      expect(qcashier.PaymentGroup.pay_grp_name3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name3 = defalut;
      print(qcashier.PaymentGroup.pay_grp_name3);
      expect(qcashier.PaymentGroup.pay_grp_name3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04621_element_check_04598 **********\n\n");
    });

    test('04622_element_check_04599', () async {
      print("\n********** テスト実行：04622_element_check_04599 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name4;
      print(qcashier.PaymentGroup.pay_grp_name4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name4 = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name4 = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name4);
      expect(qcashier.PaymentGroup.pay_grp_name4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name4 = defalut;
      print(qcashier.PaymentGroup.pay_grp_name4);
      expect(qcashier.PaymentGroup.pay_grp_name4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04622_element_check_04599 **********\n\n");
    });

    test('04623_element_check_04600', () async {
      print("\n********** テスト実行：04623_element_check_04600 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name5;
      print(qcashier.PaymentGroup.pay_grp_name5);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name5 = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name5);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name5 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name5 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name5 = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name5);
      expect(qcashier.PaymentGroup.pay_grp_name5 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name5 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name5 = defalut;
      print(qcashier.PaymentGroup.pay_grp_name5);
      expect(qcashier.PaymentGroup.pay_grp_name5 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name5 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04623_element_check_04600 **********\n\n");
    });

    test('04624_element_check_04601', () async {
      print("\n********** テスト実行：04624_element_check_04601 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name6;
      print(qcashier.PaymentGroup.pay_grp_name6);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name6 = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name6);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name6 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name6 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name6 = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name6);
      expect(qcashier.PaymentGroup.pay_grp_name6 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name6 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name6 = defalut;
      print(qcashier.PaymentGroup.pay_grp_name6);
      expect(qcashier.PaymentGroup.pay_grp_name6 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name6 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04624_element_check_04601 **********\n\n");
    });

    test('04625_element_check_04602', () async {
      print("\n********** テスト実行：04625_element_check_04602 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name7;
      print(qcashier.PaymentGroup.pay_grp_name7);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name7 = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name7);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name7 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name7 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name7 = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name7);
      expect(qcashier.PaymentGroup.pay_grp_name7 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name7 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name7 = defalut;
      print(qcashier.PaymentGroup.pay_grp_name7);
      expect(qcashier.PaymentGroup.pay_grp_name7 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name7 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04625_element_check_04602 **********\n\n");
    });

    test('04626_element_check_04603', () async {
      print("\n********** テスト実行：04626_element_check_04603 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name8;
      print(qcashier.PaymentGroup.pay_grp_name8);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name8 = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name8);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name8 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name8 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name8 = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name8);
      expect(qcashier.PaymentGroup.pay_grp_name8 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name8 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name8 = defalut;
      print(qcashier.PaymentGroup.pay_grp_name8);
      expect(qcashier.PaymentGroup.pay_grp_name8 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name8 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04626_element_check_04603 **********\n\n");
    });

    test('04627_element_check_04604', () async {
      print("\n********** テスト実行：04627_element_check_04604 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name9;
      print(qcashier.PaymentGroup.pay_grp_name9);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name9 = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name9);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name9 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name9 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name9 = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name9);
      expect(qcashier.PaymentGroup.pay_grp_name9 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name9 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name9 = defalut;
      print(qcashier.PaymentGroup.pay_grp_name9);
      expect(qcashier.PaymentGroup.pay_grp_name9 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name9 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04627_element_check_04604 **********\n\n");
    });

    test('04628_element_check_04605', () async {
      print("\n********** テスト実行：04628_element_check_04605 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ1_grp;
      print(qcashier.PaymentGroup.pay_typ1_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ1_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ1_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ1_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ1_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ1_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ1_grp);
      expect(qcashier.PaymentGroup.pay_typ1_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ1_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ1_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ1_grp);
      expect(qcashier.PaymentGroup.pay_typ1_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ1_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04628_element_check_04605 **********\n\n");
    });

    test('04629_element_check_04606', () async {
      print("\n********** テスト実行：04629_element_check_04606 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ2_grp;
      print(qcashier.PaymentGroup.pay_typ2_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ2_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ2_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ2_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ2_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ2_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ2_grp);
      expect(qcashier.PaymentGroup.pay_typ2_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ2_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ2_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ2_grp);
      expect(qcashier.PaymentGroup.pay_typ2_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ2_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04629_element_check_04606 **********\n\n");
    });

    test('04630_element_check_04607', () async {
      print("\n********** テスト実行：04630_element_check_04607 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ3_grp;
      print(qcashier.PaymentGroup.pay_typ3_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ3_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ3_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ3_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ3_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ3_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ3_grp);
      expect(qcashier.PaymentGroup.pay_typ3_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ3_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ3_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ3_grp);
      expect(qcashier.PaymentGroup.pay_typ3_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ3_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04630_element_check_04607 **********\n\n");
    });

    test('04631_element_check_04608', () async {
      print("\n********** テスト実行：04631_element_check_04608 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ4_grp;
      print(qcashier.PaymentGroup.pay_typ4_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ4_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ4_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ4_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ4_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ4_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ4_grp);
      expect(qcashier.PaymentGroup.pay_typ4_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ4_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ4_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ4_grp);
      expect(qcashier.PaymentGroup.pay_typ4_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ4_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04631_element_check_04608 **********\n\n");
    });

    test('04632_element_check_04609', () async {
      print("\n********** テスト実行：04632_element_check_04609 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ5_grp;
      print(qcashier.PaymentGroup.pay_typ5_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ5_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ5_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ5_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ5_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ5_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ5_grp);
      expect(qcashier.PaymentGroup.pay_typ5_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ5_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ5_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ5_grp);
      expect(qcashier.PaymentGroup.pay_typ5_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ5_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04632_element_check_04609 **********\n\n");
    });

    test('04633_element_check_04610', () async {
      print("\n********** テスト実行：04633_element_check_04610 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ6_grp;
      print(qcashier.PaymentGroup.pay_typ6_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ6_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ6_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ6_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ6_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ6_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ6_grp);
      expect(qcashier.PaymentGroup.pay_typ6_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ6_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ6_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ6_grp);
      expect(qcashier.PaymentGroup.pay_typ6_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ6_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04633_element_check_04610 **********\n\n");
    });

    test('04634_element_check_04611', () async {
      print("\n********** テスト実行：04634_element_check_04611 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ7_grp;
      print(qcashier.PaymentGroup.pay_typ7_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ7_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ7_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ7_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ7_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ7_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ7_grp);
      expect(qcashier.PaymentGroup.pay_typ7_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ7_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ7_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ7_grp);
      expect(qcashier.PaymentGroup.pay_typ7_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ7_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04634_element_check_04611 **********\n\n");
    });

    test('04635_element_check_04612', () async {
      print("\n********** テスト実行：04635_element_check_04612 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ8_grp;
      print(qcashier.PaymentGroup.pay_typ8_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ8_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ8_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ8_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ8_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ8_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ8_grp);
      expect(qcashier.PaymentGroup.pay_typ8_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ8_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ8_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ8_grp);
      expect(qcashier.PaymentGroup.pay_typ8_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ8_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04635_element_check_04612 **********\n\n");
    });

    test('04636_element_check_04613', () async {
      print("\n********** テスト実行：04636_element_check_04613 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ9_grp;
      print(qcashier.PaymentGroup.pay_typ9_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ9_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ9_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ9_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ9_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ9_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ9_grp);
      expect(qcashier.PaymentGroup.pay_typ9_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ9_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ9_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ9_grp);
      expect(qcashier.PaymentGroup.pay_typ9_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ9_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04636_element_check_04613 **********\n\n");
    });

    test('04637_element_check_04614', () async {
      print("\n********** テスト実行：04637_element_check_04614 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ10_grp;
      print(qcashier.PaymentGroup.pay_typ10_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ10_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ10_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ10_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ10_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ10_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ10_grp);
      expect(qcashier.PaymentGroup.pay_typ10_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ10_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ10_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ10_grp);
      expect(qcashier.PaymentGroup.pay_typ10_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ10_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04637_element_check_04614 **********\n\n");
    });

    test('04638_element_check_04615', () async {
      print("\n********** テスト実行：04638_element_check_04615 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ11_grp;
      print(qcashier.PaymentGroup.pay_typ11_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ11_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ11_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ11_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ11_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ11_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ11_grp);
      expect(qcashier.PaymentGroup.pay_typ11_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ11_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ11_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ11_grp);
      expect(qcashier.PaymentGroup.pay_typ11_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ11_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04638_element_check_04615 **********\n\n");
    });

    test('04639_element_check_04616', () async {
      print("\n********** テスト実行：04639_element_check_04616 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ12_grp;
      print(qcashier.PaymentGroup.pay_typ12_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ12_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ12_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ12_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ12_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ12_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ12_grp);
      expect(qcashier.PaymentGroup.pay_typ12_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ12_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ12_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ12_grp);
      expect(qcashier.PaymentGroup.pay_typ12_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ12_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04639_element_check_04616 **********\n\n");
    });

    test('04640_element_check_04617', () async {
      print("\n********** テスト実行：04640_element_check_04617 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ13_grp;
      print(qcashier.PaymentGroup.pay_typ13_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ13_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ13_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ13_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ13_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ13_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ13_grp);
      expect(qcashier.PaymentGroup.pay_typ13_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ13_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ13_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ13_grp);
      expect(qcashier.PaymentGroup.pay_typ13_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ13_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04640_element_check_04617 **********\n\n");
    });

    test('04641_element_check_04618', () async {
      print("\n********** テスト実行：04641_element_check_04618 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ14_grp;
      print(qcashier.PaymentGroup.pay_typ14_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ14_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ14_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ14_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ14_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ14_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ14_grp);
      expect(qcashier.PaymentGroup.pay_typ14_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ14_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ14_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ14_grp);
      expect(qcashier.PaymentGroup.pay_typ14_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ14_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04641_element_check_04618 **********\n\n");
    });

    test('04642_element_check_04619', () async {
      print("\n********** テスト実行：04642_element_check_04619 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ15_grp;
      print(qcashier.PaymentGroup.pay_typ15_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ15_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ15_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ15_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ15_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ15_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ15_grp);
      expect(qcashier.PaymentGroup.pay_typ15_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ15_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ15_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ15_grp);
      expect(qcashier.PaymentGroup.pay_typ15_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ15_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04642_element_check_04619 **********\n\n");
    });

    test('04643_element_check_04620', () async {
      print("\n********** テスト実行：04643_element_check_04620 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_typ16_grp;
      print(qcashier.PaymentGroup.pay_typ16_grp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_typ16_grp = testData1;
      print(qcashier.PaymentGroup.pay_typ16_grp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_typ16_grp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_typ16_grp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_typ16_grp = testData2;
      print(qcashier.PaymentGroup.pay_typ16_grp);
      expect(qcashier.PaymentGroup.pay_typ16_grp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ16_grp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_typ16_grp = defalut;
      print(qcashier.PaymentGroup.pay_typ16_grp);
      expect(qcashier.PaymentGroup.pay_typ16_grp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_typ16_grp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04643_element_check_04620 **********\n\n");
    });

    test('04644_element_check_04621', () async {
      print("\n********** テスト実行：04644_element_check_04621 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name1_ex;
      print(qcashier.PaymentGroup.pay_grp_name1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name1_ex = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name1_ex = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name1_ex);
      expect(qcashier.PaymentGroup.pay_grp_name1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name1_ex = defalut;
      print(qcashier.PaymentGroup.pay_grp_name1_ex);
      expect(qcashier.PaymentGroup.pay_grp_name1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04644_element_check_04621 **********\n\n");
    });

    test('04645_element_check_04622', () async {
      print("\n********** テスト実行：04645_element_check_04622 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name2_ex;
      print(qcashier.PaymentGroup.pay_grp_name2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name2_ex = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name2_ex = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name2_ex);
      expect(qcashier.PaymentGroup.pay_grp_name2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name2_ex = defalut;
      print(qcashier.PaymentGroup.pay_grp_name2_ex);
      expect(qcashier.PaymentGroup.pay_grp_name2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04645_element_check_04622 **********\n\n");
    });

    test('04646_element_check_04623', () async {
      print("\n********** テスト実行：04646_element_check_04623 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name3_ex;
      print(qcashier.PaymentGroup.pay_grp_name3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name3_ex = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name3_ex = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name3_ex);
      expect(qcashier.PaymentGroup.pay_grp_name3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name3_ex = defalut;
      print(qcashier.PaymentGroup.pay_grp_name3_ex);
      expect(qcashier.PaymentGroup.pay_grp_name3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04646_element_check_04623 **********\n\n");
    });

    test('04647_element_check_04624', () async {
      print("\n********** テスト実行：04647_element_check_04624 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name4_ex;
      print(qcashier.PaymentGroup.pay_grp_name4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name4_ex = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name4_ex = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name4_ex);
      expect(qcashier.PaymentGroup.pay_grp_name4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name4_ex = defalut;
      print(qcashier.PaymentGroup.pay_grp_name4_ex);
      expect(qcashier.PaymentGroup.pay_grp_name4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04647_element_check_04624 **********\n\n");
    });

    test('04648_element_check_04625', () async {
      print("\n********** テスト実行：04648_element_check_04625 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name5_ex;
      print(qcashier.PaymentGroup.pay_grp_name5_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name5_ex = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name5_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name5_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name5_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name5_ex = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name5_ex);
      expect(qcashier.PaymentGroup.pay_grp_name5_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name5_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name5_ex = defalut;
      print(qcashier.PaymentGroup.pay_grp_name5_ex);
      expect(qcashier.PaymentGroup.pay_grp_name5_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name5_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04648_element_check_04625 **********\n\n");
    });

    test('04649_element_check_04626', () async {
      print("\n********** テスト実行：04649_element_check_04626 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name6_ex;
      print(qcashier.PaymentGroup.pay_grp_name6_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name6_ex = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name6_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name6_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name6_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name6_ex = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name6_ex);
      expect(qcashier.PaymentGroup.pay_grp_name6_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name6_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name6_ex = defalut;
      print(qcashier.PaymentGroup.pay_grp_name6_ex);
      expect(qcashier.PaymentGroup.pay_grp_name6_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name6_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04649_element_check_04626 **********\n\n");
    });

    test('04650_element_check_04627', () async {
      print("\n********** テスト実行：04650_element_check_04627 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name7_ex;
      print(qcashier.PaymentGroup.pay_grp_name7_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name7_ex = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name7_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name7_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name7_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name7_ex = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name7_ex);
      expect(qcashier.PaymentGroup.pay_grp_name7_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name7_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name7_ex = defalut;
      print(qcashier.PaymentGroup.pay_grp_name7_ex);
      expect(qcashier.PaymentGroup.pay_grp_name7_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name7_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04650_element_check_04627 **********\n\n");
    });

    test('04651_element_check_04628', () async {
      print("\n********** テスト実行：04651_element_check_04628 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name8_ex;
      print(qcashier.PaymentGroup.pay_grp_name8_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name8_ex = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name8_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name8_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name8_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name8_ex = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name8_ex);
      expect(qcashier.PaymentGroup.pay_grp_name8_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name8_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name8_ex = defalut;
      print(qcashier.PaymentGroup.pay_grp_name8_ex);
      expect(qcashier.PaymentGroup.pay_grp_name8_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name8_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04651_element_check_04628 **********\n\n");
    });

    test('04652_element_check_04629', () async {
      print("\n********** テスト実行：04652_element_check_04629 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.PaymentGroup.pay_grp_name9_ex;
      print(qcashier.PaymentGroup.pay_grp_name9_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.PaymentGroup.pay_grp_name9_ex = testData1s;
      print(qcashier.PaymentGroup.pay_grp_name9_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name9_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.PaymentGroup.pay_grp_name9_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.PaymentGroup.pay_grp_name9_ex = testData2s;
      print(qcashier.PaymentGroup.pay_grp_name9_ex);
      expect(qcashier.PaymentGroup.pay_grp_name9_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name9_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.PaymentGroup.pay_grp_name9_ex = defalut;
      print(qcashier.PaymentGroup.pay_grp_name9_ex);
      expect(qcashier.PaymentGroup.pay_grp_name9_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.PaymentGroup.pay_grp_name9_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：04652_element_check_04629 **********\n\n");
    });

  });
}

void allPropatyCheckInit(QcashierJsonFile test)
{
  expect(test.common.item_disp, 0);
  expect(test.common.logo_typ, 0);
  expect(test.common.disp_typ, 0);
  expect(test.common.spdsp_use, 0);
  expect(test.common.fix_max, 0);
  expect(test.common.fix_typ, 0);
  expect(test.common.ptn_max, 0);
  expect(test.common.ptn_typ, 0);
  expect(test.common.spe_typ, 0);
  expect(test.common.chara_typ, 0);
  expect(test.common.language_typ, 0);
  expect(test.common.page_max, 0);
  expect(test.common.typ_max, 0);
  expect(test.common.pay_typ1, 0);
  expect(test.common.pay_typ2, 0);
  expect(test.common.pay_typ3, 0);
  expect(test.common.pay_typ4, 0);
  expect(test.common.pay_typ5, 0);
  expect(test.common.pay_typ6, 0);
  expect(test.common.pay_typ7, 0);
  expect(test.common.pay_typ8, 0);
  expect(test.common.demo_disp_btn, 0);
  expect(test.common.rcpt_limit_time, 0);
  expect(test.common.next_rcpt_limit, 0);
  expect(test.common.auto_susdsp, 0);
  expect(test.common.susdsp_time, 0);
  expect(test.common.rfm_receipt, 0);
  expect(test.common.signp_typ, 0);
  expect(test.common.select_typ, 0);
  expect(test.common.select_str_msg, 0);
  expect(test.common.regbag1_plucd, 0);
  expect(test.common.regbag2_plucd, 0);
  expect(test.common.regbag3_plucd, 0);
  expect(test.common.autocash_operation, 0);
  expect(test.common.autocash_equaltime, 0);
  expect(test.common.autocash_overtime, 0);
  expect(test.common.fip_disp, 0);
  expect(test.common.crdtcard_gettimer, 0);
  expect(test.common.charge_plucd1, 0);
  expect(test.common.charge_plucd2, 0);
  expect(test.common.charge_plucd3, 0);
  expect(test.common.charge_plucd4, 0);
  expect(test.common.charge_plucd5, 0);
  expect(test.common.charge_plucd6, 0);
  expect(test.common.crdtcard_warntime, 0);
  expect(test.common.acx_recalc_btn, 0);
  expect(test.common.lang_chg_max, 0);
  expect(test.common.lang_select1, 0);
  expect(test.common.lang_select2, 0);
  expect(test.common.lang_select3, 0);
  expect(test.common.lang_select4, 0);
  expect(test.common.lang_select5, 0);
  expect(test.common.lang_select6, 0);
  expect(test.common.lang_select7, 0);
  expect(test.common.lang_select8, 0);
  expect(test.common.autocrdt_operation, 0);
  expect(test.common.autocrdt_time, 0);
  expect(test.common.preca_charge_only, 0);
  expect(test.common.preca_charge_plucd1, 0);
  expect(test.common.preca_charge_plucd2, 0);
  expect(test.common.preca_charge_plucd3, 0);
  expect(test.common.preca_charge_plucd4, 0);
  expect(test.common.preca_charge_plucd5, 0);
  expect(test.common.preca_charge_plucd6, 0);
  expect(test.common.select_dsp_ccin, 0);
  expect(test.common.cancel_btn_dsp, 0);
  expect(test.common.clinic_mode, 0);
  expect(test.common.clinic_receipt, 0);
  expect(test.common.clinic_greeting, 0);
  expect(test.common.clinic_greeting_sound, 0);
  expect(test.common.fin_btn_chg, 0);
  expect(test.common.startdsp_btn_single, 0);
  expect(test.common.startdsp_scan_enable, 0);
  expect(test.common.pay_typ9, 0);
  expect(test.common.pay_typ10, 0);
  expect(test.common.pay_typ11, 0);
  expect(test.common.pay_typ12, 0);
  expect(test.common.pay_typ13, 0);
  expect(test.common.pay_typ14, 0);
  expect(test.common.pay_typ15, 0);
  expect(test.common.pay_typ16, 0);
  expect(test.common.verifone_nfc_crdt, 0);
  expect(test.common.hs_dualdisp_chk, 0);
  expect(test.common.back_btn_dsp, 0);
  expect(test.common.NoOperationWarning, 0);
  expect(test.common.NoOperationSignpaul_time, 0);
  expect(test.common.NoOperationVoicesound_time, 0);
  expect(test.common.NoOperationSound, 0);
  expect(test.common.NoOperationPayWarning, 0);
  expect(test.common.cin_dsp_wait, 0);
  expect(test.common.clinic_auto_stl, 0);
  expect(test.common.acracb_stlmode, 0);
  expect(test.common.apbf_regbag_plucd, 0);
  expect(test.common.apbf_dlgdisp_time, 0);
  expect(test.common.mybag_plu_point_add, 0);
  expect(test.common.video_jpqr_scanner, 0);
  expect(test.common.chg_warn_timer_use, 0);
  expect(test.common.cin_cnl_btn_show, 0);
  expect(test.common.regs_use_class, 0);
  expect(test.common.sg_eatin_chk, 0);
  expect(test.common.selfmode1_auto_cancel, 0);
  expect(test.common.point_use_unit, 0);
  expect(test.common.selfmode1_wav_qty, 0);
  expect(test.common.age_chk_notice, 0);
  expect(test.common.verifone_nfc_repika_crdt, 0);
  expect(test.common.regbag1_default, 0);
  expect(test.common.regbag2_default, 0);
  expect(test.common.regbag3_default, 0);
  expect(test.common.regbag_timing, 0);
  expect(test.common.regbag_disp_back_btn, 0);
  expect(test.common.self_disp_preca_ref, 0);
  expect(test.common.fs_cashless_dsp_change, 0);
  expect(test.common.hs_fs_scanning_guide, 0);
  expect(test.common.hs_fs_twice_read_stop, 0);
  expect(test.common.cashin_sound, 0);
  expect(test.common.sound_change_flg, 0);
  expect(test.common.hs_fs_auto_preset_dsp, 0);
  expect(test.common.cashless_dsp_return, 0);
  expect(test.common.regbag_screen_scan_input, 0);
  expect(test.common.g3_pay_btn_blink, 0);
  expect(test.common.g3_employee_call_btn, 0);
  expect(test.common.g3_pay_slct_btn_ptn, 0);
  expect(test.common.video_jpqr_sidescanner, 0);
  expect(test.common.mente_itemlist_type, 0);
  expect(test.common.rg_self_noteplu_perm, 0);
  expect(test.common.g3_self_itemlist_scrvoid, 0);
  expect(test.common.g3_fs_presetgroup_custom, 0);
  expect(test.common.g3_fs_presetgroup_btn1, 0);
  expect(test.common.g3_fs_presetgroup_btn2, 0);
  expect(test.common.g3_fs_presetgroup_btn3, 0);
  expect(test.common.g3_fs_presetgroup_btn4, 0);
  expect(test.common.g3_fs_presetgroup_btn5, 0);
  expect(test.common.g3_fs_presetgroup_btn6, 0);
  expect(test.common.g3_fs_presetgroup_btn7, 0);
  expect(test.common.g3_fs_presetgroup_btn8, 0);
  expect(test.common.callBuzzer_sound_change_flg, 0);
  expect(test.common.top_map_display, 0);
  expect(test.common.start_payselect_display, 0);
  expect(test.common.idle_signp_state, 0);
  expect(test.common.jpqr_paybtn_image, 0);
  expect(test.common.vega_credit_forget_chk, 0);
  expect(test.common.cash_only_setting, 0);
  expect(test.common.cash_only_border, 0);
  expect(test.chg_info.chg_info, 0);
  expect(test.chg_info.chg_5000, 0);
  expect(test.chg_info.chg_2000, 0);
  expect(test.chg_info.chg_1000, 0);
  expect(test.chg_info.chg_500, 0);
  expect(test.chg_info.chg_100, 0);
  expect(test.chg_info.chg_50, 0);
  expect(test.chg_info.chg_10, 0);
  expect(test.chg_info.chg_5, 0);
  expect(test.chg_info.chg_1, 0);
  expect(test.chg_info.chg_info_full_chk, 0);
  expect(test.chg_info.chg_signp_full_chk, 0);
  expect(test.period.spr_str, 0);
  expect(test.period.spr_end, 0);
  expect(test.period.sum_str, 0);
  expect(test.period.sum_end, 0);
  expect(test.period.aut_str, 0);
  expect(test.period.aut_end, 0);
  expect(test.period.win1_str, 0);
  expect(test.period.win1_end, 0);
  expect(test.period.win2_str, 0);
  expect(test.period.win2_end, 0);
  expect(test.period.sp1_flg, 0);
  expect(test.period.sp2_flg, 0);
  expect(test.period.sp3_flg, 0);
  expect(test.period.sp4_flg, 0);
  expect(test.period.sp5_flg, 0);
  expect(test.period.sp6_flg, 0);
  expect(test.period.sp7_flg, 0);
  expect(test.period.sp8_flg, 0);
  expect(test.period.sp9_flg, 0);
  expect(test.period.sp10_flg, 0);
  expect(test.period.sp11_flg, 0);
  expect(test.period.sp12_flg, 0);
  expect(test.period.sp13_flg, 0);
  expect(test.period.sp14_flg, 0);
  expect(test.period.sp15_flg, 0);
  expect(test.period.sp16_flg, 0);
  expect(test.period.sp17_flg, 0);
  expect(test.period.sp18_flg, 0);
  expect(test.period.sp1_str, 0);
  expect(test.period.sp1_end, 0);
  expect(test.period.sp2_str, "");
  expect(test.period.sp2_end, "");
  expect(test.period.sp3_str, 0);
  expect(test.period.sp3_end, 0);
  expect(test.period.sp4_str, 0);
  expect(test.period.sp4_end, 0);
  expect(test.period.sp5_str, "");
  expect(test.period.sp5_end, "");
  expect(test.period.sp6_str, 0);
  expect(test.period.sp6_end, 0);
  expect(test.period.sp7_str, 0);
  expect(test.period.sp7_end, 0);
  expect(test.period.sp8_str, "");
  expect(test.period.sp8_end, "");
  expect(test.period.sp9_str, "");
  expect(test.period.sp9_end, "");
  expect(test.period.sp10_str, 0);
  expect(test.period.sp10_end, 0);
  expect(test.period.sp11_str, "");
  expect(test.period.sp11_end, "");
  expect(test.period.sp12_str, 0);
  expect(test.period.sp12_end, 0);
  expect(test.period.sp13_str, "");
  expect(test.period.sp13_end, "");
  expect(test.period.sp14_str, 0);
  expect(test.period.sp14_end, 0);
  expect(test.period.sp15_str, "");
  expect(test.period.sp15_end, "");
  expect(test.period.sp16_str, 0);
  expect(test.period.sp16_end, 0);
  expect(test.period.sp17_str, 0);
  expect(test.period.sp17_end, 0);
  expect(test.period.sp18_str, "");
  expect(test.period.sp18_end, "");
  expect(test.period.spr_time1, 0);
  expect(test.period.spr_time2, 0);
  expect(test.period.sum_time1, 0);
  expect(test.period.sum_time2, 0);
  expect(test.period.aut_time1, 0);
  expect(test.period.aut_time2, 0);
  expect(test.period.win_time1, 0);
  expect(test.period.win_time2, 0);
  expect(test.screen0.title, "");
  expect(test.screen0.msg1, "");
  expect(test.screen0.msg2, "");
  expect(test.screen0.msg1_size, 0);
  expect(test.screen0.msg2_size, 0);
  expect(test.screen0.sound1, 0);
  expect(test.screen0.sound2, 0);
  expect(test.screen0.sound3, 0);
  expect(test.screen0.snd_timer, 0);
  expect(test.screen0.timer1, 0);
  expect(test.screen0.timer2, 0);
  expect(test.screen0.timer3, 0);
  expect(test.screen0.dsp_flg1, 0);
  expect(test.screen0.dsp_flg2, 0);
  expect(test.screen0.movie01_ext, 0);
  expect(test.screen0.movie02_ext, 0);
  expect(test.screen0.movie03_ext, 0);
  expect(test.screen0.movie04_ext, 0);
  expect(test.screen0.line_title, "");
  expect(test.screen0.line_title_ex, "");
  expect(test.screen0.line1, "");
  expect(test.screen0.line2, "");
  expect(test.screen0.line3, "");
  expect(test.screen0.line4, "");
  expect(test.screen0.line1_ex, "");
  expect(test.screen0.line2_ex, "");
  expect(test.screen0.line3_ex, "");
  expect(test.screen0.line4_ex, "");
  expect(test.screen0.sound_led1, 0);
  expect(test.screen0.sound_led2, 0);
  expect(test.screen0.sound_led3, 0);
  expect(test.screen1.title, "");
  expect(test.screen1.msg1, "");
  expect(test.screen1.msg2, "");
  expect(test.screen1.msg1_size, 0);
  expect(test.screen1.msg2_size, 0);
  expect(test.screen1.sound1, 0);
  expect(test.screen1.sound2, 0);
  expect(test.screen1.sound3, 0);
  expect(test.screen1.snd_timer, 0);
  expect(test.screen1.timer1, 0);
  expect(test.screen1.timer2, 0);
  expect(test.screen1.timer3, 0);
  expect(test.screen1.dsp_flg1, 0);
  expect(test.screen1.dsp_flg2, 0);
  expect(test.screen1.movie01_ext, 0);
  expect(test.screen1.movie02_ext, 0);
  expect(test.screen1.movie03_ext, 0);
  expect(test.screen1.movie04_ext, 0);
  expect(test.screen1.line_title, "");
  expect(test.screen1.line_title_ex, "");
  expect(test.screen1.line1, "");
  expect(test.screen1.line2, "");
  expect(test.screen1.line3, "");
  expect(test.screen1.line4, "");
  expect(test.screen1.line1_ex, "");
  expect(test.screen1.line2_ex, "");
  expect(test.screen1.line3_ex, "");
  expect(test.screen1.line4_ex, "");
  expect(test.screen1.sound_led1, 0);
  expect(test.screen1.sound_led2, 0);
  expect(test.screen1.sound_led3, 0);
  expect(test.screen2.title, "");
  expect(test.screen2.msg1, "");
  expect(test.screen2.msg2, "");
  expect(test.screen2.msg1_size, 0);
  expect(test.screen2.msg2_size, 0);
  expect(test.screen2.sound1, 0);
  expect(test.screen2.sound2, 0);
  expect(test.screen2.sound3, 0);
  expect(test.screen2.snd_timer, 0);
  expect(test.screen2.timer1, 0);
  expect(test.screen2.timer2, 0);
  expect(test.screen2.timer3, 0);
  expect(test.screen2.dsp_flg1, 0);
  expect(test.screen2.dsp_flg2, 0);
  expect(test.screen2.movie01_ext, 0);
  expect(test.screen2.movie02_ext, 0);
  expect(test.screen2.movie03_ext, 0);
  expect(test.screen2.movie04_ext, 0);
  expect(test.screen2.line_title, "");
  expect(test.screen2.line_title_ex, "");
  expect(test.screen2.line1, "");
  expect(test.screen2.line2, "");
  expect(test.screen2.line3, "");
  expect(test.screen2.line4, "");
  expect(test.screen2.line1_ex, "");
  expect(test.screen2.line2_ex, "");
  expect(test.screen2.line3_ex, "");
  expect(test.screen2.line4_ex, "");
  expect(test.screen2.sound_led1, 0);
  expect(test.screen2.sound_led2, 0);
  expect(test.screen2.sound_led3, 0);
  expect(test.screen3.title, "");
  expect(test.screen3.msg1, "");
  expect(test.screen3.msg2, "");
  expect(test.screen3.msg1_size, 0);
  expect(test.screen3.msg2_size, 0);
  expect(test.screen3.sound1, 0);
  expect(test.screen3.sound2, 0);
  expect(test.screen3.sound3, 0);
  expect(test.screen3.snd_timer, 0);
  expect(test.screen3.timer1, 0);
  expect(test.screen3.timer2, 0);
  expect(test.screen3.timer3, 0);
  expect(test.screen3.dsp_flg1, 0);
  expect(test.screen3.dsp_flg2, 0);
  expect(test.screen3.movie01_ext, 0);
  expect(test.screen3.movie02_ext, 0);
  expect(test.screen3.movie03_ext, 0);
  expect(test.screen3.movie04_ext, 0);
  expect(test.screen3.line_title, "");
  expect(test.screen3.line_title_ex, "");
  expect(test.screen3.line1, "");
  expect(test.screen3.line2, "");
  expect(test.screen3.line3, "");
  expect(test.screen3.line4, "");
  expect(test.screen3.line1_ex, "");
  expect(test.screen3.line2_ex, "");
  expect(test.screen3.line3_ex, "");
  expect(test.screen3.line4_ex, "");
  expect(test.screen3.sound_led1, 0);
  expect(test.screen3.sound_led2, 0);
  expect(test.screen3.sound_led3, 0);
  expect(test.screen4.title, "");
  expect(test.screen4.msg1, "");
  expect(test.screen4.msg2, "");
  expect(test.screen4.msg1_size, 0);
  expect(test.screen4.msg2_size, 0);
  expect(test.screen4.sound1, 0);
  expect(test.screen4.sound2, 0);
  expect(test.screen4.sound3, 0);
  expect(test.screen4.snd_timer, 0);
  expect(test.screen4.timer1, 0);
  expect(test.screen4.timer2, 0);
  expect(test.screen4.timer3, 0);
  expect(test.screen4.dsp_flg1, 0);
  expect(test.screen4.dsp_flg2, 0);
  expect(test.screen4.movie01_ext, 0);
  expect(test.screen4.movie02_ext, 0);
  expect(test.screen4.movie03_ext, 0);
  expect(test.screen4.movie04_ext, 0);
  expect(test.screen4.line_title, "");
  expect(test.screen4.line_title_ex, "");
  expect(test.screen4.line1, "");
  expect(test.screen4.line2, "");
  expect(test.screen4.line3, "");
  expect(test.screen4.line4, "");
  expect(test.screen4.line1_ex, "");
  expect(test.screen4.line2_ex, "");
  expect(test.screen4.line3_ex, "");
  expect(test.screen4.line4_ex, "");
  expect(test.screen4.sound_led1, 0);
  expect(test.screen4.sound_led2, 0);
  expect(test.screen4.sound_led3, 0);
  expect(test.screen5.title, "");
  expect(test.screen5.msg1, "");
  expect(test.screen5.msg2, "");
  expect(test.screen5.msg1_size, 0);
  expect(test.screen5.msg2_size, 0);
  expect(test.screen5.sound1, 0);
  expect(test.screen5.sound2, "");
  expect(test.screen5.sound3, 0);
  expect(test.screen5.snd_timer, 0);
  expect(test.screen5.timer1, 0);
  expect(test.screen5.timer2, 0);
  expect(test.screen5.timer3, 0);
  expect(test.screen5.dsp_flg1, 0);
  expect(test.screen5.dsp_flg2, 0);
  expect(test.screen5.movie01_ext, 0);
  expect(test.screen5.movie02_ext, 0);
  expect(test.screen5.movie03_ext, 0);
  expect(test.screen5.movie04_ext, 0);
  expect(test.screen5.line_title, "");
  expect(test.screen5.line_title_ex, "");
  expect(test.screen5.line1, "");
  expect(test.screen5.line2, "");
  expect(test.screen5.line3, "");
  expect(test.screen5.line4, "");
  expect(test.screen5.line1_ex, "");
  expect(test.screen5.line2_ex, "");
  expect(test.screen5.line3_ex, "");
  expect(test.screen5.line4_ex, "");
  expect(test.screen5.sound_led1, 0);
  expect(test.screen5.sound_led2, 0);
  expect(test.screen5.sound_led3, 0);
  expect(test.screen6.title, "");
  expect(test.screen6.msg1, "");
  expect(test.screen6.msg2, "");
  expect(test.screen6.msg1_size, 0);
  expect(test.screen6.msg2_size, 0);
  expect(test.screen6.sound1, 0);
  expect(test.screen6.sound2, 0);
  expect(test.screen6.sound3, 0);
  expect(test.screen6.snd_timer, 0);
  expect(test.screen6.timer1, 0);
  expect(test.screen6.timer2, 0);
  expect(test.screen6.timer3, 0);
  expect(test.screen6.dsp_flg1, 0);
  expect(test.screen6.dsp_flg2, 0);
  expect(test.screen6.movie01_ext, 0);
  expect(test.screen6.movie02_ext, 0);
  expect(test.screen6.movie03_ext, 0);
  expect(test.screen6.movie04_ext, 0);
  expect(test.screen6.line_title, "");
  expect(test.screen6.line_title_ex, "");
  expect(test.screen6.line1, "");
  expect(test.screen6.line2, "");
  expect(test.screen6.line3, "");
  expect(test.screen6.line4, "");
  expect(test.screen6.line1_ex, "");
  expect(test.screen6.line2_ex, "");
  expect(test.screen6.line3_ex, "");
  expect(test.screen6.line4_ex, "");
  expect(test.screen6.sound_led1, 0);
  expect(test.screen6.sound_led2, 0);
  expect(test.screen6.sound_led3, 0);
  expect(test.screen6.line2_1, "");
  expect(test.screen6.line2_2, "");
  expect(test.screen6.line2_3, "");
  expect(test.screen6.line2_4, "");
  expect(test.screen7.title, "");
  expect(test.screen7.msg1, "");
  expect(test.screen7.msg2, "");
  expect(test.screen7.msg1_size, 0);
  expect(test.screen7.msg2_size, 0);
  expect(test.screen7.sound1, 0);
  expect(test.screen7.sound2, 0);
  expect(test.screen7.sound3, 0);
  expect(test.screen7.snd_timer, 0);
  expect(test.screen7.timer1, 0);
  expect(test.screen7.timer2, 0);
  expect(test.screen7.timer3, 0);
  expect(test.screen7.dsp_flg1, 0);
  expect(test.screen7.dsp_flg2, 0);
  expect(test.screen7.movie01_ext, 0);
  expect(test.screen7.movie02_ext, 0);
  expect(test.screen7.movie03_ext, 0);
  expect(test.screen7.movie04_ext, 0);
  expect(test.screen7.line_title, "");
  expect(test.screen7.line_title_ex, "");
  expect(test.screen7.line1, "");
  expect(test.screen7.line2, "");
  expect(test.screen7.line3, "");
  expect(test.screen7.line4, "");
  expect(test.screen7.line1_ex, "");
  expect(test.screen7.line2_ex, "");
  expect(test.screen7.line3_ex, "");
  expect(test.screen7.line4_ex, "");
  expect(test.screen7.sound_led1, 0);
  expect(test.screen7.sound_led2, 0);
  expect(test.screen7.sound_led3, 0);
  expect(test.screen8.title, "");
  expect(test.screen8.msg1, "");
  expect(test.screen8.msg2, "");
  expect(test.screen8.msg1_size, 0);
  expect(test.screen8.msg2_size, 0);
  expect(test.screen8.sound1, 0);
  expect(test.screen8.sound2, 0);
  expect(test.screen8.sound3, 0);
  expect(test.screen8.snd_timer, 0);
  expect(test.screen8.timer1, 0);
  expect(test.screen8.timer2, 0);
  expect(test.screen8.timer3, 0);
  expect(test.screen8.dsp_flg1, 0);
  expect(test.screen8.dsp_flg2, 0);
  expect(test.screen8.movie01_ext, 0);
  expect(test.screen8.movie02_ext, 0);
  expect(test.screen8.movie03_ext, 0);
  expect(test.screen8.movie04_ext, 0);
  expect(test.screen8.line_title, "");
  expect(test.screen8.line_title_ex, "");
  expect(test.screen8.line1, "");
  expect(test.screen8.line2, "");
  expect(test.screen8.line3, "");
  expect(test.screen8.line4, "");
  expect(test.screen8.line1_ex, "");
  expect(test.screen8.line2_ex, "");
  expect(test.screen8.line3_ex, "");
  expect(test.screen8.line4_ex, "");
  expect(test.screen8.sound_led1, 0);
  expect(test.screen8.sound_led2, 0);
  expect(test.screen8.sound_led3, 0);
  expect(test.screen9.title, "");
  expect(test.screen9.msg1, "");
  expect(test.screen9.msg2, "");
  expect(test.screen9.msg1_size, 0);
  expect(test.screen9.msg2_size, 0);
  expect(test.screen9.sound1, 0);
  expect(test.screen9.sound2, 0);
  expect(test.screen9.sound3, 0);
  expect(test.screen9.snd_timer, 0);
  expect(test.screen9.timer1, 0);
  expect(test.screen9.timer2, 0);
  expect(test.screen9.timer3, 0);
  expect(test.screen9.dsp_flg1, 0);
  expect(test.screen9.dsp_flg2, 0);
  expect(test.screen9.movie01_ext, 0);
  expect(test.screen9.movie02_ext, 0);
  expect(test.screen9.movie03_ext, 0);
  expect(test.screen9.movie04_ext, 0);
  expect(test.screen9.line_title, "");
  expect(test.screen9.line_title_ex, "");
  expect(test.screen9.line1, "");
  expect(test.screen9.line2, "");
  expect(test.screen9.line3, "");
  expect(test.screen9.line4, "");
  expect(test.screen9.line1_ex, "");
  expect(test.screen9.line2_ex, "");
  expect(test.screen9.line3_ex, "");
  expect(test.screen9.line4_ex, "");
  expect(test.screen9.sound_led1, 0);
  expect(test.screen9.sound_led2, 0);
  expect(test.screen9.sound_led3, 0);
  expect(test.screen10.title, "");
  expect(test.screen10.msg1, "");
  expect(test.screen10.msg2, "");
  expect(test.screen10.msg1_size, 0);
  expect(test.screen10.msg2_size, 0);
  expect(test.screen10.sound1, 0);
  expect(test.screen10.sound2, 0);
  expect(test.screen10.sound3, 0);
  expect(test.screen10.snd_timer, 0);
  expect(test.screen10.timer1, 0);
  expect(test.screen10.timer2, 0);
  expect(test.screen10.timer3, 0);
  expect(test.screen10.dsp_flg1, 0);
  expect(test.screen10.dsp_flg2, 0);
  expect(test.screen10.movie01_ext, 0);
  expect(test.screen10.movie02_ext, 0);
  expect(test.screen10.movie03_ext, 0);
  expect(test.screen10.movie04_ext, 0);
  expect(test.screen10.line_title, "");
  expect(test.screen10.line_title_ex, "");
  expect(test.screen10.line1, "");
  expect(test.screen10.line2, "");
  expect(test.screen10.line3, "");
  expect(test.screen10.line4, "");
  expect(test.screen10.line1_ex, "");
  expect(test.screen10.line2_ex, "");
  expect(test.screen10.line3_ex, "");
  expect(test.screen10.line4_ex, "");
  expect(test.screen10.sound_led1, 0);
  expect(test.screen10.sound_led2, 0);
  expect(test.screen10.sound_led3, 0);
  expect(test.screen11.title, "");
  expect(test.screen11.msg1, "");
  expect(test.screen11.msg2, "");
  expect(test.screen11.msg1_size, 0);
  expect(test.screen11.msg2_size, 0);
  expect(test.screen11.sound1, 0);
  expect(test.screen11.sound2, 0);
  expect(test.screen11.sound3, 0);
  expect(test.screen11.snd_timer, 0);
  expect(test.screen11.timer1, 0);
  expect(test.screen11.timer2, 0);
  expect(test.screen11.timer3, 0);
  expect(test.screen11.dsp_flg1, 0);
  expect(test.screen11.dsp_flg2, 0);
  expect(test.screen11.movie01_ext, 0);
  expect(test.screen11.movie02_ext, 0);
  expect(test.screen11.movie03_ext, 0);
  expect(test.screen11.movie04_ext, 0);
  expect(test.screen11.line_title, "");
  expect(test.screen11.line_title_ex, "");
  expect(test.screen11.line1, "");
  expect(test.screen11.line2, "");
  expect(test.screen11.line3, "");
  expect(test.screen11.line4, "");
  expect(test.screen11.line1_ex, "");
  expect(test.screen11.line2_ex, "");
  expect(test.screen11.line3_ex, "");
  expect(test.screen11.line4_ex, "");
  expect(test.screen11.sound_led1, 0);
  expect(test.screen11.sound_led2, 0);
  expect(test.screen11.sound_led3, 0);
  expect(test.screen12.title, "");
  expect(test.screen12.msg1, "");
  expect(test.screen12.msg2, "");
  expect(test.screen12.msg1_size, 0);
  expect(test.screen12.msg2_size, 0);
  expect(test.screen12.sound1, 0);
  expect(test.screen12.sound2, 0);
  expect(test.screen12.sound3, 0);
  expect(test.screen12.snd_timer, 0);
  expect(test.screen12.timer1, 0);
  expect(test.screen12.timer2, 0);
  expect(test.screen12.timer3, 0);
  expect(test.screen12.dsp_flg1, 0);
  expect(test.screen12.dsp_flg2, 0);
  expect(test.screen12.movie01_ext, 0);
  expect(test.screen12.movie02_ext, 0);
  expect(test.screen12.movie03_ext, 0);
  expect(test.screen12.movie04_ext, 0);
  expect(test.screen12.line_title, "");
  expect(test.screen12.line_title_ex, "");
  expect(test.screen12.line1, "");
  expect(test.screen12.line2, "");
  expect(test.screen12.line3, "");
  expect(test.screen12.line4, "");
  expect(test.screen12.line1_ex, "");
  expect(test.screen12.line2_ex, "");
  expect(test.screen12.line3_ex, "");
  expect(test.screen12.line4_ex, "");
  expect(test.screen12.sound_led1, 0);
  expect(test.screen12.sound_led2, 0);
  expect(test.screen12.sound_led3, 0);
  expect(test.screen13.title, "");
  expect(test.screen13.msg1, "");
  expect(test.screen13.msg2, "");
  expect(test.screen13.msg1_size, 0);
  expect(test.screen13.msg2_size, 0);
  expect(test.screen13.sound1, 0);
  expect(test.screen13.sound2, 0);
  expect(test.screen13.sound3, 0);
  expect(test.screen13.snd_timer, 0);
  expect(test.screen13.timer1, 0);
  expect(test.screen13.timer2, 0);
  expect(test.screen13.timer3, 0);
  expect(test.screen13.dsp_flg1, 0);
  expect(test.screen13.dsp_flg2, 0);
  expect(test.screen13.movie01_ext, 0);
  expect(test.screen13.movie02_ext, 0);
  expect(test.screen13.movie03_ext, 0);
  expect(test.screen13.movie04_ext, 0);
  expect(test.screen13.line_title, "");
  expect(test.screen13.line_title_ex, "");
  expect(test.screen13.line1, "");
  expect(test.screen13.line2, "");
  expect(test.screen13.line3, "");
  expect(test.screen13.line4, "");
  expect(test.screen13.line1_ex, "");
  expect(test.screen13.line2_ex, "");
  expect(test.screen13.line3_ex, "");
  expect(test.screen13.line4_ex, "");
  expect(test.screen13.sound_led1, 0);
  expect(test.screen13.sound_led2, 0);
  expect(test.screen13.sound_led3, 0);
  expect(test.screen14.title, "");
  expect(test.screen14.msg1, "");
  expect(test.screen14.msg2, "");
  expect(test.screen14.msg1_size, 0);
  expect(test.screen14.msg2_size, 0);
  expect(test.screen14.sound1, 0);
  expect(test.screen14.sound2, 0);
  expect(test.screen14.sound3, 0);
  expect(test.screen14.snd_timer, 0);
  expect(test.screen14.timer1, 0);
  expect(test.screen14.timer2, 0);
  expect(test.screen14.timer3, 0);
  expect(test.screen14.dsp_flg1, 0);
  expect(test.screen14.dsp_flg2, 0);
  expect(test.screen14.movie01_ext, 0);
  expect(test.screen14.movie02_ext, 0);
  expect(test.screen14.movie03_ext, 0);
  expect(test.screen14.movie04_ext, 0);
  expect(test.screen14.line_title, "");
  expect(test.screen14.line_title_ex, "");
  expect(test.screen14.line1, "");
  expect(test.screen14.line2, "");
  expect(test.screen14.line3, "");
  expect(test.screen14.line4, "");
  expect(test.screen14.line1_ex, "");
  expect(test.screen14.line2_ex, "");
  expect(test.screen14.line3_ex, "");
  expect(test.screen14.line4_ex, "");
  expect(test.screen14.sound_led1, 0);
  expect(test.screen14.sound_led2, 0);
  expect(test.screen14.sound_led3, 0);
  expect(test.screen15.title, "");
  expect(test.screen15.msg1, "");
  expect(test.screen15.msg2, "");
  expect(test.screen15.msg1_size, 0);
  expect(test.screen15.msg2_size, 0);
  expect(test.screen15.sound1, 0);
  expect(test.screen15.sound2, 0);
  expect(test.screen15.sound3, 0);
  expect(test.screen15.snd_timer, 0);
  expect(test.screen15.timer1, 0);
  expect(test.screen15.timer2, 0);
  expect(test.screen15.timer3, 0);
  expect(test.screen15.dsp_flg1, 0);
  expect(test.screen15.dsp_flg2, 0);
  expect(test.screen15.movie01_ext, 0);
  expect(test.screen15.movie02_ext, 0);
  expect(test.screen15.movie03_ext, 0);
  expect(test.screen15.movie04_ext, 0);
  expect(test.screen15.line_title, "");
  expect(test.screen15.line_title_ex, "");
  expect(test.screen15.line1, "");
  expect(test.screen15.line2, "");
  expect(test.screen15.line3, "");
  expect(test.screen15.line4, "");
  expect(test.screen15.line1_ex, "");
  expect(test.screen15.line2_ex, "");
  expect(test.screen15.line3_ex, "");
  expect(test.screen15.line4_ex, "");
  expect(test.screen15.sound_led1, 0);
  expect(test.screen15.sound_led2, 0);
  expect(test.screen15.sound_led3, 0);
  expect(test.screen16.title, "");
  expect(test.screen16.msg1, "");
  expect(test.screen16.msg2, "");
  expect(test.screen16.msg1_size, 0);
  expect(test.screen16.msg2_size, 0);
  expect(test.screen16.sound1, 0);
  expect(test.screen16.sound2, "");
  expect(test.screen16.sound3, "");
  expect(test.screen16.snd_timer, 0);
  expect(test.screen16.timer1, 0);
  expect(test.screen16.timer2, 0);
  expect(test.screen16.timer3, 0);
  expect(test.screen16.dsp_flg1, 0);
  expect(test.screen16.dsp_flg2, 0);
  expect(test.screen16.movie01_ext, 0);
  expect(test.screen16.movie02_ext, 0);
  expect(test.screen16.movie03_ext, 0);
  expect(test.screen16.movie04_ext, 0);
  expect(test.screen16.line_title, "");
  expect(test.screen16.line_title_ex, "");
  expect(test.screen16.line1, "");
  expect(test.screen16.line2, "");
  expect(test.screen16.line3, "");
  expect(test.screen16.line4, "");
  expect(test.screen16.line1_ex, "");
  expect(test.screen16.line2_ex, "");
  expect(test.screen16.line3_ex, "");
  expect(test.screen16.line4_ex, "");
  expect(test.screen16.sound_led1, 0);
  expect(test.screen16.sound_led2, "");
  expect(test.screen16.sound_led3, "");
  expect(test.screen16.msg_max, 0);
  expect(test.screen16.line2_1, "");
  expect(test.screen16.line2_2, "");
  expect(test.screen16.line2_3, "");
  expect(test.screen16.line2_4, "");
  expect(test.screen16.line2_1_ex, "");
  expect(test.screen16.line2_2_ex, "");
  expect(test.screen16.line2_3_ex, "");
  expect(test.screen16.line2_4_ex, "");
  expect(test.screen17.title, "");
  expect(test.screen17.msg1, "");
  expect(test.screen17.msg2, "");
  expect(test.screen17.msg1_size, 0);
  expect(test.screen17.msg2_size, 0);
  expect(test.screen17.sound1, 0);
  expect(test.screen17.sound2, 0);
  expect(test.screen17.sound3, 0);
  expect(test.screen17.snd_timer, 0);
  expect(test.screen17.timer1, 0);
  expect(test.screen17.timer2, 0);
  expect(test.screen17.timer3, 0);
  expect(test.screen17.dsp_flg1, 0);
  expect(test.screen17.dsp_flg2, 0);
  expect(test.screen17.movie01_ext, 0);
  expect(test.screen17.movie02_ext, 0);
  expect(test.screen17.movie03_ext, 0);
  expect(test.screen17.movie04_ext, 0);
  expect(test.screen17.line_title, "");
  expect(test.screen17.line_title_ex, "");
  expect(test.screen17.line1, "");
  expect(test.screen17.line2, "");
  expect(test.screen17.line3, "");
  expect(test.screen17.line4, "");
  expect(test.screen17.line1_ex, "");
  expect(test.screen17.line2_ex, "");
  expect(test.screen17.line3_ex, "");
  expect(test.screen17.line4_ex, "");
  expect(test.screen17.sound_led1, 0);
  expect(test.screen17.sound_led2, 0);
  expect(test.screen17.sound_led3, 0);
  expect(test.screen18.title, "");
  expect(test.screen18.msg1, "");
  expect(test.screen18.msg2, "");
  expect(test.screen18.msg1_size, 0);
  expect(test.screen18.msg2_size, 0);
  expect(test.screen18.sound1, 0);
  expect(test.screen18.sound2, 0);
  expect(test.screen18.sound3, 0);
  expect(test.screen18.snd_timer, 0);
  expect(test.screen18.timer1, 0);
  expect(test.screen18.timer2, 0);
  expect(test.screen18.timer3, 0);
  expect(test.screen18.dsp_flg1, 0);
  expect(test.screen18.dsp_flg2, 0);
  expect(test.screen18.movie01_ext, 0);
  expect(test.screen18.movie02_ext, 0);
  expect(test.screen18.movie03_ext, 0);
  expect(test.screen18.movie04_ext, 0);
  expect(test.screen18.line_title, "");
  expect(test.screen18.line_title_ex, "");
  expect(test.screen18.line1, "");
  expect(test.screen18.line2, "");
  expect(test.screen18.line3, "");
  expect(test.screen18.line4, "");
  expect(test.screen18.line1_ex, "");
  expect(test.screen18.line2_ex, "");
  expect(test.screen18.line3_ex, "");
  expect(test.screen18.line4_ex, "");
  expect(test.screen18.sound_led1, 0);
  expect(test.screen18.sound_led2, 0);
  expect(test.screen18.sound_led3, 0);
  expect(test.screen19.title, "");
  expect(test.screen19.msg1, "");
  expect(test.screen19.msg2, "");
  expect(test.screen19.msg1_size, 0);
  expect(test.screen19.msg2_size, 0);
  expect(test.screen19.sound1, 0);
  expect(test.screen19.sound2, "");
  expect(test.screen19.sound3, "");
  expect(test.screen19.snd_timer, 0);
  expect(test.screen19.timer1, 0);
  expect(test.screen19.timer2, 0);
  expect(test.screen19.timer3, 0);
  expect(test.screen19.dsp_flg1, 0);
  expect(test.screen19.dsp_flg2, 0);
  expect(test.screen19.movie01_ext, 0);
  expect(test.screen19.movie02_ext, 0);
  expect(test.screen19.movie03_ext, 0);
  expect(test.screen19.movie04_ext, 0);
  expect(test.screen19.line_title, "");
  expect(test.screen19.line_title_ex, "");
  expect(test.screen19.line1, "");
  expect(test.screen19.line2, "");
  expect(test.screen19.line3, "");
  expect(test.screen19.line4, "");
  expect(test.screen19.line1_ex, "");
  expect(test.screen19.line2_ex, "");
  expect(test.screen19.line3_ex, "");
  expect(test.screen19.line4_ex, "");
  expect(test.screen19.sound_led1, 0);
  expect(test.screen19.sound_led2, "");
  expect(test.screen19.sound_led3, "");
  expect(test.screen20.title, "");
  expect(test.screen20.msg1, "");
  expect(test.screen20.msg2, "");
  expect(test.screen20.msg1_size, 0);
  expect(test.screen20.msg2_size, 0);
  expect(test.screen20.sound1, 0);
  expect(test.screen20.sound2, 0);
  expect(test.screen20.sound3, 0);
  expect(test.screen20.snd_timer, 0);
  expect(test.screen20.timer1, 0);
  expect(test.screen20.timer2, 0);
  expect(test.screen20.timer3, 0);
  expect(test.screen20.dsp_flg1, 0);
  expect(test.screen20.dsp_flg2, 0);
  expect(test.screen20.movie01_ext, 0);
  expect(test.screen20.movie02_ext, 0);
  expect(test.screen20.movie03_ext, 0);
  expect(test.screen20.movie04_ext, 0);
  expect(test.screen20.line_title, "");
  expect(test.screen20.line_title_ex, "");
  expect(test.screen20.line1, "");
  expect(test.screen20.line2, "");
  expect(test.screen20.line3, "");
  expect(test.screen20.line4, "");
  expect(test.screen20.line1_ex, "");
  expect(test.screen20.line2_ex, "");
  expect(test.screen20.line3_ex, "");
  expect(test.screen20.line4_ex, "");
  expect(test.screen20.sound_led1, 0);
  expect(test.screen20.sound_led2, 0);
  expect(test.screen20.sound_led3, 0);
  expect(test.screen21.title, "");
  expect(test.screen21.msg1, "");
  expect(test.screen21.msg2, "");
  expect(test.screen21.msg1_size, 0);
  expect(test.screen21.msg2_size, 0);
  expect(test.screen21.sound1, 0);
  expect(test.screen21.sound2, 0);
  expect(test.screen21.sound3, 0);
  expect(test.screen21.snd_timer, 0);
  expect(test.screen21.timer1, 0);
  expect(test.screen21.timer2, 0);
  expect(test.screen21.timer3, 0);
  expect(test.screen21.dsp_flg1, 0);
  expect(test.screen21.dsp_flg2, 0);
  expect(test.screen21.movie01_ext, 0);
  expect(test.screen21.movie02_ext, 0);
  expect(test.screen21.movie03_ext, 0);
  expect(test.screen21.movie04_ext, 0);
  expect(test.screen21.line_title, "");
  expect(test.screen21.line_title_ex, "");
  expect(test.screen21.line1, "");
  expect(test.screen21.line2, "");
  expect(test.screen21.line3, "");
  expect(test.screen21.line4, "");
  expect(test.screen21.line1_ex, "");
  expect(test.screen21.line2_ex, "");
  expect(test.screen21.line3_ex, "");
  expect(test.screen21.line4_ex, "");
  expect(test.screen21.sound_led1, 0);
  expect(test.screen21.sound_led2, 0);
  expect(test.screen21.sound_led3, 0);
  expect(test.screen22.title, "");
  expect(test.screen22.msg1, "");
  expect(test.screen22.msg2, "");
  expect(test.screen22.msg1_size, 0);
  expect(test.screen22.msg2_size, 0);
  expect(test.screen22.sound1, 0);
  expect(test.screen22.sound2, 0);
  expect(test.screen22.sound3, 0);
  expect(test.screen22.snd_timer, 0);
  expect(test.screen22.timer1, 0);
  expect(test.screen22.timer2, 0);
  expect(test.screen22.timer3, 0);
  expect(test.screen22.dsp_flg1, 0);
  expect(test.screen22.dsp_flg2, 0);
  expect(test.screen22.movie01_ext, 0);
  expect(test.screen22.movie02_ext, 0);
  expect(test.screen22.movie03_ext, 0);
  expect(test.screen22.movie04_ext, 0);
  expect(test.screen22.line_title, "");
  expect(test.screen22.line_title_ex, "");
  expect(test.screen22.line1, "");
  expect(test.screen22.line2, "");
  expect(test.screen22.line3, "");
  expect(test.screen22.line4, "");
  expect(test.screen22.line1_ex, "");
  expect(test.screen22.line2_ex, "");
  expect(test.screen22.line3_ex, "");
  expect(test.screen22.line4_ex, "");
  expect(test.screen22.sound_led1, 0);
  expect(test.screen22.sound_led2, 0);
  expect(test.screen22.sound_led3, 0);
  expect(test.screen23.title, "");
  expect(test.screen23.msg1, "");
  expect(test.screen23.msg2, "");
  expect(test.screen23.msg1_size, 0);
  expect(test.screen23.msg2_size, 0);
  expect(test.screen23.sound1, 0);
  expect(test.screen23.sound2, 0);
  expect(test.screen23.sound3, 0);
  expect(test.screen23.snd_timer, 0);
  expect(test.screen23.timer1, 0);
  expect(test.screen23.timer2, 0);
  expect(test.screen23.timer3, 0);
  expect(test.screen23.dsp_flg1, 0);
  expect(test.screen23.dsp_flg2, 0);
  expect(test.screen23.movie01_ext, 0);
  expect(test.screen23.movie02_ext, 0);
  expect(test.screen23.movie03_ext, 0);
  expect(test.screen23.movie04_ext, 0);
  expect(test.screen23.line_title, "");
  expect(test.screen23.line_title_ex, "");
  expect(test.screen23.line1, "");
  expect(test.screen23.line2, "");
  expect(test.screen23.line3, "");
  expect(test.screen23.line4, "");
  expect(test.screen23.line1_ex, "");
  expect(test.screen23.line2_ex, "");
  expect(test.screen23.line3_ex, "");
  expect(test.screen23.line4_ex, "");
  expect(test.screen23.sound_led1, 0);
  expect(test.screen23.sound_led2, 0);
  expect(test.screen23.sound_led3, 0);
  expect(test.screen24.title, "");
  expect(test.screen24.msg1, "");
  expect(test.screen24.msg2, "");
  expect(test.screen24.msg1_size, 0);
  expect(test.screen24.msg2_size, 0);
  expect(test.screen24.sound1, 0);
  expect(test.screen24.sound2, 0);
  expect(test.screen24.sound3, 0);
  expect(test.screen24.snd_timer, 0);
  expect(test.screen24.timer1, 0);
  expect(test.screen24.timer2, 0);
  expect(test.screen24.timer3, 0);
  expect(test.screen24.dsp_flg1, 0);
  expect(test.screen24.dsp_flg2, 0);
  expect(test.screen24.movie01_ext, 0);
  expect(test.screen24.movie02_ext, 0);
  expect(test.screen24.movie03_ext, 0);
  expect(test.screen24.movie04_ext, 0);
  expect(test.screen24.line_title, "");
  expect(test.screen24.line_title_ex, "");
  expect(test.screen24.line1, "");
  expect(test.screen24.line2, "");
  expect(test.screen24.line3, "");
  expect(test.screen24.line4, "");
  expect(test.screen24.line1_ex, "");
  expect(test.screen24.line2_ex, "");
  expect(test.screen24.line3_ex, "");
  expect(test.screen24.line4_ex, "");
  expect(test.screen24.sound_led1, 0);
  expect(test.screen24.sound_led2, 0);
  expect(test.screen24.sound_led3, 0);
  expect(test.screen25.title, "");
  expect(test.screen25.msg1, "");
  expect(test.screen25.msg2, "");
  expect(test.screen25.msg1_size, 0);
  expect(test.screen25.msg2_size, 0);
  expect(test.screen25.sound1, 0);
  expect(test.screen25.sound2, 0);
  expect(test.screen25.sound3, 0);
  expect(test.screen25.snd_timer, 0);
  expect(test.screen25.timer1, 0);
  expect(test.screen25.timer2, 0);
  expect(test.screen25.timer3, 0);
  expect(test.screen25.dsp_flg1, 0);
  expect(test.screen25.dsp_flg2, 0);
  expect(test.screen25.movie01_ext, 0);
  expect(test.screen25.movie02_ext, 0);
  expect(test.screen25.movie03_ext, 0);
  expect(test.screen25.movie04_ext, 0);
  expect(test.screen25.line_title, "");
  expect(test.screen25.line_title_ex, "");
  expect(test.screen25.line1, "");
  expect(test.screen25.line2, "");
  expect(test.screen25.line3, "");
  expect(test.screen25.line4, "");
  expect(test.screen25.line1_ex, "");
  expect(test.screen25.line2_ex, "");
  expect(test.screen25.line3_ex, "");
  expect(test.screen25.line4_ex, "");
  expect(test.screen25.sound_led1, 0);
  expect(test.screen25.sound_led2, 0);
  expect(test.screen25.sound_led3, 0);
  expect(test.screen26.title, "");
  expect(test.screen26.msg1, "");
  expect(test.screen26.msg2, "");
  expect(test.screen26.msg1_size, 0);
  expect(test.screen26.msg2_size, 0);
  expect(test.screen26.sound1, 0);
  expect(test.screen26.sound2, "");
  expect(test.screen26.sound3, "");
  expect(test.screen26.snd_timer, 0);
  expect(test.screen26.timer1, 0);
  expect(test.screen26.timer2, 0);
  expect(test.screen26.timer3, 0);
  expect(test.screen26.dsp_flg1, 0);
  expect(test.screen26.dsp_flg2, 0);
  expect(test.screen26.movie01_ext, 0);
  expect(test.screen26.movie02_ext, 0);
  expect(test.screen26.movie03_ext, 0);
  expect(test.screen26.movie04_ext, 0);
  expect(test.screen26.line_title, "");
  expect(test.screen26.line_title_ex, "");
  expect(test.screen26.line1, "");
  expect(test.screen26.line2, "");
  expect(test.screen26.line3, "");
  expect(test.screen26.line4, "");
  expect(test.screen26.line1_ex, "");
  expect(test.screen26.line2_ex, "");
  expect(test.screen26.line3_ex, "");
  expect(test.screen26.line4_ex, "");
  expect(test.screen26.sound_led1, 0);
  expect(test.screen26.sound_led2, "");
  expect(test.screen26.sound_led3, "");
  expect(test.screen27.title, "");
  expect(test.screen27.msg1, "");
  expect(test.screen27.msg2, "");
  expect(test.screen27.msg1_size, 0);
  expect(test.screen27.msg2_size, 0);
  expect(test.screen27.sound1, 0);
  expect(test.screen27.sound2, 0);
  expect(test.screen27.sound3, 0);
  expect(test.screen27.snd_timer, 0);
  expect(test.screen27.timer1, 0);
  expect(test.screen27.timer2, 0);
  expect(test.screen27.timer3, 0);
  expect(test.screen27.dsp_flg1, 0);
  expect(test.screen27.dsp_flg2, 0);
  expect(test.screen27.movie01_ext, 0);
  expect(test.screen27.movie02_ext, 0);
  expect(test.screen27.movie03_ext, 0);
  expect(test.screen27.movie04_ext, 0);
  expect(test.screen27.line_title, "");
  expect(test.screen27.line_title_ex, "");
  expect(test.screen27.line1, "");
  expect(test.screen27.line2, "");
  expect(test.screen27.line3, "");
  expect(test.screen27.line4, "");
  expect(test.screen27.line1_ex, "");
  expect(test.screen27.line2_ex, "");
  expect(test.screen27.line3_ex, "");
  expect(test.screen27.line4_ex, "");
  expect(test.screen27.sound_led1, 0);
  expect(test.screen27.sound_led2, 0);
  expect(test.screen27.sound_led3, 0);
  expect(test.screen28.title, "");
  expect(test.screen28.msg1, "");
  expect(test.screen28.msg2, "");
  expect(test.screen28.msg1_size, 0);
  expect(test.screen28.msg2_size, 0);
  expect(test.screen28.sound1, 0);
  expect(test.screen28.sound2, 0);
  expect(test.screen28.sound3, 0);
  expect(test.screen28.snd_timer, 0);
  expect(test.screen28.timer1, 0);
  expect(test.screen28.timer2, 0);
  expect(test.screen28.timer3, 0);
  expect(test.screen28.dsp_flg1, 0);
  expect(test.screen28.dsp_flg2, 0);
  expect(test.screen28.movie01_ext, 0);
  expect(test.screen28.movie02_ext, 0);
  expect(test.screen28.movie03_ext, 0);
  expect(test.screen28.movie04_ext, 0);
  expect(test.screen28.line_title, "");
  expect(test.screen28.line_title_ex, "");
  expect(test.screen28.line1, "");
  expect(test.screen28.line2, "");
  expect(test.screen28.line3, "");
  expect(test.screen28.line4, "");
  expect(test.screen28.line1_ex, "");
  expect(test.screen28.line2_ex, "");
  expect(test.screen28.line3_ex, "");
  expect(test.screen28.line4_ex, "");
  expect(test.screen28.sound_led1, 0);
  expect(test.screen28.sound_led2, 0);
  expect(test.screen28.sound_led3, 0);
  expect(test.screen29.title, "");
  expect(test.screen29.msg1, "");
  expect(test.screen29.msg2, "");
  expect(test.screen29.msg1_size, 0);
  expect(test.screen29.msg2_size, 0);
  expect(test.screen29.sound1, 0);
  expect(test.screen29.sound2, 0);
  expect(test.screen29.sound3, 0);
  expect(test.screen29.snd_timer, 0);
  expect(test.screen29.timer1, 0);
  expect(test.screen29.timer2, 0);
  expect(test.screen29.timer3, 0);
  expect(test.screen29.dsp_flg1, 0);
  expect(test.screen29.dsp_flg2, 0);
  expect(test.screen29.movie01_ext, 0);
  expect(test.screen29.movie02_ext, 0);
  expect(test.screen29.movie03_ext, 0);
  expect(test.screen29.movie04_ext, 0);
  expect(test.screen29.line_title, "");
  expect(test.screen29.line_title_ex, "");
  expect(test.screen29.line1, "");
  expect(test.screen29.line2, "");
  expect(test.screen29.line3, "");
  expect(test.screen29.line4, "");
  expect(test.screen29.line1_ex, "");
  expect(test.screen29.line2_ex, "");
  expect(test.screen29.line3_ex, "");
  expect(test.screen29.line4_ex, "");
  expect(test.screen29.sound_led1, 0);
  expect(test.screen29.sound_led2, 0);
  expect(test.screen29.sound_led3, 0);
  expect(test.screen30.title, "");
  expect(test.screen30.msg1, "");
  expect(test.screen30.msg2, "");
  expect(test.screen30.msg1_size, 0);
  expect(test.screen30.msg2_size, 0);
  expect(test.screen30.sound1, 0);
  expect(test.screen30.sound2, 0);
  expect(test.screen30.sound3, 0);
  expect(test.screen30.snd_timer, 0);
  expect(test.screen30.timer1, 0);
  expect(test.screen30.timer2, 0);
  expect(test.screen30.timer3, 0);
  expect(test.screen30.dsp_flg1, 0);
  expect(test.screen30.dsp_flg2, 0);
  expect(test.screen30.movie01_ext, 0);
  expect(test.screen30.movie02_ext, 0);
  expect(test.screen30.movie03_ext, 0);
  expect(test.screen30.movie04_ext, 0);
  expect(test.screen30.line_title, "");
  expect(test.screen30.line_title_ex, "");
  expect(test.screen30.line1, "");
  expect(test.screen30.line2, "");
  expect(test.screen30.line3, "");
  expect(test.screen30.line4, "");
  expect(test.screen30.line1_ex, "");
  expect(test.screen30.line2_ex, "");
  expect(test.screen30.line3_ex, "");
  expect(test.screen30.line4_ex, "");
  expect(test.screen30.sound_led1, 0);
  expect(test.screen30.sound_led2, 0);
  expect(test.screen30.sound_led3, 0);
  expect(test.screen31.title, "");
  expect(test.screen31.msg1, "");
  expect(test.screen31.msg2, "");
  expect(test.screen31.msg1_size, 0);
  expect(test.screen31.msg2_size, 0);
  expect(test.screen31.sound1, 0);
  expect(test.screen31.sound2, 0);
  expect(test.screen31.sound3, 0);
  expect(test.screen31.snd_timer, 0);
  expect(test.screen31.timer1, 0);
  expect(test.screen31.timer2, 0);
  expect(test.screen31.timer3, 0);
  expect(test.screen31.dsp_flg1, 0);
  expect(test.screen31.dsp_flg2, 0);
  expect(test.screen31.movie01_ext, 0);
  expect(test.screen31.movie02_ext, 0);
  expect(test.screen31.movie03_ext, 0);
  expect(test.screen31.movie04_ext, 0);
  expect(test.screen31.line_title, "");
  expect(test.screen31.line_title_ex, "");
  expect(test.screen31.line1, "");
  expect(test.screen31.line2, "");
  expect(test.screen31.line3, "");
  expect(test.screen31.line4, "");
  expect(test.screen31.line1_ex, "");
  expect(test.screen31.line2_ex, "");
  expect(test.screen31.line3_ex, "");
  expect(test.screen31.line4_ex, "");
  expect(test.screen31.sound_led1, 0);
  expect(test.screen31.sound_led2, 0);
  expect(test.screen31.sound_led3, 0);
  expect(test.screen32.title, "");
  expect(test.screen32.msg1, "");
  expect(test.screen32.msg2, "");
  expect(test.screen32.msg1_size, 0);
  expect(test.screen32.msg2_size, 0);
  expect(test.screen32.sound1, 0);
  expect(test.screen32.sound2, 0);
  expect(test.screen32.sound3, 0);
  expect(test.screen32.snd_timer, 0);
  expect(test.screen32.timer1, 0);
  expect(test.screen32.timer2, 0);
  expect(test.screen32.timer3, 0);
  expect(test.screen32.dsp_flg1, 0);
  expect(test.screen32.dsp_flg2, 0);
  expect(test.screen32.movie01_ext, 0);
  expect(test.screen32.movie02_ext, 0);
  expect(test.screen32.movie03_ext, 0);
  expect(test.screen32.movie04_ext, 0);
  expect(test.screen32.line_title, "");
  expect(test.screen32.line_title_ex, "");
  expect(test.screen32.line1, "");
  expect(test.screen32.line2, "");
  expect(test.screen32.line3, "");
  expect(test.screen32.line4, "");
  expect(test.screen32.line1_ex, "");
  expect(test.screen32.line2_ex, "");
  expect(test.screen32.line3_ex, "");
  expect(test.screen32.line4_ex, "");
  expect(test.screen32.sound_led1, 0);
  expect(test.screen32.sound_led2, 0);
  expect(test.screen32.sound_led3, 0);
  expect(test.screen33.title, "");
  expect(test.screen33.msg1, "");
  expect(test.screen33.msg2, "");
  expect(test.screen33.msg1_size, 0);
  expect(test.screen33.msg2_size, 0);
  expect(test.screen33.sound1, 0);
  expect(test.screen33.sound2, 0);
  expect(test.screen33.sound3, 0);
  expect(test.screen33.snd_timer, 0);
  expect(test.screen33.timer1, 0);
  expect(test.screen33.timer2, 0);
  expect(test.screen33.timer3, 0);
  expect(test.screen33.dsp_flg1, 0);
  expect(test.screen33.dsp_flg2, 0);
  expect(test.screen33.movie01_ext, 0);
  expect(test.screen33.movie02_ext, 0);
  expect(test.screen33.movie03_ext, 0);
  expect(test.screen33.movie04_ext, 0);
  expect(test.screen33.line_title, "");
  expect(test.screen33.line_title_ex, "");
  expect(test.screen33.line1, "");
  expect(test.screen33.line2, "");
  expect(test.screen33.line3, "");
  expect(test.screen33.line4, "");
  expect(test.screen33.line1_ex, "");
  expect(test.screen33.line2_ex, "");
  expect(test.screen33.line3_ex, "");
  expect(test.screen33.line4_ex, "");
  expect(test.screen33.sound_led1, 0);
  expect(test.screen33.sound_led2, 0);
  expect(test.screen33.sound_led3, 0);
  expect(test.screen34.title, "");
  expect(test.screen34.msg1, "");
  expect(test.screen34.msg2, "");
  expect(test.screen34.msg1_size, 0);
  expect(test.screen34.msg2_size, 0);
  expect(test.screen34.sound1, 0);
  expect(test.screen34.sound2, 0);
  expect(test.screen34.sound3, 0);
  expect(test.screen34.snd_timer, 0);
  expect(test.screen34.timer1, 0);
  expect(test.screen34.timer2, 0);
  expect(test.screen34.timer3, 0);
  expect(test.screen34.dsp_flg1, 0);
  expect(test.screen34.dsp_flg2, 0);
  expect(test.screen34.movie01_ext, 0);
  expect(test.screen34.movie02_ext, 0);
  expect(test.screen34.movie03_ext, 0);
  expect(test.screen34.movie04_ext, 0);
  expect(test.screen34.line_title, "");
  expect(test.screen34.line_title_ex, "");
  expect(test.screen34.line1, "");
  expect(test.screen34.line2, "");
  expect(test.screen34.line3, "");
  expect(test.screen34.line4, "");
  expect(test.screen34.line1_ex, "");
  expect(test.screen34.line2_ex, "");
  expect(test.screen34.line3_ex, "");
  expect(test.screen34.line4_ex, "");
  expect(test.screen34.sound_led1, 0);
  expect(test.screen34.sound_led2, 0);
  expect(test.screen34.sound_led3, 0);
  expect(test.screen35.title, "");
  expect(test.screen35.msg1, "");
  expect(test.screen35.msg2, "");
  expect(test.screen35.msg1_size, 0);
  expect(test.screen35.msg2_size, 0);
  expect(test.screen35.sound1, 0);
  expect(test.screen35.sound2, 0);
  expect(test.screen35.sound3, 0);
  expect(test.screen35.snd_timer, 0);
  expect(test.screen35.timer1, 0);
  expect(test.screen35.timer2, 0);
  expect(test.screen35.timer3, 0);
  expect(test.screen35.dsp_flg1, 0);
  expect(test.screen35.dsp_flg2, 0);
  expect(test.screen35.movie01_ext, 0);
  expect(test.screen35.movie02_ext, 0);
  expect(test.screen35.movie03_ext, 0);
  expect(test.screen35.movie04_ext, 0);
  expect(test.screen35.line_title, "");
  expect(test.screen35.line_title_ex, "");
  expect(test.screen35.line1, "");
  expect(test.screen35.line2, "");
  expect(test.screen35.line3, "");
  expect(test.screen35.line4, "");
  expect(test.screen35.line1_ex, "");
  expect(test.screen35.line2_ex, "");
  expect(test.screen35.line3_ex, "");
  expect(test.screen35.line4_ex, "");
  expect(test.screen35.sound_led1, 0);
  expect(test.screen35.sound_led2, 0);
  expect(test.screen35.sound_led3, 0);
  expect(test.screen36.title, "");
  expect(test.screen36.msg1, "");
  expect(test.screen36.msg2, "");
  expect(test.screen36.msg1_size, 0);
  expect(test.screen36.msg2_size, 0);
  expect(test.screen36.sound1, 0);
  expect(test.screen36.sound2, 0);
  expect(test.screen36.sound3, 0);
  expect(test.screen36.snd_timer, 0);
  expect(test.screen36.timer1, 0);
  expect(test.screen36.timer2, 0);
  expect(test.screen36.timer3, 0);
  expect(test.screen36.dsp_flg1, 0);
  expect(test.screen36.dsp_flg2, 0);
  expect(test.screen36.movie01_ext, 0);
  expect(test.screen36.movie02_ext, 0);
  expect(test.screen36.movie03_ext, 0);
  expect(test.screen36.movie04_ext, 0);
  expect(test.screen36.line_title, "");
  expect(test.screen36.line_title_ex, "");
  expect(test.screen36.line1, "");
  expect(test.screen36.line2, "");
  expect(test.screen36.line3, "");
  expect(test.screen36.line4, "");
  expect(test.screen36.line1_ex, "");
  expect(test.screen36.line2_ex, "");
  expect(test.screen36.line3_ex, "");
  expect(test.screen36.line4_ex, "");
  expect(test.screen36.sound_led1, 0);
  expect(test.screen36.sound_led2, 0);
  expect(test.screen36.sound_led3, 0);
  expect(test.screen37.title, "");
  expect(test.screen37.msg1, "");
  expect(test.screen37.msg2, "");
  expect(test.screen37.msg1_size, 0);
  expect(test.screen37.msg2_size, 0);
  expect(test.screen37.sound1, 0);
  expect(test.screen37.sound2, 0);
  expect(test.screen37.sound3, 0);
  expect(test.screen37.snd_timer, 0);
  expect(test.screen37.timer1, 0);
  expect(test.screen37.timer2, 0);
  expect(test.screen37.timer3, 0);
  expect(test.screen37.dsp_flg1, 0);
  expect(test.screen37.dsp_flg2, 0);
  expect(test.screen37.movie01_ext, 0);
  expect(test.screen37.movie02_ext, 0);
  expect(test.screen37.movie03_ext, 0);
  expect(test.screen37.movie04_ext, 0);
  expect(test.screen37.line_title, "");
  expect(test.screen37.line_title_ex, "");
  expect(test.screen37.line1, "");
  expect(test.screen37.line2, "");
  expect(test.screen37.line3, "");
  expect(test.screen37.line4, "");
  expect(test.screen37.line1_ex, "");
  expect(test.screen37.line2_ex, "");
  expect(test.screen37.line3_ex, "");
  expect(test.screen37.line4_ex, "");
  expect(test.screen37.sound_led1, 0);
  expect(test.screen37.sound_led2, 0);
  expect(test.screen37.sound_led3, 0);
  expect(test.screen38.title, "");
  expect(test.screen38.msg1, "");
  expect(test.screen38.msg2, "");
  expect(test.screen38.msg1_size, 0);
  expect(test.screen38.msg2_size, 0);
  expect(test.screen38.sound1, 0);
  expect(test.screen38.sound2, 0);
  expect(test.screen38.sound3, 0);
  expect(test.screen38.snd_timer, 0);
  expect(test.screen38.timer1, 0);
  expect(test.screen38.timer2, 0);
  expect(test.screen38.timer3, 0);
  expect(test.screen38.dsp_flg1, 0);
  expect(test.screen38.dsp_flg2, 0);
  expect(test.screen38.movie01_ext, 0);
  expect(test.screen38.movie02_ext, 0);
  expect(test.screen38.movie03_ext, 0);
  expect(test.screen38.movie04_ext, 0);
  expect(test.screen38.line_title, "");
  expect(test.screen38.line_title_ex, "");
  expect(test.screen38.line1, "");
  expect(test.screen38.line2, "");
  expect(test.screen38.line3, "");
  expect(test.screen38.line4, "");
  expect(test.screen38.line1_ex, "");
  expect(test.screen38.line2_ex, "");
  expect(test.screen38.line3_ex, "");
  expect(test.screen38.line4_ex, "");
  expect(test.screen38.sound_led1, 0);
  expect(test.screen38.sound_led2, 0);
  expect(test.screen38.sound_led3, 0);
  expect(test.screen39.title, "");
  expect(test.screen39.msg1, "");
  expect(test.screen39.msg2, "");
  expect(test.screen39.msg1_size, 0);
  expect(test.screen39.msg2_size, 0);
  expect(test.screen39.sound1, 0);
  expect(test.screen39.sound2, 0);
  expect(test.screen39.sound3, 0);
  expect(test.screen39.snd_timer, 0);
  expect(test.screen39.timer1, 0);
  expect(test.screen39.timer2, 0);
  expect(test.screen39.timer3, 0);
  expect(test.screen39.dsp_flg1, 0);
  expect(test.screen39.dsp_flg2, 0);
  expect(test.screen39.movie01_ext, 0);
  expect(test.screen39.movie02_ext, 0);
  expect(test.screen39.movie03_ext, 0);
  expect(test.screen39.movie04_ext, 0);
  expect(test.screen39.line_title, "");
  expect(test.screen39.line_title_ex, "");
  expect(test.screen39.line1, "");
  expect(test.screen39.line2, "");
  expect(test.screen39.line3, "");
  expect(test.screen39.line4, "");
  expect(test.screen39.line1_ex, "");
  expect(test.screen39.line2_ex, "");
  expect(test.screen39.line3_ex, "");
  expect(test.screen39.line4_ex, "");
  expect(test.screen39.sound_led1, 0);
  expect(test.screen39.sound_led2, 0);
  expect(test.screen39.sound_led3, 0);
  expect(test.screen40.title, "");
  expect(test.screen40.msg1, "");
  expect(test.screen40.msg2, "");
  expect(test.screen40.msg1_size, 0);
  expect(test.screen40.msg2_size, 0);
  expect(test.screen40.sound1, 0);
  expect(test.screen40.sound2, 0);
  expect(test.screen40.sound3, 0);
  expect(test.screen40.snd_timer, 0);
  expect(test.screen40.timer1, 0);
  expect(test.screen40.timer2, 0);
  expect(test.screen40.timer3, 0);
  expect(test.screen40.dsp_flg1, 0);
  expect(test.screen40.dsp_flg2, 0);
  expect(test.screen40.movie01_ext, 0);
  expect(test.screen40.movie02_ext, 0);
  expect(test.screen40.movie03_ext, 0);
  expect(test.screen40.movie04_ext, 0);
  expect(test.screen40.line_title, "");
  expect(test.screen40.line_title_ex, "");
  expect(test.screen40.line1, "");
  expect(test.screen40.line2, "");
  expect(test.screen40.line3, "");
  expect(test.screen40.line4, "");
  expect(test.screen40.line1_ex, "");
  expect(test.screen40.line2_ex, "");
  expect(test.screen40.line3_ex, "");
  expect(test.screen40.line4_ex, "");
  expect(test.screen40.sound_led1, 0);
  expect(test.screen40.sound_led2, 0);
  expect(test.screen40.sound_led3, 0);
  expect(test.screen41.title, "");
  expect(test.screen41.msg1, "");
  expect(test.screen41.msg2, "");
  expect(test.screen41.msg1_size, 0);
  expect(test.screen41.msg2_size, 0);
  expect(test.screen41.sound1, 0);
  expect(test.screen41.sound2, 0);
  expect(test.screen41.sound3, 0);
  expect(test.screen41.snd_timer, 0);
  expect(test.screen41.timer1, 0);
  expect(test.screen41.timer2, 0);
  expect(test.screen41.timer3, 0);
  expect(test.screen41.dsp_flg1, 0);
  expect(test.screen41.dsp_flg2, 0);
  expect(test.screen41.movie01_ext, 0);
  expect(test.screen41.movie02_ext, 0);
  expect(test.screen41.movie03_ext, 0);
  expect(test.screen41.movie04_ext, 0);
  expect(test.screen41.line_title, "");
  expect(test.screen41.line_title_ex, "");
  expect(test.screen41.line1, "");
  expect(test.screen41.line2, "");
  expect(test.screen41.line3, "");
  expect(test.screen41.line4, "");
  expect(test.screen41.line1_ex, "");
  expect(test.screen41.line2_ex, "");
  expect(test.screen41.line3_ex, "");
  expect(test.screen41.line4_ex, "");
  expect(test.screen41.sound_led1, 0);
  expect(test.screen41.sound_led2, 0);
  expect(test.screen41.sound_led3, 0);
  expect(test.screen42.title, "");
  expect(test.screen42.msg1, "");
  expect(test.screen42.msg2, "");
  expect(test.screen42.msg1_size, 0);
  expect(test.screen42.msg2_size, 0);
  expect(test.screen42.sound1, 0);
  expect(test.screen42.sound2, 0);
  expect(test.screen42.sound3, 0);
  expect(test.screen42.snd_timer, 0);
  expect(test.screen42.timer1, 0);
  expect(test.screen42.timer2, 0);
  expect(test.screen42.timer3, 0);
  expect(test.screen42.dsp_flg1, 0);
  expect(test.screen42.dsp_flg2, 0);
  expect(test.screen42.movie01_ext, 0);
  expect(test.screen42.movie02_ext, 0);
  expect(test.screen42.movie03_ext, 0);
  expect(test.screen42.movie04_ext, 0);
  expect(test.screen42.line_title, "");
  expect(test.screen42.line_title_ex, "");
  expect(test.screen42.line1, "");
  expect(test.screen42.line2, "");
  expect(test.screen42.line3, "");
  expect(test.screen42.line4, "");
  expect(test.screen42.line1_ex, "");
  expect(test.screen42.line2_ex, "");
  expect(test.screen42.line3_ex, "");
  expect(test.screen42.line4_ex, "");
  expect(test.screen42.sound_led1, 0);
  expect(test.screen42.sound_led2, 0);
  expect(test.screen42.sound_led3, 0);
  expect(test.screen43.title, "");
  expect(test.screen43.msg1, "");
  expect(test.screen43.msg2, "");
  expect(test.screen43.msg1_size, 0);
  expect(test.screen43.msg2_size, 0);
  expect(test.screen43.sound1, 0);
  expect(test.screen43.sound2, 0);
  expect(test.screen43.sound3, 0);
  expect(test.screen43.snd_timer, 0);
  expect(test.screen43.timer1, 0);
  expect(test.screen43.timer2, 0);
  expect(test.screen43.timer3, 0);
  expect(test.screen43.dsp_flg1, 0);
  expect(test.screen43.dsp_flg2, 0);
  expect(test.screen43.movie01_ext, 0);
  expect(test.screen43.movie02_ext, 0);
  expect(test.screen43.movie03_ext, 0);
  expect(test.screen43.movie04_ext, 0);
  expect(test.screen43.line_title, "");
  expect(test.screen43.line_title_ex, "");
  expect(test.screen43.line1, "");
  expect(test.screen43.line2, "");
  expect(test.screen43.line3, "");
  expect(test.screen43.line4, "");
  expect(test.screen43.line1_ex, "");
  expect(test.screen43.line2_ex, "");
  expect(test.screen43.line3_ex, "");
  expect(test.screen43.line4_ex, "");
  expect(test.screen43.sound_led1, 0);
  expect(test.screen43.sound_led2, 0);
  expect(test.screen43.sound_led3, 0);
  expect(test.screen44.title, "");
  expect(test.screen44.msg1, "");
  expect(test.screen44.msg2, "");
  expect(test.screen44.msg1_size, 0);
  expect(test.screen44.msg2_size, 0);
  expect(test.screen44.sound1, 0);
  expect(test.screen44.sound2, 0);
  expect(test.screen44.sound3, 0);
  expect(test.screen44.snd_timer, 0);
  expect(test.screen44.timer1, 0);
  expect(test.screen44.timer2, 0);
  expect(test.screen44.timer3, 0);
  expect(test.screen44.dsp_flg1, 0);
  expect(test.screen44.dsp_flg2, 0);
  expect(test.screen44.movie01_ext, 0);
  expect(test.screen44.movie02_ext, 0);
  expect(test.screen44.movie03_ext, 0);
  expect(test.screen44.movie04_ext, 0);
  expect(test.screen44.line_title, "");
  expect(test.screen44.line_title_ex, "");
  expect(test.screen44.line1, "");
  expect(test.screen44.line2, "");
  expect(test.screen44.line3, "");
  expect(test.screen44.line4, "");
  expect(test.screen44.line1_ex, "");
  expect(test.screen44.line2_ex, "");
  expect(test.screen44.line3_ex, "");
  expect(test.screen44.line4_ex, "");
  expect(test.screen44.sound_led1, 0);
  expect(test.screen44.sound_led2, 0);
  expect(test.screen44.sound_led3, 0);
  expect(test.screen45.title, "");
  expect(test.screen45.msg1, "");
  expect(test.screen45.msg2, "");
  expect(test.screen45.msg1_size, 0);
  expect(test.screen45.msg2_size, 0);
  expect(test.screen45.sound1, 0);
  expect(test.screen45.sound2, 0);
  expect(test.screen45.sound3, 0);
  expect(test.screen45.snd_timer, 0);
  expect(test.screen45.timer1, 0);
  expect(test.screen45.timer2, 0);
  expect(test.screen45.timer3, 0);
  expect(test.screen45.dsp_flg1, 0);
  expect(test.screen45.dsp_flg2, 0);
  expect(test.screen45.movie01_ext, 0);
  expect(test.screen45.movie02_ext, 0);
  expect(test.screen45.movie03_ext, 0);
  expect(test.screen45.movie04_ext, 0);
  expect(test.screen45.line_title, "");
  expect(test.screen45.line_title_ex, "");
  expect(test.screen45.line1, "");
  expect(test.screen45.line2, "");
  expect(test.screen45.line3, "");
  expect(test.screen45.line4, "");
  expect(test.screen45.line1_ex, "");
  expect(test.screen45.line2_ex, "");
  expect(test.screen45.line3_ex, "");
  expect(test.screen45.line4_ex, "");
  expect(test.screen45.sound_led1, 0);
  expect(test.screen45.sound_led2, 0);
  expect(test.screen45.sound_led3, 0);
  expect(test.screen46.title, "");
  expect(test.screen46.msg1, "");
  expect(test.screen46.msg2, "");
  expect(test.screen46.msg1_size, 0);
  expect(test.screen46.msg2_size, 0);
  expect(test.screen46.sound1, 0);
  expect(test.screen46.sound2, 0);
  expect(test.screen46.sound3, 0);
  expect(test.screen46.snd_timer, 0);
  expect(test.screen46.timer1, 0);
  expect(test.screen46.timer2, 0);
  expect(test.screen46.timer3, 0);
  expect(test.screen46.dsp_flg1, 0);
  expect(test.screen46.dsp_flg2, 0);
  expect(test.screen46.movie01_ext, 0);
  expect(test.screen46.movie02_ext, 0);
  expect(test.screen46.movie03_ext, 0);
  expect(test.screen46.movie04_ext, 0);
  expect(test.screen46.line_title, "");
  expect(test.screen46.line_title_ex, "");
  expect(test.screen46.line1, "");
  expect(test.screen46.line2, "");
  expect(test.screen46.line3, "");
  expect(test.screen46.line4, "");
  expect(test.screen46.line1_ex, "");
  expect(test.screen46.line2_ex, "");
  expect(test.screen46.line3_ex, "");
  expect(test.screen46.line4_ex, "");
  expect(test.screen46.sound_led1, 0);
  expect(test.screen46.sound_led2, 0);
  expect(test.screen46.sound_led3, 0);
  expect(test.screen47.title, "");
  expect(test.screen47.msg1, "");
  expect(test.screen47.msg2, "");
  expect(test.screen47.msg1_size, 0);
  expect(test.screen47.msg2_size, 0);
  expect(test.screen47.sound1, 0);
  expect(test.screen47.sound2, 0);
  expect(test.screen47.sound3, 0);
  expect(test.screen47.snd_timer, 0);
  expect(test.screen47.timer1, 0);
  expect(test.screen47.timer2, 0);
  expect(test.screen47.timer3, 0);
  expect(test.screen47.dsp_flg1, 0);
  expect(test.screen47.dsp_flg2, 0);
  expect(test.screen47.movie01_ext, 0);
  expect(test.screen47.movie02_ext, 0);
  expect(test.screen47.movie03_ext, 0);
  expect(test.screen47.movie04_ext, 0);
  expect(test.screen47.line_title, "");
  expect(test.screen47.line_title_ex, "");
  expect(test.screen47.line1, "");
  expect(test.screen47.line2, "");
  expect(test.screen47.line3, "");
  expect(test.screen47.line4, "");
  expect(test.screen47.line1_ex, "");
  expect(test.screen47.line2_ex, "");
  expect(test.screen47.line3_ex, "");
  expect(test.screen47.line4_ex, "");
  expect(test.screen47.sound_led1, 0);
  expect(test.screen47.sound_led2, 0);
  expect(test.screen47.sound_led3, 0);
  expect(test.screen48.title, "");
  expect(test.screen48.msg1, "");
  expect(test.screen48.msg2, "");
  expect(test.screen48.msg1_size, 0);
  expect(test.screen48.msg2_size, 0);
  expect(test.screen48.sound1, 0);
  expect(test.screen48.sound2, 0);
  expect(test.screen48.sound3, 0);
  expect(test.screen48.snd_timer, 0);
  expect(test.screen48.timer1, 0);
  expect(test.screen48.timer2, 0);
  expect(test.screen48.timer3, 0);
  expect(test.screen48.dsp_flg1, 0);
  expect(test.screen48.dsp_flg2, 0);
  expect(test.screen48.movie01_ext, 0);
  expect(test.screen48.movie02_ext, 0);
  expect(test.screen48.movie03_ext, 0);
  expect(test.screen48.movie04_ext, 0);
  expect(test.screen48.line_title, "");
  expect(test.screen48.line_title_ex, "");
  expect(test.screen48.line1, "");
  expect(test.screen48.line2, "");
  expect(test.screen48.line3, "");
  expect(test.screen48.line4, "");
  expect(test.screen48.line1_ex, "");
  expect(test.screen48.line2_ex, "");
  expect(test.screen48.line3_ex, "");
  expect(test.screen48.line4_ex, "");
  expect(test.screen48.sound_led1, 0);
  expect(test.screen48.sound_led2, 0);
  expect(test.screen48.sound_led3, 0);
  expect(test.screen49.title, "");
  expect(test.screen49.msg1, "");
  expect(test.screen49.msg2, "");
  expect(test.screen49.msg1_size, 0);
  expect(test.screen49.msg2_size, 0);
  expect(test.screen49.sound1, 0);
  expect(test.screen49.sound2, 0);
  expect(test.screen49.sound3, 0);
  expect(test.screen49.snd_timer, 0);
  expect(test.screen49.timer1, 0);
  expect(test.screen49.timer2, 0);
  expect(test.screen49.timer3, 0);
  expect(test.screen49.dsp_flg1, 0);
  expect(test.screen49.dsp_flg2, 0);
  expect(test.screen49.movie01_ext, 0);
  expect(test.screen49.movie02_ext, 0);
  expect(test.screen49.movie03_ext, 0);
  expect(test.screen49.movie04_ext, 0);
  expect(test.screen49.line_title, "");
  expect(test.screen49.line_title_ex, "");
  expect(test.screen49.line1, "");
  expect(test.screen49.line2, "");
  expect(test.screen49.line3, "");
  expect(test.screen49.line4, "");
  expect(test.screen49.line1_ex, "");
  expect(test.screen49.line2_ex, "");
  expect(test.screen49.line3_ex, "");
  expect(test.screen49.line4_ex, "");
  expect(test.screen49.sound_led1, 0);
  expect(test.screen49.sound_led2, 0);
  expect(test.screen49.sound_led3, 0);
  expect(test.screen50.title, "");
  expect(test.screen50.msg1, "");
  expect(test.screen50.msg2, "");
  expect(test.screen50.msg1_size, 0);
  expect(test.screen50.msg2_size, 0);
  expect(test.screen50.sound1, 0);
  expect(test.screen50.sound2, 0);
  expect(test.screen50.sound3, 0);
  expect(test.screen50.snd_timer, 0);
  expect(test.screen50.timer1, 0);
  expect(test.screen50.timer2, 0);
  expect(test.screen50.timer3, 0);
  expect(test.screen50.dsp_flg1, 0);
  expect(test.screen50.dsp_flg2, 0);
  expect(test.screen50.movie01_ext, 0);
  expect(test.screen50.movie02_ext, 0);
  expect(test.screen50.movie03_ext, 0);
  expect(test.screen50.movie04_ext, 0);
  expect(test.screen50.line_title, "");
  expect(test.screen50.line_title_ex, "");
  expect(test.screen50.line1, "");
  expect(test.screen50.line2, "");
  expect(test.screen50.line3, "");
  expect(test.screen50.line4, "");
  expect(test.screen50.line1_ex, "");
  expect(test.screen50.line2_ex, "");
  expect(test.screen50.line3_ex, "");
  expect(test.screen50.line4_ex, "");
  expect(test.screen50.sound_led1, 0);
  expect(test.screen50.sound_led2, 0);
  expect(test.screen50.sound_led3, 0);
  expect(test.screen51.title, "");
  expect(test.screen51.msg1, "");
  expect(test.screen51.msg2, "");
  expect(test.screen51.msg1_size, 0);
  expect(test.screen51.msg2_size, 0);
  expect(test.screen51.sound1, 0);
  expect(test.screen51.sound2, 0);
  expect(test.screen51.sound3, "");
  expect(test.screen51.snd_timer, 0);
  expect(test.screen51.timer1, 0);
  expect(test.screen51.timer2, 0);
  expect(test.screen51.timer3, 0);
  expect(test.screen51.dsp_flg1, 0);
  expect(test.screen51.dsp_flg2, 0);
  expect(test.screen51.movie01_ext, 0);
  expect(test.screen51.movie02_ext, 0);
  expect(test.screen51.movie03_ext, 0);
  expect(test.screen51.movie04_ext, 0);
  expect(test.screen51.line_title, "");
  expect(test.screen51.line_title_ex, "");
  expect(test.screen51.line1, "");
  expect(test.screen51.line2, "");
  expect(test.screen51.line3, "");
  expect(test.screen51.line4, "");
  expect(test.screen51.line1_ex, "");
  expect(test.screen51.line2_ex, "");
  expect(test.screen51.line3_ex, "");
  expect(test.screen51.line4_ex, "");
  expect(test.screen51.sound_led1, 0);
  expect(test.screen51.sound_led2, 0);
  expect(test.screen51.sound_led3, "");
  expect(test.screen52.title, "");
  expect(test.screen52.msg1, "");
  expect(test.screen52.msg2, "");
  expect(test.screen52.msg1_size, 0);
  expect(test.screen52.msg2_size, 0);
  expect(test.screen52.sound1, 0);
  expect(test.screen52.sound2, 0);
  expect(test.screen52.sound3, 0);
  expect(test.screen52.snd_timer, 0);
  expect(test.screen52.timer1, 0);
  expect(test.screen52.timer2, 0);
  expect(test.screen52.timer3, 0);
  expect(test.screen52.dsp_flg1, 0);
  expect(test.screen52.dsp_flg2, 0);
  expect(test.screen52.movie01_ext, 0);
  expect(test.screen52.movie02_ext, 0);
  expect(test.screen52.movie03_ext, 0);
  expect(test.screen52.movie04_ext, 0);
  expect(test.screen52.line_title, "");
  expect(test.screen52.line_title_ex, "");
  expect(test.screen52.line1, "");
  expect(test.screen52.line2, "");
  expect(test.screen52.line3, "");
  expect(test.screen52.line4, "");
  expect(test.screen52.line1_ex, "");
  expect(test.screen52.line2_ex, "");
  expect(test.screen52.line3_ex, "");
  expect(test.screen52.line4_ex, "");
  expect(test.screen52.sound_led1, 0);
  expect(test.screen52.sound_led2, 0);
  expect(test.screen52.sound_led3, 0);
  expect(test.screen53.title, "");
  expect(test.screen53.msg1, "");
  expect(test.screen53.msg2, "");
  expect(test.screen53.msg1_size, 0);
  expect(test.screen53.msg2_size, 0);
  expect(test.screen53.sound1, 0);
  expect(test.screen53.sound2, 0);
  expect(test.screen53.sound3, 0);
  expect(test.screen53.snd_timer, 0);
  expect(test.screen53.timer1, 0);
  expect(test.screen53.timer2, 0);
  expect(test.screen53.timer3, 0);
  expect(test.screen53.dsp_flg1, 0);
  expect(test.screen53.dsp_flg2, 0);
  expect(test.screen53.movie01_ext, 0);
  expect(test.screen53.movie02_ext, 0);
  expect(test.screen53.movie03_ext, 0);
  expect(test.screen53.movie04_ext, 0);
  expect(test.screen53.line_title, "");
  expect(test.screen53.line_title_ex, "");
  expect(test.screen53.line1, "");
  expect(test.screen53.line2, "");
  expect(test.screen53.line3, "");
  expect(test.screen53.line4, "");
  expect(test.screen53.line1_ex, "");
  expect(test.screen53.line2_ex, "");
  expect(test.screen53.line3_ex, "");
  expect(test.screen53.line4_ex, "");
  expect(test.screen53.sound_led1, 0);
  expect(test.screen53.sound_led2, 0);
  expect(test.screen53.sound_led3, 0);
  expect(test.screen54.title, "");
  expect(test.screen54.msg1, "");
  expect(test.screen54.msg2, "");
  expect(test.screen54.msg1_size, 0);
  expect(test.screen54.msg2_size, 0);
  expect(test.screen54.sound1, 0);
  expect(test.screen54.sound2, 0);
  expect(test.screen54.sound3, "");
  expect(test.screen54.snd_timer, 0);
  expect(test.screen54.timer1, 0);
  expect(test.screen54.timer2, 0);
  expect(test.screen54.timer3, 0);
  expect(test.screen54.dsp_flg1, 0);
  expect(test.screen54.dsp_flg2, 0);
  expect(test.screen54.movie01_ext, 0);
  expect(test.screen54.movie02_ext, 0);
  expect(test.screen54.movie03_ext, 0);
  expect(test.screen54.movie04_ext, 0);
  expect(test.screen54.line_title, "");
  expect(test.screen54.line_title_ex, "");
  expect(test.screen54.line1, "");
  expect(test.screen54.line2, "");
  expect(test.screen54.line3, "");
  expect(test.screen54.line4, "");
  expect(test.screen54.line1_ex, "");
  expect(test.screen54.line2_ex, "");
  expect(test.screen54.line3_ex, "");
  expect(test.screen54.line4_ex, "");
  expect(test.screen54.sound_led1, 0);
  expect(test.screen54.sound_led2, 0);
  expect(test.screen54.sound_led3, "");
  expect(test.screen55.title, "");
  expect(test.screen55.msg1, "");
  expect(test.screen55.msg2, "");
  expect(test.screen55.msg1_size, 0);
  expect(test.screen55.msg2_size, 0);
  expect(test.screen55.sound1, 0);
  expect(test.screen55.sound2, 0);
  expect(test.screen55.sound3, 0);
  expect(test.screen55.snd_timer, 0);
  expect(test.screen55.timer1, 0);
  expect(test.screen55.timer2, 0);
  expect(test.screen55.timer3, 0);
  expect(test.screen55.dsp_flg1, 0);
  expect(test.screen55.dsp_flg2, 0);
  expect(test.screen55.movie01_ext, 0);
  expect(test.screen55.movie02_ext, 0);
  expect(test.screen55.movie03_ext, 0);
  expect(test.screen55.movie04_ext, 0);
  expect(test.screen55.line_title, "");
  expect(test.screen55.line_title_ex, "");
  expect(test.screen55.line1, "");
  expect(test.screen55.line2, "");
  expect(test.screen55.line3, "");
  expect(test.screen55.line4, "");
  expect(test.screen55.line1_ex, "");
  expect(test.screen55.line2_ex, "");
  expect(test.screen55.line3_ex, "");
  expect(test.screen55.line4_ex, "");
  expect(test.screen55.sound_led1, 0);
  expect(test.screen55.sound_led2, 0);
  expect(test.screen55.sound_led3, 0);
  expect(test.screen56.title, "");
  expect(test.screen56.msg1, "");
  expect(test.screen56.msg2, "");
  expect(test.screen56.msg1_size, 0);
  expect(test.screen56.msg2_size, 0);
  expect(test.screen56.sound1, 0);
  expect(test.screen56.sound2, 0);
  expect(test.screen56.sound3, 0);
  expect(test.screen56.snd_timer, 0);
  expect(test.screen56.timer1, 0);
  expect(test.screen56.timer2, 0);
  expect(test.screen56.timer3, 0);
  expect(test.screen56.dsp_flg1, 0);
  expect(test.screen56.dsp_flg2, 0);
  expect(test.screen56.movie01_ext, 0);
  expect(test.screen56.movie02_ext, 0);
  expect(test.screen56.movie03_ext, 0);
  expect(test.screen56.movie04_ext, 0);
  expect(test.screen56.line_title, "");
  expect(test.screen56.line_title_ex, "");
  expect(test.screen56.line1, "");
  expect(test.screen56.line2, "");
  expect(test.screen56.line3, "");
  expect(test.screen56.line4, "");
  expect(test.screen56.line1_ex, "");
  expect(test.screen56.line2_ex, "");
  expect(test.screen56.line3_ex, "");
  expect(test.screen56.line4_ex, "");
  expect(test.screen56.sound_led1, 0);
  expect(test.screen56.sound_led2, 0);
  expect(test.screen56.sound_led3, 0);
  expect(test.screen57.title, "");
  expect(test.screen57.msg1, "");
  expect(test.screen57.msg2, "");
  expect(test.screen57.msg1_size, 0);
  expect(test.screen57.msg2_size, 0);
  expect(test.screen57.sound1, 0);
  expect(test.screen57.sound2, 0);
  expect(test.screen57.sound3, "");
  expect(test.screen57.snd_timer, 0);
  expect(test.screen57.timer1, 0);
  expect(test.screen57.timer2, 0);
  expect(test.screen57.timer3, 0);
  expect(test.screen57.dsp_flg1, 0);
  expect(test.screen57.dsp_flg2, 0);
  expect(test.screen57.movie01_ext, 0);
  expect(test.screen57.movie02_ext, 0);
  expect(test.screen57.movie03_ext, 0);
  expect(test.screen57.movie04_ext, 0);
  expect(test.screen57.line_title, "");
  expect(test.screen57.line_title_ex, "");
  expect(test.screen57.line1, "");
  expect(test.screen57.line2, "");
  expect(test.screen57.line3, "");
  expect(test.screen57.line4, "");
  expect(test.screen57.line1_ex, "");
  expect(test.screen57.line2_ex, "");
  expect(test.screen57.line3_ex, "");
  expect(test.screen57.line4_ex, "");
  expect(test.screen57.sound_led1, 0);
  expect(test.screen57.sound_led2, 0);
  expect(test.screen57.sound_led3, "");
  expect(test.screen58.title, "");
  expect(test.screen58.msg1, "");
  expect(test.screen58.msg2, "");
  expect(test.screen58.msg1_size, 0);
  expect(test.screen58.msg2_size, 0);
  expect(test.screen58.sound1, 0);
  expect(test.screen58.sound2, 0);
  expect(test.screen58.sound3, 0);
  expect(test.screen58.snd_timer, 0);
  expect(test.screen58.timer1, 0);
  expect(test.screen58.timer2, 0);
  expect(test.screen58.timer3, 0);
  expect(test.screen58.dsp_flg1, 0);
  expect(test.screen58.dsp_flg2, 0);
  expect(test.screen58.movie01_ext, 0);
  expect(test.screen58.movie02_ext, 0);
  expect(test.screen58.movie03_ext, 0);
  expect(test.screen58.movie04_ext, 0);
  expect(test.screen58.line_title, "");
  expect(test.screen58.line_title_ex, "");
  expect(test.screen58.line1, "");
  expect(test.screen58.line2, "");
  expect(test.screen58.line3, "");
  expect(test.screen58.line4, "");
  expect(test.screen58.line1_ex, "");
  expect(test.screen58.line2_ex, "");
  expect(test.screen58.line3_ex, "");
  expect(test.screen58.line4_ex, "");
  expect(test.screen58.sound_led1, 0);
  expect(test.screen58.sound_led2, 0);
  expect(test.screen58.sound_led3, 0);
  expect(test.screen59.title, "");
  expect(test.screen59.msg1, "");
  expect(test.screen59.msg2, "");
  expect(test.screen59.msg1_size, 0);
  expect(test.screen59.msg2_size, 0);
  expect(test.screen59.sound1, 0);
  expect(test.screen59.sound2, 0);
  expect(test.screen59.sound3, 0);
  expect(test.screen59.snd_timer, 0);
  expect(test.screen59.timer1, 0);
  expect(test.screen59.timer2, 0);
  expect(test.screen59.timer3, 0);
  expect(test.screen59.dsp_flg1, 0);
  expect(test.screen59.dsp_flg2, 0);
  expect(test.screen59.movie01_ext, 0);
  expect(test.screen59.movie02_ext, 0);
  expect(test.screen59.movie03_ext, 0);
  expect(test.screen59.movie04_ext, 0);
  expect(test.screen59.line_title, "");
  expect(test.screen59.line_title_ex, "");
  expect(test.screen59.line1, "");
  expect(test.screen59.line2, "");
  expect(test.screen59.line3, "");
  expect(test.screen59.line4, "");
  expect(test.screen59.line1_ex, "");
  expect(test.screen59.line2_ex, "");
  expect(test.screen59.line3_ex, "");
  expect(test.screen59.line4_ex, "");
  expect(test.screen59.sound_led1, 0);
  expect(test.screen59.sound_led2, 0);
  expect(test.screen59.sound_led3, 0);
  expect(test.screen60.title, "");
  expect(test.screen60.msg1, "");
  expect(test.screen60.msg2, "");
  expect(test.screen60.msg1_size, 0);
  expect(test.screen60.msg2_size, 0);
  expect(test.screen60.sound1, 0);
  expect(test.screen60.sound2, 0);
  expect(test.screen60.sound3, "");
  expect(test.screen60.snd_timer, 0);
  expect(test.screen60.timer1, 0);
  expect(test.screen60.timer2, 0);
  expect(test.screen60.timer3, 0);
  expect(test.screen60.dsp_flg1, 0);
  expect(test.screen60.dsp_flg2, 0);
  expect(test.screen60.movie01_ext, 0);
  expect(test.screen60.movie02_ext, 0);
  expect(test.screen60.movie03_ext, 0);
  expect(test.screen60.movie04_ext, 0);
  expect(test.screen60.line_title, "");
  expect(test.screen60.line_title_ex, "");
  expect(test.screen60.line1, "");
  expect(test.screen60.line2, "");
  expect(test.screen60.line3, "");
  expect(test.screen60.line4, "");
  expect(test.screen60.line1_ex, "");
  expect(test.screen60.line2_ex, "");
  expect(test.screen60.line3_ex, "");
  expect(test.screen60.line4_ex, "");
  expect(test.screen60.sound_led1, 0);
  expect(test.screen60.sound_led2, 0);
  expect(test.screen60.sound_led3, "");
  expect(test.screen61.title, "");
  expect(test.screen61.msg1, "");
  expect(test.screen61.msg2, "");
  expect(test.screen61.msg1_size, 0);
  expect(test.screen61.msg2_size, 0);
  expect(test.screen61.sound1, 0);
  expect(test.screen61.sound2, 0);
  expect(test.screen61.sound3, 0);
  expect(test.screen61.snd_timer, 0);
  expect(test.screen61.timer1, 0);
  expect(test.screen61.timer2, 0);
  expect(test.screen61.timer3, 0);
  expect(test.screen61.dsp_flg1, 0);
  expect(test.screen61.dsp_flg2, 0);
  expect(test.screen61.movie01_ext, 0);
  expect(test.screen61.movie02_ext, 0);
  expect(test.screen61.movie03_ext, 0);
  expect(test.screen61.movie04_ext, 0);
  expect(test.screen61.line_title, "");
  expect(test.screen61.line_title_ex, "");
  expect(test.screen61.line1, "");
  expect(test.screen61.line2, "");
  expect(test.screen61.line3, "");
  expect(test.screen61.line4, "");
  expect(test.screen61.line1_ex, "");
  expect(test.screen61.line2_ex, "");
  expect(test.screen61.line3_ex, "");
  expect(test.screen61.line4_ex, "");
  expect(test.screen61.sound_led1, 0);
  expect(test.screen61.sound_led2, 0);
  expect(test.screen61.sound_led3, 0);
  expect(test.screen62.title, "");
  expect(test.screen62.msg1, "");
  expect(test.screen62.msg2, "");
  expect(test.screen62.msg1_size, 0);
  expect(test.screen62.msg2_size, 0);
  expect(test.screen62.sound1, 0);
  expect(test.screen62.sound2, 0);
  expect(test.screen62.sound3, 0);
  expect(test.screen62.snd_timer, 0);
  expect(test.screen62.timer1, 0);
  expect(test.screen62.timer2, 0);
  expect(test.screen62.timer3, 0);
  expect(test.screen62.dsp_flg1, 0);
  expect(test.screen62.dsp_flg2, 0);
  expect(test.screen62.movie01_ext, 0);
  expect(test.screen62.movie02_ext, 0);
  expect(test.screen62.movie03_ext, 0);
  expect(test.screen62.movie04_ext, 0);
  expect(test.screen62.line_title, "");
  expect(test.screen62.line_title_ex, "");
  expect(test.screen62.line1, "");
  expect(test.screen62.line2, "");
  expect(test.screen62.line3, "");
  expect(test.screen62.line4, "");
  expect(test.screen62.line1_ex, "");
  expect(test.screen62.line2_ex, "");
  expect(test.screen62.line3_ex, "");
  expect(test.screen62.line4_ex, "");
  expect(test.screen62.sound_led1, 0);
  expect(test.screen62.sound_led2, 0);
  expect(test.screen62.sound_led3, 0);
  expect(test.screen63.title, "");
  expect(test.screen63.msg1, "");
  expect(test.screen63.msg2, "");
  expect(test.screen63.msg1_size, 0);
  expect(test.screen63.msg2_size, 0);
  expect(test.screen63.sound1, 0);
  expect(test.screen63.sound2, 0);
  expect(test.screen63.sound3, "");
  expect(test.screen63.snd_timer, 0);
  expect(test.screen63.timer1, 0);
  expect(test.screen63.timer2, 0);
  expect(test.screen63.timer3, 0);
  expect(test.screen63.dsp_flg1, 0);
  expect(test.screen63.dsp_flg2, 0);
  expect(test.screen63.movie01_ext, 0);
  expect(test.screen63.movie02_ext, 0);
  expect(test.screen63.movie03_ext, 0);
  expect(test.screen63.movie04_ext, 0);
  expect(test.screen63.line_title, "");
  expect(test.screen63.line_title_ex, "");
  expect(test.screen63.line1, "");
  expect(test.screen63.line2, "");
  expect(test.screen63.line3, "");
  expect(test.screen63.line4, "");
  expect(test.screen63.line1_ex, "");
  expect(test.screen63.line2_ex, "");
  expect(test.screen63.line3_ex, "");
  expect(test.screen63.line4_ex, "");
  expect(test.screen63.sound_led1, 0);
  expect(test.screen63.sound_led2, 0);
  expect(test.screen63.sound_led3, "");
  expect(test.screen64.title, "");
  expect(test.screen64.msg1, "");
  expect(test.screen64.msg2, "");
  expect(test.screen64.msg1_size, 0);
  expect(test.screen64.msg2_size, 0);
  expect(test.screen64.sound1, 0);
  expect(test.screen64.sound2, 0);
  expect(test.screen64.sound3, 0);
  expect(test.screen64.snd_timer, 0);
  expect(test.screen64.timer1, 0);
  expect(test.screen64.timer2, 0);
  expect(test.screen64.timer3, 0);
  expect(test.screen64.dsp_flg1, 0);
  expect(test.screen64.dsp_flg2, 0);
  expect(test.screen64.movie01_ext, 0);
  expect(test.screen64.movie02_ext, 0);
  expect(test.screen64.movie03_ext, 0);
  expect(test.screen64.movie04_ext, 0);
  expect(test.screen64.line_title, "");
  expect(test.screen64.line_title_ex, "");
  expect(test.screen64.line1, "");
  expect(test.screen64.line2, "");
  expect(test.screen64.line3, "");
  expect(test.screen64.line4, "");
  expect(test.screen64.line1_ex, "");
  expect(test.screen64.line2_ex, "");
  expect(test.screen64.line3_ex, "");
  expect(test.screen64.line4_ex, "");
  expect(test.screen64.sound_led1, 0);
  expect(test.screen64.sound_led2, 0);
  expect(test.screen64.sound_led3, 0);
  expect(test.screen65.title, "");
  expect(test.screen65.msg1, "");
  expect(test.screen65.msg2, "");
  expect(test.screen65.msg1_size, 0);
  expect(test.screen65.msg2_size, 0);
  expect(test.screen65.sound1, 0);
  expect(test.screen65.sound2, 0);
  expect(test.screen65.sound3, 0);
  expect(test.screen65.snd_timer, 0);
  expect(test.screen65.timer1, 0);
  expect(test.screen65.timer2, 0);
  expect(test.screen65.timer3, 0);
  expect(test.screen65.dsp_flg1, 0);
  expect(test.screen65.dsp_flg2, 0);
  expect(test.screen65.movie01_ext, 0);
  expect(test.screen65.movie02_ext, 0);
  expect(test.screen65.movie03_ext, 0);
  expect(test.screen65.movie04_ext, 0);
  expect(test.screen65.line_title, "");
  expect(test.screen65.line_title_ex, "");
  expect(test.screen65.line1, "");
  expect(test.screen65.line2, "");
  expect(test.screen65.line3, "");
  expect(test.screen65.line4, "");
  expect(test.screen65.line1_ex, "");
  expect(test.screen65.line2_ex, "");
  expect(test.screen65.line3_ex, "");
  expect(test.screen65.line4_ex, "");
  expect(test.screen65.sound_led1, 0);
  expect(test.screen65.sound_led2, 0);
  expect(test.screen65.sound_led3, 0);
  expect(test.screen67.title, "");
  expect(test.screen67.msg1, "");
  expect(test.screen67.msg2, "");
  expect(test.screen67.msg1_size, 0);
  expect(test.screen67.msg2_size, 0);
  expect(test.screen67.sound1, 0);
  expect(test.screen67.sound2, 0);
  expect(test.screen67.sound3, 0);
  expect(test.screen67.snd_timer, 0);
  expect(test.screen67.timer1, 0);
  expect(test.screen67.timer2, 0);
  expect(test.screen67.timer3, 0);
  expect(test.screen67.dsp_flg1, 0);
  expect(test.screen67.dsp_flg2, 0);
  expect(test.screen67.movie01_ext, 0);
  expect(test.screen67.movie02_ext, 0);
  expect(test.screen67.movie03_ext, 0);
  expect(test.screen67.movie04_ext, 0);
  expect(test.screen67.line_title, "");
  expect(test.screen67.line_title_ex, "");
  expect(test.screen67.line1, "");
  expect(test.screen67.line2, "");
  expect(test.screen67.line3, "");
  expect(test.screen67.line4, "");
  expect(test.screen67.line1_ex, "");
  expect(test.screen67.line2_ex, "");
  expect(test.screen67.line3_ex, "");
  expect(test.screen67.line4_ex, "");
  expect(test.screen67.sound_led1, 0);
  expect(test.screen67.sound_led2, 0);
  expect(test.screen67.sound_led3, 0);
  expect(test.screen68.title, "");
  expect(test.screen68.msg1, "");
  expect(test.screen68.msg2, "");
  expect(test.screen68.msg1_size, 0);
  expect(test.screen68.msg2_size, 0);
  expect(test.screen68.sound1, 0);
  expect(test.screen68.sound2, 0);
  expect(test.screen68.sound3, 0);
  expect(test.screen68.snd_timer, 0);
  expect(test.screen68.timer1, 0);
  expect(test.screen68.timer2, 0);
  expect(test.screen68.timer3, 0);
  expect(test.screen68.dsp_flg1, 0);
  expect(test.screen68.dsp_flg2, 0);
  expect(test.screen68.movie01_ext, 0);
  expect(test.screen68.movie02_ext, 0);
  expect(test.screen68.movie03_ext, 0);
  expect(test.screen68.movie04_ext, 0);
  expect(test.screen68.line_title, "");
  expect(test.screen68.line_title_ex, "");
  expect(test.screen68.line1, "");
  expect(test.screen68.line2, "");
  expect(test.screen68.line3, "");
  expect(test.screen68.line4, "");
  expect(test.screen68.line1_ex, "");
  expect(test.screen68.line2_ex, "");
  expect(test.screen68.line3_ex, "");
  expect(test.screen68.line4_ex, "");
  expect(test.screen68.sound_led1, 0);
  expect(test.screen68.sound_led2, 0);
  expect(test.screen68.sound_led3, 0);
  expect(test.screen69.title, "");
  expect(test.screen69.msg1, "");
  expect(test.screen69.msg2, "");
  expect(test.screen69.msg1_size, 0);
  expect(test.screen69.msg2_size, 0);
  expect(test.screen69.sound1, 0);
  expect(test.screen69.sound2, 0);
  expect(test.screen69.sound3, 0);
  expect(test.screen69.snd_timer, 0);
  expect(test.screen69.timer1, 0);
  expect(test.screen69.timer2, 0);
  expect(test.screen69.timer3, 0);
  expect(test.screen69.dsp_flg1, 0);
  expect(test.screen69.dsp_flg2, 0);
  expect(test.screen69.movie01_ext, 0);
  expect(test.screen69.movie02_ext, 0);
  expect(test.screen69.movie03_ext, 0);
  expect(test.screen69.movie04_ext, 0);
  expect(test.screen69.line_title, "");
  expect(test.screen69.line_title_ex, "");
  expect(test.screen69.line1, "");
  expect(test.screen69.line2, "");
  expect(test.screen69.line3, "");
  expect(test.screen69.line4, "");
  expect(test.screen69.line1_ex, "");
  expect(test.screen69.line2_ex, "");
  expect(test.screen69.line3_ex, "");
  expect(test.screen69.line4_ex, "");
  expect(test.screen69.sound_led1, 0);
  expect(test.screen69.sound_led2, 0);
  expect(test.screen69.sound_led3, 0);
  expect(test.screen70.title, "");
  expect(test.screen70.msg1, "");
  expect(test.screen70.msg2, "");
  expect(test.screen70.msg1_size, 0);
  expect(test.screen70.msg2_size, 0);
  expect(test.screen70.sound1, 0);
  expect(test.screen70.sound2, 0);
  expect(test.screen70.sound3, 0);
  expect(test.screen70.snd_timer, 0);
  expect(test.screen70.timer1, 0);
  expect(test.screen70.timer2, 0);
  expect(test.screen70.timer3, 0);
  expect(test.screen70.dsp_flg1, 0);
  expect(test.screen70.dsp_flg2, 0);
  expect(test.screen70.movie01_ext, 0);
  expect(test.screen70.movie02_ext, 0);
  expect(test.screen70.movie03_ext, 0);
  expect(test.screen70.movie04_ext, 0);
  expect(test.screen70.line_title, "");
  expect(test.screen70.line_title_ex, "");
  expect(test.screen70.line1, "");
  expect(test.screen70.line2, "");
  expect(test.screen70.line3, "");
  expect(test.screen70.line4, "");
  expect(test.screen70.line1_ex, "");
  expect(test.screen70.line2_ex, "");
  expect(test.screen70.line3_ex, "");
  expect(test.screen70.line4_ex, "");
  expect(test.screen70.sound_led1, 0);
  expect(test.screen70.sound_led2, 0);
  expect(test.screen70.sound_led3, 0);
  expect(test.screen71.title, "");
  expect(test.screen71.msg1, "");
  expect(test.screen71.msg2, "");
  expect(test.screen71.msg1_size, 0);
  expect(test.screen71.msg2_size, 0);
  expect(test.screen71.sound1, 0);
  expect(test.screen71.sound2, 0);
  expect(test.screen71.sound3, 0);
  expect(test.screen71.snd_timer, 0);
  expect(test.screen71.timer1, 0);
  expect(test.screen71.timer2, 0);
  expect(test.screen71.timer3, 0);
  expect(test.screen71.dsp_flg1, 0);
  expect(test.screen71.dsp_flg2, 0);
  expect(test.screen71.movie01_ext, 0);
  expect(test.screen71.movie02_ext, 0);
  expect(test.screen71.movie03_ext, 0);
  expect(test.screen71.movie04_ext, 0);
  expect(test.screen71.line_title, "");
  expect(test.screen71.line_title_ex, "");
  expect(test.screen71.line1, "");
  expect(test.screen71.line2, "");
  expect(test.screen71.line3, "");
  expect(test.screen71.line4, "");
  expect(test.screen71.line1_ex, "");
  expect(test.screen71.line2_ex, "");
  expect(test.screen71.line3_ex, "");
  expect(test.screen71.line4_ex, "");
  expect(test.screen71.sound_led1, 0);
  expect(test.screen71.sound_led2, 0);
  expect(test.screen71.sound_led3, 0);
  expect(test.screen72.title, "");
  expect(test.screen72.msg1, "");
  expect(test.screen72.msg2, "");
  expect(test.screen72.msg1_size, 0);
  expect(test.screen72.msg2_size, 0);
  expect(test.screen72.sound1, 0);
  expect(test.screen72.sound2, 0);
  expect(test.screen72.sound3, 0);
  expect(test.screen72.snd_timer, 0);
  expect(test.screen72.timer1, 0);
  expect(test.screen72.timer2, 0);
  expect(test.screen72.timer3, 0);
  expect(test.screen72.dsp_flg1, 0);
  expect(test.screen72.dsp_flg2, 0);
  expect(test.screen72.movie01_ext, 0);
  expect(test.screen72.movie02_ext, 0);
  expect(test.screen72.movie03_ext, 0);
  expect(test.screen72.movie04_ext, 0);
  expect(test.screen72.line_title, "");
  expect(test.screen72.line_title_ex, "");
  expect(test.screen72.line1, "");
  expect(test.screen72.line2, "");
  expect(test.screen72.line3, "");
  expect(test.screen72.line4, "");
  expect(test.screen72.line1_ex, "");
  expect(test.screen72.line2_ex, "");
  expect(test.screen72.line3_ex, "");
  expect(test.screen72.line4_ex, "");
  expect(test.screen72.sound_led1, 0);
  expect(test.screen72.sound_led2, 0);
  expect(test.screen72.sound_led3, 0);
  expect(test.screen73.title, "");
  expect(test.screen73.msg1, "");
  expect(test.screen73.msg2, "");
  expect(test.screen73.msg1_size, 0);
  expect(test.screen73.msg2_size, 0);
  expect(test.screen73.sound1, 0);
  expect(test.screen73.sound2, 0);
  expect(test.screen73.sound3, 0);
  expect(test.screen73.snd_timer, 0);
  expect(test.screen73.timer1, 0);
  expect(test.screen73.timer2, 0);
  expect(test.screen73.timer3, 0);
  expect(test.screen73.dsp_flg1, 0);
  expect(test.screen73.dsp_flg2, 0);
  expect(test.screen73.movie01_ext, 0);
  expect(test.screen73.movie02_ext, 0);
  expect(test.screen73.movie03_ext, 0);
  expect(test.screen73.movie04_ext, 0);
  expect(test.screen73.line_title, "");
  expect(test.screen73.line_title_ex, "");
  expect(test.screen73.line1, "");
  expect(test.screen73.line2, "");
  expect(test.screen73.line3, "");
  expect(test.screen73.line4, "");
  expect(test.screen73.line1_ex, "");
  expect(test.screen73.line2_ex, "");
  expect(test.screen73.line3_ex, "");
  expect(test.screen73.line4_ex, "");
  expect(test.screen73.sound_led1, 0);
  expect(test.screen73.sound_led2, 0);
  expect(test.screen73.sound_led3, 0);
  expect(test.screen74.title, "");
  expect(test.screen74.msg1, "");
  expect(test.screen74.msg2, "");
  expect(test.screen74.msg1_size, 0);
  expect(test.screen74.msg2_size, 0);
  expect(test.screen74.sound1, 0);
  expect(test.screen74.sound2, 0);
  expect(test.screen74.sound3, 0);
  expect(test.screen74.snd_timer, 0);
  expect(test.screen74.timer1, 0);
  expect(test.screen74.timer2, 0);
  expect(test.screen74.timer3, 0);
  expect(test.screen74.dsp_flg1, 0);
  expect(test.screen74.dsp_flg2, 0);
  expect(test.screen74.movie01_ext, 0);
  expect(test.screen74.movie02_ext, 0);
  expect(test.screen74.movie03_ext, 0);
  expect(test.screen74.movie04_ext, 0);
  expect(test.screen74.line_title, "");
  expect(test.screen74.line_title_ex, "");
  expect(test.screen74.line1, "");
  expect(test.screen74.line2, "");
  expect(test.screen74.line3, "");
  expect(test.screen74.line4, "");
  expect(test.screen74.line1_ex, "");
  expect(test.screen74.line2_ex, "");
  expect(test.screen74.line3_ex, "");
  expect(test.screen74.line4_ex, "");
  expect(test.screen74.sound_led1, 0);
  expect(test.screen74.sound_led2, 0);
  expect(test.screen74.sound_led3, 0);
  expect(test.screen75.title, "");
  expect(test.screen75.msg1, "");
  expect(test.screen75.msg2, "");
  expect(test.screen75.msg1_size, 0);
  expect(test.screen75.msg2_size, 0);
  expect(test.screen75.sound1, 0);
  expect(test.screen75.sound2, 0);
  expect(test.screen75.sound3, 0);
  expect(test.screen75.snd_timer, 0);
  expect(test.screen75.timer1, 0);
  expect(test.screen75.timer2, 0);
  expect(test.screen75.timer3, 0);
  expect(test.screen75.dsp_flg1, 0);
  expect(test.screen75.dsp_flg2, 0);
  expect(test.screen75.movie01_ext, 0);
  expect(test.screen75.movie02_ext, 0);
  expect(test.screen75.movie03_ext, 0);
  expect(test.screen75.movie04_ext, 0);
  expect(test.screen75.line_title, "");
  expect(test.screen75.line_title_ex, "");
  expect(test.screen75.line1, "");
  expect(test.screen75.line2, "");
  expect(test.screen75.line3, "");
  expect(test.screen75.line4, "");
  expect(test.screen75.line1_ex, "");
  expect(test.screen75.line2_ex, "");
  expect(test.screen75.line3_ex, "");
  expect(test.screen75.line4_ex, "");
  expect(test.screen75.sound_led1, 0);
  expect(test.screen75.sound_led2, 0);
  expect(test.screen75.sound_led3, 0);
  expect(test.screen76.title, "");
  expect(test.screen76.msg1, "");
  expect(test.screen76.msg2, "");
  expect(test.screen76.msg1_size, 0);
  expect(test.screen76.msg2_size, 0);
  expect(test.screen76.sound1, 0);
  expect(test.screen76.sound2, 0);
  expect(test.screen76.sound3, 0);
  expect(test.screen76.snd_timer, 0);
  expect(test.screen76.timer1, 0);
  expect(test.screen76.timer2, 0);
  expect(test.screen76.timer3, 0);
  expect(test.screen76.dsp_flg1, 0);
  expect(test.screen76.dsp_flg2, 0);
  expect(test.screen76.movie01_ext, 0);
  expect(test.screen76.movie02_ext, 0);
  expect(test.screen76.movie03_ext, 0);
  expect(test.screen76.movie04_ext, 0);
  expect(test.screen76.line_title, "");
  expect(test.screen76.line_title_ex, "");
  expect(test.screen76.line1, "");
  expect(test.screen76.line2, "");
  expect(test.screen76.line3, "");
  expect(test.screen76.line4, "");
  expect(test.screen76.line1_ex, "");
  expect(test.screen76.line2_ex, "");
  expect(test.screen76.line3_ex, "");
  expect(test.screen76.line4_ex, "");
  expect(test.screen76.sound_led1, 0);
  expect(test.screen76.sound_led2, 0);
  expect(test.screen76.sound_led3, 0);
  expect(test.screen77.title, "");
  expect(test.screen77.msg1, "");
  expect(test.screen77.msg2, "");
  expect(test.screen77.msg1_size, 0);
  expect(test.screen77.msg2_size, 0);
  expect(test.screen77.sound1, 0);
  expect(test.screen77.sound2, 0);
  expect(test.screen77.sound3, 0);
  expect(test.screen77.snd_timer, 0);
  expect(test.screen77.timer1, 0);
  expect(test.screen77.timer2, 0);
  expect(test.screen77.timer3, 0);
  expect(test.screen77.dsp_flg1, 0);
  expect(test.screen77.dsp_flg2, 0);
  expect(test.screen77.movie01_ext, 0);
  expect(test.screen77.movie02_ext, 0);
  expect(test.screen77.movie03_ext, 0);
  expect(test.screen77.movie04_ext, 0);
  expect(test.screen77.line_title, "");
  expect(test.screen77.line_title_ex, "");
  expect(test.screen77.line1, "");
  expect(test.screen77.line2, "");
  expect(test.screen77.line3, "");
  expect(test.screen77.line4, "");
  expect(test.screen77.line1_ex, "");
  expect(test.screen77.line2_ex, "");
  expect(test.screen77.line3_ex, "");
  expect(test.screen77.line4_ex, "");
  expect(test.screen77.sound_led1, 0);
  expect(test.screen77.sound_led2, 0);
  expect(test.screen77.sound_led3, 0);
  expect(test.screen78.title, "");
  expect(test.screen78.msg1, "");
  expect(test.screen78.msg2, "");
  expect(test.screen78.msg1_size, 0);
  expect(test.screen78.msg2_size, 0);
  expect(test.screen78.sound1, 0);
  expect(test.screen78.sound2, 0);
  expect(test.screen78.sound3, 0);
  expect(test.screen78.snd_timer, 0);
  expect(test.screen78.timer1, 0);
  expect(test.screen78.timer2, 0);
  expect(test.screen78.timer3, 0);
  expect(test.screen78.dsp_flg1, 0);
  expect(test.screen78.dsp_flg2, 0);
  expect(test.screen78.movie01_ext, 0);
  expect(test.screen78.movie02_ext, 0);
  expect(test.screen78.movie03_ext, 0);
  expect(test.screen78.movie04_ext, 0);
  expect(test.screen78.line_title, "");
  expect(test.screen78.line_title_ex, "");
  expect(test.screen78.line1, "");
  expect(test.screen78.line2, "");
  expect(test.screen78.line3, "");
  expect(test.screen78.line4, "");
  expect(test.screen78.line1_ex, "");
  expect(test.screen78.line2_ex, "");
  expect(test.screen78.line3_ex, "");
  expect(test.screen78.line4_ex, "");
  expect(test.screen78.sound_led1, 0);
  expect(test.screen78.sound_led2, 0);
  expect(test.screen78.sound_led3, 0);
  expect(test.screen79.title, "");
  expect(test.screen79.msg1, "");
  expect(test.screen79.msg2, "");
  expect(test.screen79.msg1_size, 0);
  expect(test.screen79.msg2_size, 0);
  expect(test.screen79.sound1, 0);
  expect(test.screen79.sound2, 0);
  expect(test.screen79.sound3, 0);
  expect(test.screen79.snd_timer, 0);
  expect(test.screen79.timer1, 0);
  expect(test.screen79.timer2, 0);
  expect(test.screen79.timer3, 0);
  expect(test.screen79.dsp_flg1, 0);
  expect(test.screen79.dsp_flg2, 0);
  expect(test.screen79.movie01_ext, 0);
  expect(test.screen79.movie02_ext, 0);
  expect(test.screen79.movie03_ext, 0);
  expect(test.screen79.movie04_ext, 0);
  expect(test.screen79.line_title, "");
  expect(test.screen79.line_title_ex, "");
  expect(test.screen79.line1, "");
  expect(test.screen79.line2, "");
  expect(test.screen79.line3, "");
  expect(test.screen79.line4, "");
  expect(test.screen79.line1_ex, "");
  expect(test.screen79.line2_ex, "");
  expect(test.screen79.line3_ex, "");
  expect(test.screen79.line4_ex, "");
  expect(test.screen79.sound_led1, 0);
  expect(test.screen79.sound_led2, 0);
  expect(test.screen79.sound_led3, 0);
  expect(test.screen81.title, "");
  expect(test.screen81.msg1, "");
  expect(test.screen81.msg2, "");
  expect(test.screen81.msg1_size, 0);
  expect(test.screen81.msg2_size, 0);
  expect(test.screen81.sound1, 0);
  expect(test.screen81.sound2, 0);
  expect(test.screen81.sound3, 0);
  expect(test.screen81.snd_timer, 0);
  expect(test.screen81.timer1, 0);
  expect(test.screen81.timer2, 0);
  expect(test.screen81.timer3, 0);
  expect(test.screen81.dsp_flg1, 0);
  expect(test.screen81.dsp_flg2, 0);
  expect(test.screen81.movie01_ext, 0);
  expect(test.screen81.movie02_ext, 0);
  expect(test.screen81.movie03_ext, 0);
  expect(test.screen81.movie04_ext, 0);
  expect(test.screen81.line_title, "");
  expect(test.screen81.line_title_ex, "");
  expect(test.screen81.line1, "");
  expect(test.screen81.line2, "");
  expect(test.screen81.line3, "");
  expect(test.screen81.line4, "");
  expect(test.screen81.line1_ex, "");
  expect(test.screen81.line2_ex, "");
  expect(test.screen81.line3_ex, "");
  expect(test.screen81.line4_ex, "");
  expect(test.screen81.sound_led1, 0);
  expect(test.screen81.sound_led2, 0);
  expect(test.screen81.sound_led3, 0);
  expect(test.screen82.title, "");
  expect(test.screen82.msg1, "");
  expect(test.screen82.msg2, "");
  expect(test.screen82.msg1_size, 0);
  expect(test.screen82.msg2_size, 0);
  expect(test.screen82.sound1, 0);
  expect(test.screen82.sound2, 0);
  expect(test.screen82.sound3, 0);
  expect(test.screen82.snd_timer, 0);
  expect(test.screen82.timer1, 0);
  expect(test.screen82.timer2, 0);
  expect(test.screen82.timer3, 0);
  expect(test.screen82.dsp_flg1, 0);
  expect(test.screen82.dsp_flg2, 0);
  expect(test.screen82.movie01_ext, 0);
  expect(test.screen82.movie02_ext, 0);
  expect(test.screen82.movie03_ext, 0);
  expect(test.screen82.movie04_ext, 0);
  expect(test.screen82.line_title, "");
  expect(test.screen82.line_title_ex, "");
  expect(test.screen82.line1, "");
  expect(test.screen82.line2, "");
  expect(test.screen82.line3, "");
  expect(test.screen82.line4, "");
  expect(test.screen82.line1_ex, "");
  expect(test.screen82.line2_ex, "");
  expect(test.screen82.line3_ex, "");
  expect(test.screen82.line4_ex, "");
  expect(test.screen82.sound_led1, 0);
  expect(test.screen82.sound_led2, 0);
  expect(test.screen82.sound_led3, 0);
  expect(test.screen83.title, "");
  expect(test.screen83.msg1, "");
  expect(test.screen83.msg2, "");
  expect(test.screen83.msg1_size, 0);
  expect(test.screen83.msg2_size, 0);
  expect(test.screen83.sound1, 0);
  expect(test.screen83.sound2, 0);
  expect(test.screen83.sound3, 0);
  expect(test.screen83.snd_timer, 0);
  expect(test.screen83.timer1, 0);
  expect(test.screen83.timer2, 0);
  expect(test.screen83.timer3, 0);
  expect(test.screen83.dsp_flg1, 0);
  expect(test.screen83.dsp_flg2, 0);
  expect(test.screen83.movie01_ext, 0);
  expect(test.screen83.movie02_ext, 0);
  expect(test.screen83.movie03_ext, 0);
  expect(test.screen83.movie04_ext, 0);
  expect(test.screen83.line_title, "");
  expect(test.screen83.line_title_ex, "");
  expect(test.screen83.line1, "");
  expect(test.screen83.line2, "");
  expect(test.screen83.line3, "");
  expect(test.screen83.line4, "");
  expect(test.screen83.line1_ex, "");
  expect(test.screen83.line2_ex, "");
  expect(test.screen83.line3_ex, "");
  expect(test.screen83.line4_ex, "");
  expect(test.screen83.sound_led1, 0);
  expect(test.screen83.sound_led2, 0);
  expect(test.screen83.sound_led3, 0);
  expect(test.screen84.title, "");
  expect(test.screen84.msg1, "");
  expect(test.screen84.msg2, "");
  expect(test.screen84.msg1_size, 0);
  expect(test.screen84.msg2_size, 0);
  expect(test.screen84.sound1, 0);
  expect(test.screen84.sound2, 0);
  expect(test.screen84.sound3, 0);
  expect(test.screen84.snd_timer, 0);
  expect(test.screen84.timer1, 0);
  expect(test.screen84.timer2, 0);
  expect(test.screen84.timer3, 0);
  expect(test.screen84.dsp_flg1, 0);
  expect(test.screen84.dsp_flg2, 0);
  expect(test.screen84.movie01_ext, 0);
  expect(test.screen84.movie02_ext, 0);
  expect(test.screen84.movie03_ext, 0);
  expect(test.screen84.movie04_ext, 0);
  expect(test.screen84.line_title, "");
  expect(test.screen84.line_title_ex, "");
  expect(test.screen84.line1, "");
  expect(test.screen84.line2, "");
  expect(test.screen84.line3, "");
  expect(test.screen84.line4, "");
  expect(test.screen84.line1_ex, "");
  expect(test.screen84.line2_ex, "");
  expect(test.screen84.line3_ex, "");
  expect(test.screen84.line4_ex, "");
  expect(test.screen84.sound_led1, 0);
  expect(test.screen84.sound_led2, 0);
  expect(test.screen84.sound_led3, 0);
  expect(test.screen85.title, "");
  expect(test.screen85.msg1, "");
  expect(test.screen85.msg2, "");
  expect(test.screen85.msg1_size, 0);
  expect(test.screen85.msg2_size, 0);
  expect(test.screen85.sound1, 0);
  expect(test.screen85.sound2, 0);
  expect(test.screen85.sound3, 0);
  expect(test.screen85.snd_timer, 0);
  expect(test.screen85.timer1, 0);
  expect(test.screen85.timer2, 0);
  expect(test.screen85.timer3, 0);
  expect(test.screen85.dsp_flg1, 0);
  expect(test.screen85.dsp_flg2, 0);
  expect(test.screen85.movie01_ext, 0);
  expect(test.screen85.movie02_ext, 0);
  expect(test.screen85.movie03_ext, 0);
  expect(test.screen85.movie04_ext, 0);
  expect(test.screen85.line_title, "");
  expect(test.screen85.line_title_ex, "");
  expect(test.screen85.line1, "");
  expect(test.screen85.line2, "");
  expect(test.screen85.line3, "");
  expect(test.screen85.line4, "");
  expect(test.screen85.line1_ex, "");
  expect(test.screen85.line2_ex, "");
  expect(test.screen85.line3_ex, "");
  expect(test.screen85.line4_ex, "");
  expect(test.screen85.sound_led1, 0);
  expect(test.screen85.sound_led2, 0);
  expect(test.screen85.sound_led3, 0);
  expect(test.screen86.title, "");
  expect(test.screen86.msg1, "");
  expect(test.screen86.msg2, "");
  expect(test.screen86.msg1_size, 0);
  expect(test.screen86.msg2_size, 0);
  expect(test.screen86.sound1, 0);
  expect(test.screen86.sound2, 0);
  expect(test.screen86.sound3, 0);
  expect(test.screen86.snd_timer, 0);
  expect(test.screen86.timer1, 0);
  expect(test.screen86.timer2, 0);
  expect(test.screen86.timer3, 0);
  expect(test.screen86.dsp_flg1, 0);
  expect(test.screen86.dsp_flg2, 0);
  expect(test.screen86.movie01_ext, 0);
  expect(test.screen86.movie02_ext, 0);
  expect(test.screen86.movie03_ext, 0);
  expect(test.screen86.movie04_ext, 0);
  expect(test.screen86.line_title, "");
  expect(test.screen86.line_title_ex, "");
  expect(test.screen86.line1, "");
  expect(test.screen86.line2, "");
  expect(test.screen86.line3, "");
  expect(test.screen86.line4, "");
  expect(test.screen86.line1_ex, "");
  expect(test.screen86.line2_ex, "");
  expect(test.screen86.line3_ex, "");
  expect(test.screen86.line4_ex, "");
  expect(test.screen86.sound_led1, 0);
  expect(test.screen86.sound_led2, 0);
  expect(test.screen86.sound_led3, 0);
  expect(test.screen87.title, "");
  expect(test.screen87.msg1, "");
  expect(test.screen87.msg2, "");
  expect(test.screen87.msg1_size, 0);
  expect(test.screen87.msg2_size, 0);
  expect(test.screen87.sound1, 0);
  expect(test.screen87.sound2, 0);
  expect(test.screen87.sound3, 0);
  expect(test.screen87.snd_timer, 0);
  expect(test.screen87.timer1, 0);
  expect(test.screen87.timer2, 0);
  expect(test.screen87.timer3, 0);
  expect(test.screen87.dsp_flg1, 0);
  expect(test.screen87.dsp_flg2, 0);
  expect(test.screen87.movie01_ext, 0);
  expect(test.screen87.movie02_ext, 0);
  expect(test.screen87.movie03_ext, 0);
  expect(test.screen87.movie04_ext, 0);
  expect(test.screen87.line_title, "");
  expect(test.screen87.line_title_ex, "");
  expect(test.screen87.line1, "");
  expect(test.screen87.line2, "");
  expect(test.screen87.line3, "");
  expect(test.screen87.line4, "");
  expect(test.screen87.line1_ex, "");
  expect(test.screen87.line2_ex, "");
  expect(test.screen87.line3_ex, "");
  expect(test.screen87.line4_ex, "");
  expect(test.screen87.sound_led1, 0);
  expect(test.screen87.sound_led2, 0);
  expect(test.screen87.sound_led3, 0);
  expect(test.screen88.title, "");
  expect(test.screen88.msg1, "");
  expect(test.screen88.msg2, "");
  expect(test.screen88.msg1_size, 0);
  expect(test.screen88.msg2_size, 0);
  expect(test.screen88.sound1, 0);
  expect(test.screen88.sound2, 0);
  expect(test.screen88.sound3, 0);
  expect(test.screen88.snd_timer, 0);
  expect(test.screen88.timer1, 0);
  expect(test.screen88.timer2, 0);
  expect(test.screen88.timer3, 0);
  expect(test.screen88.dsp_flg1, 0);
  expect(test.screen88.dsp_flg2, 0);
  expect(test.screen88.movie01_ext, 0);
  expect(test.screen88.movie02_ext, 0);
  expect(test.screen88.movie03_ext, 0);
  expect(test.screen88.movie04_ext, 0);
  expect(test.screen88.line_title, "");
  expect(test.screen88.line_title_ex, "");
  expect(test.screen88.line1, "");
  expect(test.screen88.line2, "");
  expect(test.screen88.line3, "");
  expect(test.screen88.line4, "");
  expect(test.screen88.line1_ex, "");
  expect(test.screen88.line2_ex, "");
  expect(test.screen88.line3_ex, "");
  expect(test.screen88.line4_ex, "");
  expect(test.screen88.sound_led1, 0);
  expect(test.screen88.sound_led2, 0);
  expect(test.screen88.sound_led3, 0);
  expect(test.screen89.title, "");
  expect(test.screen89.msg1, "");
  expect(test.screen89.msg2, "");
  expect(test.screen89.msg1_size, 0);
  expect(test.screen89.msg2_size, 0);
  expect(test.screen89.sound1, 0);
  expect(test.screen89.sound2, 0);
  expect(test.screen89.sound3, 0);
  expect(test.screen89.snd_timer, 0);
  expect(test.screen89.timer1, 0);
  expect(test.screen89.timer2, 0);
  expect(test.screen89.timer3, 0);
  expect(test.screen89.dsp_flg1, 0);
  expect(test.screen89.dsp_flg2, 0);
  expect(test.screen89.movie01_ext, 0);
  expect(test.screen89.movie02_ext, 0);
  expect(test.screen89.movie03_ext, 0);
  expect(test.screen89.movie04_ext, 0);
  expect(test.screen89.line_title, "");
  expect(test.screen89.line_title_ex, "");
  expect(test.screen89.line1, "");
  expect(test.screen89.line2, "");
  expect(test.screen89.line3, "");
  expect(test.screen89.line4, "");
  expect(test.screen89.line1_ex, "");
  expect(test.screen89.line2_ex, "");
  expect(test.screen89.line3_ex, "");
  expect(test.screen89.line4_ex, "");
  expect(test.screen89.sound_led1, 0);
  expect(test.screen89.sound_led2, 0);
  expect(test.screen89.sound_led3, 0);
  expect(test.screen90.title, "");
  expect(test.screen90.msg1, "");
  expect(test.screen90.msg2, "");
  expect(test.screen90.msg1_size, 0);
  expect(test.screen90.msg2_size, 0);
  expect(test.screen90.sound1, 0);
  expect(test.screen90.sound2, 0);
  expect(test.screen90.sound3, 0);
  expect(test.screen90.snd_timer, 0);
  expect(test.screen90.timer1, 0);
  expect(test.screen90.timer2, 0);
  expect(test.screen90.timer3, 0);
  expect(test.screen90.dsp_flg1, 0);
  expect(test.screen90.dsp_flg2, 0);
  expect(test.screen90.movie01_ext, 0);
  expect(test.screen90.movie02_ext, 0);
  expect(test.screen90.movie03_ext, 0);
  expect(test.screen90.movie04_ext, 0);
  expect(test.screen90.line_title, "");
  expect(test.screen90.line_title_ex, "");
  expect(test.screen90.line1, "");
  expect(test.screen90.line2, "");
  expect(test.screen90.line3, "");
  expect(test.screen90.line4, "");
  expect(test.screen90.line1_ex, "");
  expect(test.screen90.line2_ex, "");
  expect(test.screen90.line3_ex, "");
  expect(test.screen90.line4_ex, "");
  expect(test.screen90.sound_led1, 0);
  expect(test.screen90.sound_led2, 0);
  expect(test.screen90.sound_led3, 0);
  expect(test.screen91.title, "");
  expect(test.screen91.msg1, "");
  expect(test.screen91.msg2, "");
  expect(test.screen91.msg1_size, 0);
  expect(test.screen91.msg2_size, 0);
  expect(test.screen91.sound1, 0);
  expect(test.screen91.sound2, 0);
  expect(test.screen91.sound3, 0);
  expect(test.screen91.snd_timer, 0);
  expect(test.screen91.timer1, 0);
  expect(test.screen91.timer2, 0);
  expect(test.screen91.timer3, 0);
  expect(test.screen91.dsp_flg1, 0);
  expect(test.screen91.dsp_flg2, 0);
  expect(test.screen91.movie01_ext, 0);
  expect(test.screen91.movie02_ext, 0);
  expect(test.screen91.movie03_ext, 0);
  expect(test.screen91.movie04_ext, 0);
  expect(test.screen91.line_title, "");
  expect(test.screen91.line_title_ex, "");
  expect(test.screen91.line1, "");
  expect(test.screen91.line2, "");
  expect(test.screen91.line3, "");
  expect(test.screen91.line4, "");
  expect(test.screen91.line1_ex, "");
  expect(test.screen91.line2_ex, "");
  expect(test.screen91.line3_ex, "");
  expect(test.screen91.line4_ex, "");
  expect(test.screen91.sound_led1, 0);
  expect(test.screen91.sound_led2, 0);
  expect(test.screen91.sound_led3, 0);
  expect(test.screen92.title, "");
  expect(test.screen92.msg1, "");
  expect(test.screen92.msg2, "");
  expect(test.screen92.msg1_size, 0);
  expect(test.screen92.msg2_size, 0);
  expect(test.screen92.sound1, 0);
  expect(test.screen92.sound2, 0);
  expect(test.screen92.sound3, 0);
  expect(test.screen92.snd_timer, 0);
  expect(test.screen92.timer1, 0);
  expect(test.screen92.timer2, 0);
  expect(test.screen92.timer3, 0);
  expect(test.screen92.dsp_flg1, 0);
  expect(test.screen92.dsp_flg2, 0);
  expect(test.screen92.movie01_ext, 0);
  expect(test.screen92.movie02_ext, 0);
  expect(test.screen92.movie03_ext, 0);
  expect(test.screen92.movie04_ext, 0);
  expect(test.screen92.line_title, "");
  expect(test.screen92.line_title_ex, "");
  expect(test.screen92.line1, "");
  expect(test.screen92.line2, "");
  expect(test.screen92.line3, "");
  expect(test.screen92.line4, "");
  expect(test.screen92.line1_ex, "");
  expect(test.screen92.line2_ex, "");
  expect(test.screen92.line3_ex, "");
  expect(test.screen92.line4_ex, "");
  expect(test.screen92.sound_led1, 0);
  expect(test.screen92.sound_led2, 0);
  expect(test.screen92.sound_led3, 0);
  expect(test.screen93.title, "");
  expect(test.screen93.msg1, "");
  expect(test.screen93.msg2, "");
  expect(test.screen93.msg1_size, 0);
  expect(test.screen93.msg2_size, 0);
  expect(test.screen93.sound1, 0);
  expect(test.screen93.sound2, 0);
  expect(test.screen93.sound3, 0);
  expect(test.screen93.snd_timer, 0);
  expect(test.screen93.timer1, 0);
  expect(test.screen93.timer2, 0);
  expect(test.screen93.timer3, 0);
  expect(test.screen93.dsp_flg1, 0);
  expect(test.screen93.dsp_flg2, 0);
  expect(test.screen93.movie01_ext, 0);
  expect(test.screen93.movie02_ext, 0);
  expect(test.screen93.movie03_ext, 0);
  expect(test.screen93.movie04_ext, 0);
  expect(test.screen93.line_title, "");
  expect(test.screen93.line_title_ex, "");
  expect(test.screen93.line1, "");
  expect(test.screen93.line2, "");
  expect(test.screen93.line3, "");
  expect(test.screen93.line4, "");
  expect(test.screen93.line1_ex, "");
  expect(test.screen93.line2_ex, "");
  expect(test.screen93.line3_ex, "");
  expect(test.screen93.line4_ex, "");
  expect(test.screen93.sound_led1, 0);
  expect(test.screen93.sound_led2, 0);
  expect(test.screen93.sound_led3, 0);
  expect(test.screen94.title, "");
  expect(test.screen94.msg1, "");
  expect(test.screen94.msg2, "");
  expect(test.screen94.msg1_size, 0);
  expect(test.screen94.msg2_size, 0);
  expect(test.screen94.sound1, 0);
  expect(test.screen94.sound2, 0);
  expect(test.screen94.sound3, 0);
  expect(test.screen94.snd_timer, 0);
  expect(test.screen94.timer1, 0);
  expect(test.screen94.timer2, 0);
  expect(test.screen94.timer3, 0);
  expect(test.screen94.dsp_flg1, 0);
  expect(test.screen94.dsp_flg2, 0);
  expect(test.screen94.movie01_ext, 0);
  expect(test.screen94.movie02_ext, 0);
  expect(test.screen94.movie03_ext, 0);
  expect(test.screen94.movie04_ext, 0);
  expect(test.screen94.line_title, "");
  expect(test.screen94.line_title_ex, "");
  expect(test.screen94.line1, "");
  expect(test.screen94.line2, "");
  expect(test.screen94.line3, "");
  expect(test.screen94.line4, "");
  expect(test.screen94.line1_ex, "");
  expect(test.screen94.line2_ex, "");
  expect(test.screen94.line3_ex, "");
  expect(test.screen94.line4_ex, "");
  expect(test.screen94.sound_led1, 0);
  expect(test.screen94.sound_led2, 0);
  expect(test.screen94.sound_led3, 0);
  expect(test.screen95.title, "");
  expect(test.screen95.msg1, "");
  expect(test.screen95.msg2, "");
  expect(test.screen95.msg1_size, 0);
  expect(test.screen95.msg2_size, 0);
  expect(test.screen95.sound1, 0);
  expect(test.screen95.sound2, 0);
  expect(test.screen95.sound3, 0);
  expect(test.screen95.snd_timer, 0);
  expect(test.screen95.timer1, 0);
  expect(test.screen95.timer2, 0);
  expect(test.screen95.timer3, 0);
  expect(test.screen95.dsp_flg1, 0);
  expect(test.screen95.dsp_flg2, 0);
  expect(test.screen95.movie01_ext, 0);
  expect(test.screen95.movie02_ext, 0);
  expect(test.screen95.movie03_ext, 0);
  expect(test.screen95.movie04_ext, 0);
  expect(test.screen95.line_title, "");
  expect(test.screen95.line_title_ex, "");
  expect(test.screen95.line1, "");
  expect(test.screen95.line2, "");
  expect(test.screen95.line3, "");
  expect(test.screen95.line4, "");
  expect(test.screen95.line1_ex, "");
  expect(test.screen95.line2_ex, "");
  expect(test.screen95.line3_ex, "");
  expect(test.screen95.line4_ex, "");
  expect(test.screen95.sound_led1, 0);
  expect(test.screen95.sound_led2, 0);
  expect(test.screen95.sound_led3, 0);
  expect(test.screen96.title, "");
  expect(test.screen96.msg1, "");
  expect(test.screen96.msg2, "");
  expect(test.screen96.msg1_size, 0);
  expect(test.screen96.msg2_size, 0);
  expect(test.screen96.sound1, 0);
  expect(test.screen96.sound2, 0);
  expect(test.screen96.sound3, 0);
  expect(test.screen96.snd_timer, 0);
  expect(test.screen96.timer1, 0);
  expect(test.screen96.timer2, 0);
  expect(test.screen96.timer3, 0);
  expect(test.screen96.dsp_flg1, 0);
  expect(test.screen96.dsp_flg2, 0);
  expect(test.screen96.movie01_ext, 0);
  expect(test.screen96.movie02_ext, 0);
  expect(test.screen96.movie03_ext, 0);
  expect(test.screen96.movie04_ext, 0);
  expect(test.screen96.line_title, "");
  expect(test.screen96.line_title_ex, "");
  expect(test.screen96.line1, "");
  expect(test.screen96.line2, "");
  expect(test.screen96.line3, "");
  expect(test.screen96.line4, "");
  expect(test.screen96.line1_ex, "");
  expect(test.screen96.line2_ex, "");
  expect(test.screen96.line3_ex, "");
  expect(test.screen96.line4_ex, "");
  expect(test.screen96.sound_led1, 0);
  expect(test.screen96.sound_led2, 0);
  expect(test.screen96.sound_led3, 0);
  expect(test.screen97.title, "");
  expect(test.screen97.msg1, "");
  expect(test.screen97.msg2, "");
  expect(test.screen97.msg1_size, 0);
  expect(test.screen97.msg2_size, 0);
  expect(test.screen97.sound1, 0);
  expect(test.screen97.sound2, 0);
  expect(test.screen97.sound3, 0);
  expect(test.screen97.snd_timer, 0);
  expect(test.screen97.timer1, 0);
  expect(test.screen97.timer2, 0);
  expect(test.screen97.timer3, 0);
  expect(test.screen97.dsp_flg1, 0);
  expect(test.screen97.dsp_flg2, 0);
  expect(test.screen97.movie01_ext, 0);
  expect(test.screen97.movie02_ext, 0);
  expect(test.screen97.movie03_ext, 0);
  expect(test.screen97.movie04_ext, 0);
  expect(test.screen97.line_title, "");
  expect(test.screen97.line_title_ex, "");
  expect(test.screen97.line1, "");
  expect(test.screen97.line2, "");
  expect(test.screen97.line3, "");
  expect(test.screen97.line4, "");
  expect(test.screen97.line1_ex, "");
  expect(test.screen97.line2_ex, "");
  expect(test.screen97.line3_ex, "");
  expect(test.screen97.line4_ex, "");
  expect(test.screen97.sound_led1, 0);
  expect(test.screen97.sound_led2, 0);
  expect(test.screen97.sound_led3, 0);
  expect(test.screen98.title, "");
  expect(test.screen98.msg1, "");
  expect(test.screen98.msg2, "");
  expect(test.screen98.msg1_size, 0);
  expect(test.screen98.msg2_size, 0);
  expect(test.screen98.sound1, 0);
  expect(test.screen98.sound2, 0);
  expect(test.screen98.sound3, 0);
  expect(test.screen98.snd_timer, 0);
  expect(test.screen98.timer1, 0);
  expect(test.screen98.timer2, 0);
  expect(test.screen98.timer3, 0);
  expect(test.screen98.dsp_flg1, 0);
  expect(test.screen98.dsp_flg2, 0);
  expect(test.screen98.movie01_ext, 0);
  expect(test.screen98.movie02_ext, 0);
  expect(test.screen98.movie03_ext, 0);
  expect(test.screen98.movie04_ext, 0);
  expect(test.screen98.line_title, "");
  expect(test.screen98.line_title_ex, "");
  expect(test.screen98.line1, "");
  expect(test.screen98.line2, "");
  expect(test.screen98.line3, "");
  expect(test.screen98.line4, "");
  expect(test.screen98.line1_ex, "");
  expect(test.screen98.line2_ex, "");
  expect(test.screen98.line3_ex, "");
  expect(test.screen98.line4_ex, "");
  expect(test.screen98.sound_led1, 0);
  expect(test.screen98.sound_led2, 0);
  expect(test.screen98.sound_led3, 0);
  expect(test.screen99.title, "");
  expect(test.screen99.msg1, "");
  expect(test.screen99.msg2, "");
  expect(test.screen99.msg1_size, 0);
  expect(test.screen99.msg2_size, 0);
  expect(test.screen99.sound1, 0);
  expect(test.screen99.sound2, 0);
  expect(test.screen99.sound3, 0);
  expect(test.screen99.snd_timer, 0);
  expect(test.screen99.timer1, 0);
  expect(test.screen99.timer2, 0);
  expect(test.screen99.timer3, 0);
  expect(test.screen99.dsp_flg1, 0);
  expect(test.screen99.dsp_flg2, 0);
  expect(test.screen99.movie01_ext, 0);
  expect(test.screen99.movie02_ext, 0);
  expect(test.screen99.movie03_ext, 0);
  expect(test.screen99.movie04_ext, 0);
  expect(test.screen99.line_title, "");
  expect(test.screen99.line_title_ex, "");
  expect(test.screen99.line1, "");
  expect(test.screen99.line2, "");
  expect(test.screen99.line3, "");
  expect(test.screen99.line4, "");
  expect(test.screen99.line1_ex, "");
  expect(test.screen99.line2_ex, "");
  expect(test.screen99.line3_ex, "");
  expect(test.screen99.line4_ex, "");
  expect(test.screen99.sound_led1, 0);
  expect(test.screen99.sound_led2, 0);
  expect(test.screen99.sound_led3, 0);
  expect(test.screen100.title, "");
  expect(test.screen100.msg1, "");
  expect(test.screen100.msg2, "");
  expect(test.screen100.msg1_size, 0);
  expect(test.screen100.msg2_size, 0);
  expect(test.screen100.sound1, 0);
  expect(test.screen100.sound2, 0);
  expect(test.screen100.sound3, 0);
  expect(test.screen100.snd_timer, 0);
  expect(test.screen100.timer1, 0);
  expect(test.screen100.timer2, 0);
  expect(test.screen100.timer3, 0);
  expect(test.screen100.dsp_flg1, 0);
  expect(test.screen100.dsp_flg2, 0);
  expect(test.screen100.movie01_ext, 0);
  expect(test.screen100.movie02_ext, 0);
  expect(test.screen100.movie03_ext, 0);
  expect(test.screen100.movie04_ext, 0);
  expect(test.screen100.line_title, "");
  expect(test.screen100.line_title_ex, "");
  expect(test.screen100.line1, "");
  expect(test.screen100.line2, "");
  expect(test.screen100.line3, "");
  expect(test.screen100.line4, "");
  expect(test.screen100.line1_ex, "");
  expect(test.screen100.line2_ex, "");
  expect(test.screen100.line3_ex, "");
  expect(test.screen100.line4_ex, "");
  expect(test.screen100.sound_led1, 0);
  expect(test.screen100.sound_led2, 0);
  expect(test.screen100.sound_led3, 0);
  expect(test.screen101.title, "");
  expect(test.screen101.msg1, "");
  expect(test.screen101.msg2, "");
  expect(test.screen101.msg1_size, 0);
  expect(test.screen101.msg2_size, 0);
  expect(test.screen101.sound1, 0);
  expect(test.screen101.sound2, 0);
  expect(test.screen101.sound3, 0);
  expect(test.screen101.snd_timer, 0);
  expect(test.screen101.timer1, 0);
  expect(test.screen101.timer2, 0);
  expect(test.screen101.timer3, 0);
  expect(test.screen101.dsp_flg1, 0);
  expect(test.screen101.dsp_flg2, 0);
  expect(test.screen101.movie01_ext, 0);
  expect(test.screen101.movie02_ext, 0);
  expect(test.screen101.movie03_ext, 0);
  expect(test.screen101.movie04_ext, 0);
  expect(test.screen101.line_title, "");
  expect(test.screen101.line_title_ex, "");
  expect(test.screen101.line1, "");
  expect(test.screen101.line2, "");
  expect(test.screen101.line3, "");
  expect(test.screen101.line4, "");
  expect(test.screen101.line1_ex, "");
  expect(test.screen101.line2_ex, "");
  expect(test.screen101.line3_ex, "");
  expect(test.screen101.line4_ex, "");
  expect(test.screen101.sound_led1, 0);
  expect(test.screen101.sound_led2, 0);
  expect(test.screen101.sound_led3, 0);
  expect(test.screen102.title, "");
  expect(test.screen102.msg1, "");
  expect(test.screen102.msg2, "");
  expect(test.screen102.msg1_size, 0);
  expect(test.screen102.msg2_size, 0);
  expect(test.screen102.sound1, 0);
  expect(test.screen102.sound2, 0);
  expect(test.screen102.sound3, 0);
  expect(test.screen102.snd_timer, 0);
  expect(test.screen102.timer1, 0);
  expect(test.screen102.timer2, 0);
  expect(test.screen102.timer3, 0);
  expect(test.screen102.dsp_flg1, 0);
  expect(test.screen102.dsp_flg2, 0);
  expect(test.screen102.movie01_ext, 0);
  expect(test.screen102.movie02_ext, 0);
  expect(test.screen102.movie03_ext, 0);
  expect(test.screen102.movie04_ext, 0);
  expect(test.screen102.line_title, "");
  expect(test.screen102.line_title_ex, "");
  expect(test.screen102.line1, "");
  expect(test.screen102.line2, "");
  expect(test.screen102.line3, "");
  expect(test.screen102.line4, "");
  expect(test.screen102.line1_ex, "");
  expect(test.screen102.line2_ex, "");
  expect(test.screen102.line3_ex, "");
  expect(test.screen102.line4_ex, "");
  expect(test.screen102.sound_led1, 0);
  expect(test.screen102.sound_led2, 0);
  expect(test.screen102.sound_led3, 0);
  expect(test.screen103.title, "");
  expect(test.screen103.msg1, "");
  expect(test.screen103.msg2, "");
  expect(test.screen103.msg1_size, 0);
  expect(test.screen103.msg2_size, 0);
  expect(test.screen103.sound1, 0);
  expect(test.screen103.sound2, 0);
  expect(test.screen103.sound3, 0);
  expect(test.screen103.snd_timer, 0);
  expect(test.screen103.timer1, 0);
  expect(test.screen103.timer2, 0);
  expect(test.screen103.timer3, 0);
  expect(test.screen103.dsp_flg1, 0);
  expect(test.screen103.dsp_flg2, 0);
  expect(test.screen103.movie01_ext, 0);
  expect(test.screen103.movie02_ext, 0);
  expect(test.screen103.movie03_ext, 0);
  expect(test.screen103.movie04_ext, 0);
  expect(test.screen103.line_title, "");
  expect(test.screen103.line_title_ex, "");
  expect(test.screen103.line1, "");
  expect(test.screen103.line2, "");
  expect(test.screen103.line3, "");
  expect(test.screen103.line4, "");
  expect(test.screen103.line1_ex, "");
  expect(test.screen103.line2_ex, "");
  expect(test.screen103.line3_ex, "");
  expect(test.screen103.line4_ex, "");
  expect(test.screen103.sound_led1, 0);
  expect(test.screen103.sound_led2, 0);
  expect(test.screen103.sound_led3, 0);
  expect(test.screen104.title, "");
  expect(test.screen104.msg1, "");
  expect(test.screen104.msg2, "");
  expect(test.screen104.msg1_size, 0);
  expect(test.screen104.msg2_size, 0);
  expect(test.screen104.sound1, 0);
  expect(test.screen104.sound2, 0);
  expect(test.screen104.sound3, 0);
  expect(test.screen104.snd_timer, 0);
  expect(test.screen104.timer1, 0);
  expect(test.screen104.timer2, 0);
  expect(test.screen104.timer3, 0);
  expect(test.screen104.dsp_flg1, 0);
  expect(test.screen104.dsp_flg2, 0);
  expect(test.screen104.movie01_ext, 0);
  expect(test.screen104.movie02_ext, 0);
  expect(test.screen104.movie03_ext, 0);
  expect(test.screen104.movie04_ext, 0);
  expect(test.screen104.line_title, "");
  expect(test.screen104.line_title_ex, "");
  expect(test.screen104.line1, "");
  expect(test.screen104.line2, "");
  expect(test.screen104.line3, "");
  expect(test.screen104.line4, "");
  expect(test.screen104.line1_ex, "");
  expect(test.screen104.line2_ex, "");
  expect(test.screen104.line3_ex, "");
  expect(test.screen104.line4_ex, "");
  expect(test.screen104.sound_led1, 0);
  expect(test.screen104.sound_led2, 0);
  expect(test.screen104.sound_led3, 0);
  expect(test.screen105.title, "");
  expect(test.screen105.msg1, "");
  expect(test.screen105.msg2, "");
  expect(test.screen105.msg1_size, 0);
  expect(test.screen105.msg2_size, 0);
  expect(test.screen105.sound1, 0);
  expect(test.screen105.sound2, 0);
  expect(test.screen105.sound3, 0);
  expect(test.screen105.snd_timer, 0);
  expect(test.screen105.timer1, 0);
  expect(test.screen105.timer2, 0);
  expect(test.screen105.timer3, 0);
  expect(test.screen105.dsp_flg1, 0);
  expect(test.screen105.dsp_flg2, 0);
  expect(test.screen105.movie01_ext, 0);
  expect(test.screen105.movie02_ext, 0);
  expect(test.screen105.movie03_ext, 0);
  expect(test.screen105.movie04_ext, 0);
  expect(test.screen105.line_title, "");
  expect(test.screen105.line_title_ex, "");
  expect(test.screen105.line1, "");
  expect(test.screen105.line2, "");
  expect(test.screen105.line3, "");
  expect(test.screen105.line4, "");
  expect(test.screen105.line1_ex, "");
  expect(test.screen105.line2_ex, "");
  expect(test.screen105.line3_ex, "");
  expect(test.screen105.line4_ex, "");
  expect(test.screen105.sound_led1, 0);
  expect(test.screen105.sound_led2, 0);
  expect(test.screen105.sound_led3, 0);
  expect(test.screen106.title, "");
  expect(test.screen106.msg1, "");
  expect(test.screen106.msg2, "");
  expect(test.screen106.msg1_size, 0);
  expect(test.screen106.msg2_size, 0);
  expect(test.screen106.sound1, 0);
  expect(test.screen106.sound2, 0);
  expect(test.screen106.sound3, 0);
  expect(test.screen106.snd_timer, 0);
  expect(test.screen106.timer1, 0);
  expect(test.screen106.timer2, 0);
  expect(test.screen106.timer3, 0);
  expect(test.screen106.dsp_flg1, 0);
  expect(test.screen106.dsp_flg2, 0);
  expect(test.screen106.movie01_ext, 0);
  expect(test.screen106.movie02_ext, 0);
  expect(test.screen106.movie03_ext, 0);
  expect(test.screen106.movie04_ext, 0);
  expect(test.screen106.line_title, "");
  expect(test.screen106.line_title_ex, "");
  expect(test.screen106.line1, "");
  expect(test.screen106.line2, "");
  expect(test.screen106.line3, "");
  expect(test.screen106.line4, "");
  expect(test.screen106.line1_ex, "");
  expect(test.screen106.line2_ex, "");
  expect(test.screen106.line3_ex, "");
  expect(test.screen106.line4_ex, "");
  expect(test.screen106.sound_led1, 0);
  expect(test.screen106.sound_led2, 0);
  expect(test.screen106.sound_led3, 0);
  expect(test.screen107.title, "");
  expect(test.screen107.msg1, "");
  expect(test.screen107.msg2, "");
  expect(test.screen107.msg1_size, 0);
  expect(test.screen107.msg2_size, 0);
  expect(test.screen107.sound1, 0);
  expect(test.screen107.sound2, 0);
  expect(test.screen107.sound3, 0);
  expect(test.screen107.snd_timer, 0);
  expect(test.screen107.timer1, 0);
  expect(test.screen107.timer2, 0);
  expect(test.screen107.timer3, 0);
  expect(test.screen107.dsp_flg1, 0);
  expect(test.screen107.dsp_flg2, 0);
  expect(test.screen107.movie01_ext, 0);
  expect(test.screen107.movie02_ext, 0);
  expect(test.screen107.movie03_ext, 0);
  expect(test.screen107.movie04_ext, 0);
  expect(test.screen107.line_title, "");
  expect(test.screen107.line_title_ex, "");
  expect(test.screen107.line1, "");
  expect(test.screen107.line2, "");
  expect(test.screen107.line3, "");
  expect(test.screen107.line4, "");
  expect(test.screen107.line1_ex, "");
  expect(test.screen107.line2_ex, "");
  expect(test.screen107.line3_ex, "");
  expect(test.screen107.line4_ex, "");
  expect(test.screen107.sound_led1, 0);
  expect(test.screen107.sound_led2, 0);
  expect(test.screen107.sound_led3, 0);
  expect(test.screen109.title, "");
  expect(test.screen109.msg1, "");
  expect(test.screen109.msg2, "");
  expect(test.screen109.msg1_size, 0);
  expect(test.screen109.msg2_size, 0);
  expect(test.screen109.sound1, 0);
  expect(test.screen109.sound2, 0);
  expect(test.screen109.sound3, 0);
  expect(test.screen109.snd_timer, 0);
  expect(test.screen109.timer1, 0);
  expect(test.screen109.timer2, 0);
  expect(test.screen109.timer3, 0);
  expect(test.screen109.dsp_flg1, 0);
  expect(test.screen109.dsp_flg2, 0);
  expect(test.screen109.movie01_ext, 0);
  expect(test.screen109.movie02_ext, 0);
  expect(test.screen109.movie03_ext, 0);
  expect(test.screen109.movie04_ext, 0);
  expect(test.screen109.line_title, "");
  expect(test.screen109.line_title_ex, "");
  expect(test.screen109.line1, "");
  expect(test.screen109.line2, "");
  expect(test.screen109.line3, "");
  expect(test.screen109.line4, "");
  expect(test.screen109.line1_ex, "");
  expect(test.screen109.line2_ex, "");
  expect(test.screen109.line3_ex, "");
  expect(test.screen109.line4_ex, "");
  expect(test.screen109.sound_led1, 0);
  expect(test.screen109.sound_led2, 0);
  expect(test.screen109.sound_led3, 0);
  expect(test.screen111.title, "");
  expect(test.screen111.msg1, "");
  expect(test.screen111.msg2, "");
  expect(test.screen111.msg1_size, 0);
  expect(test.screen111.msg2_size, 0);
  expect(test.screen111.sound1, 0);
  expect(test.screen111.sound2, 0);
  expect(test.screen111.sound3, 0);
  expect(test.screen111.snd_timer, 0);
  expect(test.screen111.timer1, 0);
  expect(test.screen111.timer2, 0);
  expect(test.screen111.timer3, 0);
  expect(test.screen111.dsp_flg1, 0);
  expect(test.screen111.dsp_flg2, 0);
  expect(test.screen111.movie01_ext, 0);
  expect(test.screen111.movie02_ext, 0);
  expect(test.screen111.movie03_ext, 0);
  expect(test.screen111.movie04_ext, 0);
  expect(test.screen111.line_title, "");
  expect(test.screen111.line_title_ex, "");
  expect(test.screen111.line1, "");
  expect(test.screen111.line2, "");
  expect(test.screen111.line3, "");
  expect(test.screen111.line4, "");
  expect(test.screen111.line1_ex, "");
  expect(test.screen111.line2_ex, "");
  expect(test.screen111.line3_ex, "");
  expect(test.screen111.line4_ex, "");
  expect(test.screen111.sound_led1, 0);
  expect(test.screen111.sound_led2, 0);
  expect(test.screen111.sound_led3, 0);
  expect(test.screen112.title, "");
  expect(test.screen112.msg1, "");
  expect(test.screen112.msg2, "");
  expect(test.screen112.msg1_size, 0);
  expect(test.screen112.msg2_size, 0);
  expect(test.screen112.sound1, 0);
  expect(test.screen112.sound2, 0);
  expect(test.screen112.sound3, 0);
  expect(test.screen112.snd_timer, 0);
  expect(test.screen112.timer1, 0);
  expect(test.screen112.timer2, 0);
  expect(test.screen112.timer3, 0);
  expect(test.screen112.dsp_flg1, 0);
  expect(test.screen112.dsp_flg2, 0);
  expect(test.screen112.movie01_ext, 0);
  expect(test.screen112.movie02_ext, 0);
  expect(test.screen112.movie03_ext, 0);
  expect(test.screen112.movie04_ext, 0);
  expect(test.screen112.line_title, "");
  expect(test.screen112.line_title_ex, "");
  expect(test.screen112.line1, "");
  expect(test.screen112.line2, "");
  expect(test.screen112.line3, "");
  expect(test.screen112.line4, "");
  expect(test.screen112.line1_ex, "");
  expect(test.screen112.line2_ex, "");
  expect(test.screen112.line3_ex, "");
  expect(test.screen112.line4_ex, "");
  expect(test.screen112.sound_led1, 0);
  expect(test.screen112.sound_led2, 0);
  expect(test.screen112.sound_led3, 0);
  expect(test.screen113.title, "");
  expect(test.screen113.msg1, "");
  expect(test.screen113.msg2, "");
  expect(test.screen113.msg1_size, 0);
  expect(test.screen113.msg2_size, 0);
  expect(test.screen113.sound1, 0);
  expect(test.screen113.sound2, 0);
  expect(test.screen113.sound3, 0);
  expect(test.screen113.snd_timer, 0);
  expect(test.screen113.timer1, 0);
  expect(test.screen113.timer2, 0);
  expect(test.screen113.timer3, 0);
  expect(test.screen113.dsp_flg1, 0);
  expect(test.screen113.dsp_flg2, 0);
  expect(test.screen113.movie01_ext, 0);
  expect(test.screen113.movie02_ext, 0);
  expect(test.screen113.movie03_ext, 0);
  expect(test.screen113.movie04_ext, 0);
  expect(test.screen113.line_title, "");
  expect(test.screen113.line_title_ex, "");
  expect(test.screen113.line1, "");
  expect(test.screen113.line2, "");
  expect(test.screen113.line3, "");
  expect(test.screen113.line4, "");
  expect(test.screen113.line1_ex, "");
  expect(test.screen113.line2_ex, "");
  expect(test.screen113.line3_ex, "");
  expect(test.screen113.line4_ex, "");
  expect(test.screen113.sound_led1, 0);
  expect(test.screen113.sound_led2, 0);
  expect(test.screen113.sound_led3, 0);
  expect(test.screen114.title, "");
  expect(test.screen114.msg1, "");
  expect(test.screen114.msg2, "");
  expect(test.screen114.msg1_size, 0);
  expect(test.screen114.msg2_size, 0);
  expect(test.screen114.sound1, 0);
  expect(test.screen114.sound2, 0);
  expect(test.screen114.sound3, 0);
  expect(test.screen114.snd_timer, 0);
  expect(test.screen114.timer1, 0);
  expect(test.screen114.timer2, 0);
  expect(test.screen114.timer3, 0);
  expect(test.screen114.dsp_flg1, 0);
  expect(test.screen114.dsp_flg2, 0);
  expect(test.screen114.movie01_ext, 0);
  expect(test.screen114.movie02_ext, 0);
  expect(test.screen114.movie03_ext, 0);
  expect(test.screen114.movie04_ext, 0);
  expect(test.screen114.line_title, "");
  expect(test.screen114.line_title_ex, "");
  expect(test.screen114.line1, "");
  expect(test.screen114.line2, "");
  expect(test.screen114.line3, "");
  expect(test.screen114.line4, "");
  expect(test.screen114.line1_ex, "");
  expect(test.screen114.line2_ex, "");
  expect(test.screen114.line3_ex, "");
  expect(test.screen114.line4_ex, "");
  expect(test.screen114.sound_led1, 0);
  expect(test.screen114.sound_led2, 0);
  expect(test.screen114.sound_led3, 0);
  expect(test.screen115.title, "");
  expect(test.screen115.msg1, "");
  expect(test.screen115.msg2, "");
  expect(test.screen115.msg1_size, 0);
  expect(test.screen115.msg2_size, 0);
  expect(test.screen115.sound1, 0);
  expect(test.screen115.sound2, 0);
  expect(test.screen115.sound3, 0);
  expect(test.screen115.snd_timer, 0);
  expect(test.screen115.timer1, 0);
  expect(test.screen115.timer2, 0);
  expect(test.screen115.timer3, 0);
  expect(test.screen115.dsp_flg1, 0);
  expect(test.screen115.dsp_flg2, 0);
  expect(test.screen115.movie01_ext, 0);
  expect(test.screen115.movie02_ext, 0);
  expect(test.screen115.movie03_ext, 0);
  expect(test.screen115.movie04_ext, 0);
  expect(test.screen115.line_title, "");
  expect(test.screen115.line_title_ex, "");
  expect(test.screen115.line1, "");
  expect(test.screen115.line2, "");
  expect(test.screen115.line3, "");
  expect(test.screen115.line4, "");
  expect(test.screen115.line1_ex, "");
  expect(test.screen115.line2_ex, "");
  expect(test.screen115.line3_ex, "");
  expect(test.screen115.line4_ex, "");
  expect(test.screen115.sound_led1, 0);
  expect(test.screen115.sound_led2, 0);
  expect(test.screen115.sound_led3, 0);
  expect(test.screen116.title, "");
  expect(test.screen116.msg1, "");
  expect(test.screen116.msg2, "");
  expect(test.screen116.msg1_size, 0);
  expect(test.screen116.msg2_size, 0);
  expect(test.screen116.sound1, 0);
  expect(test.screen116.sound2, 0);
  expect(test.screen116.sound3, 0);
  expect(test.screen116.snd_timer, 0);
  expect(test.screen116.timer1, 0);
  expect(test.screen116.timer2, 0);
  expect(test.screen116.timer3, 0);
  expect(test.screen116.dsp_flg1, 0);
  expect(test.screen116.dsp_flg2, 0);
  expect(test.screen116.movie01_ext, 0);
  expect(test.screen116.movie02_ext, 0);
  expect(test.screen116.movie03_ext, 0);
  expect(test.screen116.movie04_ext, 0);
  expect(test.screen116.line_title, "");
  expect(test.screen116.line_title_ex, "");
  expect(test.screen116.line1, "");
  expect(test.screen116.line2, "");
  expect(test.screen116.line3, "");
  expect(test.screen116.line4, "");
  expect(test.screen116.line1_ex, "");
  expect(test.screen116.line2_ex, "");
  expect(test.screen116.line3_ex, "");
  expect(test.screen116.line4_ex, "");
  expect(test.screen116.sound_led1, 0);
  expect(test.screen116.sound_led2, 0);
  expect(test.screen116.sound_led3, 0);
  expect(test.screen117.title, "");
  expect(test.screen117.msg1, "");
  expect(test.screen117.msg2, "");
  expect(test.screen117.msg1_size, 0);
  expect(test.screen117.msg2_size, 0);
  expect(test.screen117.sound1, 0);
  expect(test.screen117.sound2, 0);
  expect(test.screen117.sound3, 0);
  expect(test.screen117.snd_timer, 0);
  expect(test.screen117.timer1, 0);
  expect(test.screen117.timer2, 0);
  expect(test.screen117.timer3, 0);
  expect(test.screen117.dsp_flg1, 0);
  expect(test.screen117.dsp_flg2, 0);
  expect(test.screen117.movie01_ext, 0);
  expect(test.screen117.movie02_ext, 0);
  expect(test.screen117.movie03_ext, 0);
  expect(test.screen117.movie04_ext, 0);
  expect(test.screen117.line_title, "");
  expect(test.screen117.line_title_ex, "");
  expect(test.screen117.line1, "");
  expect(test.screen117.line2, "");
  expect(test.screen117.line3, "");
  expect(test.screen117.line4, "");
  expect(test.screen117.line1_ex, "");
  expect(test.screen117.line2_ex, "");
  expect(test.screen117.line3_ex, "");
  expect(test.screen117.line4_ex, "");
  expect(test.screen117.sound_led1, 0);
  expect(test.screen117.sound_led2, 0);
  expect(test.screen117.sound_led3, 0);
  expect(test.screen118.title, "");
  expect(test.screen118.msg1, "");
  expect(test.screen118.msg2, "");
  expect(test.screen118.msg1_size, 0);
  expect(test.screen118.msg2_size, 0);
  expect(test.screen118.sound1, 0);
  expect(test.screen118.sound2, 0);
  expect(test.screen118.sound3, 0);
  expect(test.screen118.snd_timer, 0);
  expect(test.screen118.timer1, 0);
  expect(test.screen118.timer2, 0);
  expect(test.screen118.timer3, 0);
  expect(test.screen118.dsp_flg1, 0);
  expect(test.screen118.dsp_flg2, 0);
  expect(test.screen118.movie01_ext, 0);
  expect(test.screen118.movie02_ext, 0);
  expect(test.screen118.movie03_ext, 0);
  expect(test.screen118.movie04_ext, 0);
  expect(test.screen118.line_title, "");
  expect(test.screen118.line_title_ex, "");
  expect(test.screen118.line1, "");
  expect(test.screen118.line2, "");
  expect(test.screen118.line3, "");
  expect(test.screen118.line4, "");
  expect(test.screen118.line1_ex, "");
  expect(test.screen118.line2_ex, "");
  expect(test.screen118.line3_ex, "");
  expect(test.screen118.line4_ex, "");
  expect(test.screen118.sound_led1, 0);
  expect(test.screen118.sound_led2, 0);
  expect(test.screen118.sound_led3, 0);
  expect(test.screen119.title, "");
  expect(test.screen119.msg1, "");
  expect(test.screen119.msg2, "");
  expect(test.screen119.msg1_size, 0);
  expect(test.screen119.msg2_size, 0);
  expect(test.screen119.sound1, 0);
  expect(test.screen119.sound2, 0);
  expect(test.screen119.sound3, 0);
  expect(test.screen119.snd_timer, 0);
  expect(test.screen119.timer1, 0);
  expect(test.screen119.timer2, 0);
  expect(test.screen119.timer3, 0);
  expect(test.screen119.dsp_flg1, 0);
  expect(test.screen119.dsp_flg2, 0);
  expect(test.screen119.movie01_ext, 0);
  expect(test.screen119.movie02_ext, 0);
  expect(test.screen119.movie03_ext, 0);
  expect(test.screen119.movie04_ext, 0);
  expect(test.screen119.line_title, "");
  expect(test.screen119.line_title_ex, "");
  expect(test.screen119.line1, "");
  expect(test.screen119.line2, "");
  expect(test.screen119.line3, "");
  expect(test.screen119.line4, "");
  expect(test.screen119.line1_ex, "");
  expect(test.screen119.line2_ex, "");
  expect(test.screen119.line3_ex, "");
  expect(test.screen119.line4_ex, "");
  expect(test.screen119.sound_led1, 0);
  expect(test.screen119.sound_led2, 0);
  expect(test.screen119.sound_led3, 0);
  expect(test.screen120.title, "");
  expect(test.screen120.msg1, "");
  expect(test.screen120.msg2, "");
  expect(test.screen120.msg1_size, 0);
  expect(test.screen120.msg2_size, 0);
  expect(test.screen120.sound1, 0);
  expect(test.screen120.sound2, 0);
  expect(test.screen120.sound3, 0);
  expect(test.screen120.snd_timer, 0);
  expect(test.screen120.timer1, 0);
  expect(test.screen120.timer2, 0);
  expect(test.screen120.timer3, 0);
  expect(test.screen120.dsp_flg1, 0);
  expect(test.screen120.dsp_flg2, 0);
  expect(test.screen120.movie01_ext, 0);
  expect(test.screen120.movie02_ext, 0);
  expect(test.screen120.movie03_ext, 0);
  expect(test.screen120.movie04_ext, 0);
  expect(test.screen120.line_title, "");
  expect(test.screen120.line_title_ex, "");
  expect(test.screen120.line1, "");
  expect(test.screen120.line2, "");
  expect(test.screen120.line3, "");
  expect(test.screen120.line4, "");
  expect(test.screen120.line1_ex, "");
  expect(test.screen120.line2_ex, "");
  expect(test.screen120.line3_ex, "");
  expect(test.screen120.line4_ex, "");
  expect(test.screen120.sound_led1, 0);
  expect(test.screen120.sound_led2, 0);
  expect(test.screen120.sound_led3, 0);
  expect(test.screen121.title, "");
  expect(test.screen121.msg1, "");
  expect(test.screen121.msg2, "");
  expect(test.screen121.msg1_size, 0);
  expect(test.screen121.msg2_size, 0);
  expect(test.screen121.sound1, 0);
  expect(test.screen121.sound2, 0);
  expect(test.screen121.sound3, 0);
  expect(test.screen121.snd_timer, 0);
  expect(test.screen121.timer1, 0);
  expect(test.screen121.timer2, 0);
  expect(test.screen121.timer3, 0);
  expect(test.screen121.dsp_flg1, 0);
  expect(test.screen121.dsp_flg2, 0);
  expect(test.screen121.movie01_ext, 0);
  expect(test.screen121.movie02_ext, 0);
  expect(test.screen121.movie03_ext, 0);
  expect(test.screen121.movie04_ext, 0);
  expect(test.screen121.line_title, "");
  expect(test.screen121.line_title_ex, "");
  expect(test.screen121.line1, "");
  expect(test.screen121.line2, "");
  expect(test.screen121.line3, "");
  expect(test.screen121.line4, "");
  expect(test.screen121.line1_ex, "");
  expect(test.screen121.line2_ex, "");
  expect(test.screen121.line3_ex, "");
  expect(test.screen121.line4_ex, "");
  expect(test.screen121.sound_led1, 0);
  expect(test.screen121.sound_led2, 0);
  expect(test.screen121.sound_led3, 0);
  expect(test.screen122.title, "");
  expect(test.screen122.msg1, "");
  expect(test.screen122.msg2, "");
  expect(test.screen122.msg1_size, 0);
  expect(test.screen122.msg2_size, 0);
  expect(test.screen122.sound1, 0);
  expect(test.screen122.sound2, 0);
  expect(test.screen122.sound3, 0);
  expect(test.screen122.snd_timer, 0);
  expect(test.screen122.timer1, 0);
  expect(test.screen122.timer2, 0);
  expect(test.screen122.timer3, 0);
  expect(test.screen122.dsp_flg1, 0);
  expect(test.screen122.dsp_flg2, 0);
  expect(test.screen122.movie01_ext, 0);
  expect(test.screen122.movie02_ext, 0);
  expect(test.screen122.movie03_ext, 0);
  expect(test.screen122.movie04_ext, 0);
  expect(test.screen122.line_title, "");
  expect(test.screen122.line_title_ex, "");
  expect(test.screen122.line1, "");
  expect(test.screen122.line2, "");
  expect(test.screen122.line3, "");
  expect(test.screen122.line4, "");
  expect(test.screen122.line1_ex, "");
  expect(test.screen122.line2_ex, "");
  expect(test.screen122.line3_ex, "");
  expect(test.screen122.line4_ex, "");
  expect(test.screen122.sound_led1, 0);
  expect(test.screen122.sound_led2, 0);
  expect(test.screen122.sound_led3, 0);
  expect(test.screen123.title, "");
  expect(test.screen123.msg1, "");
  expect(test.screen123.msg2, "");
  expect(test.screen123.msg1_size, 0);
  expect(test.screen123.msg2_size, 0);
  expect(test.screen123.sound1, 0);
  expect(test.screen123.sound2, 0);
  expect(test.screen123.sound3, 0);
  expect(test.screen123.snd_timer, 0);
  expect(test.screen123.timer1, 0);
  expect(test.screen123.timer2, 0);
  expect(test.screen123.timer3, 0);
  expect(test.screen123.dsp_flg1, 0);
  expect(test.screen123.dsp_flg2, 0);
  expect(test.screen123.movie01_ext, 0);
  expect(test.screen123.movie02_ext, 0);
  expect(test.screen123.movie03_ext, 0);
  expect(test.screen123.movie04_ext, 0);
  expect(test.screen123.line_title, "");
  expect(test.screen123.line_title_ex, "");
  expect(test.screen123.line1, "");
  expect(test.screen123.line2, "");
  expect(test.screen123.line3, "");
  expect(test.screen123.line4, "");
  expect(test.screen123.line1_ex, "");
  expect(test.screen123.line2_ex, "");
  expect(test.screen123.line3_ex, "");
  expect(test.screen123.line4_ex, "");
  expect(test.screen123.sound_led1, 0);
  expect(test.screen123.sound_led2, 0);
  expect(test.screen123.sound_led3, 0);
  expect(test.screen124.title, "");
  expect(test.screen124.msg1, "");
  expect(test.screen124.msg2, "");
  expect(test.screen124.msg1_size, 0);
  expect(test.screen124.msg2_size, 0);
  expect(test.screen124.sound1, 0);
  expect(test.screen124.sound2, "");
  expect(test.screen124.sound3, "");
  expect(test.screen124.snd_timer, 0);
  expect(test.screen124.timer1, 0);
  expect(test.screen124.timer2, 0);
  expect(test.screen124.timer3, 0);
  expect(test.screen124.dsp_flg1, 0);
  expect(test.screen124.dsp_flg2, 0);
  expect(test.screen124.movie01_ext, 0);
  expect(test.screen124.movie02_ext, 0);
  expect(test.screen124.movie03_ext, 0);
  expect(test.screen124.movie04_ext, 0);
  expect(test.screen124.line_title, "");
  expect(test.screen124.line_title_ex, "");
  expect(test.screen124.line1, "");
  expect(test.screen124.line2, "");
  expect(test.screen124.line3, "");
  expect(test.screen124.line4, "");
  expect(test.screen124.line1_ex, "");
  expect(test.screen124.line2_ex, "");
  expect(test.screen124.line3_ex, "");
  expect(test.screen124.line4_ex, "");
  expect(test.screen124.sound_led1, 0);
  expect(test.screen124.sound_led2, "");
  expect(test.screen124.sound_led3, "");
  expect(test.screen125.title, "");
  expect(test.screen125.msg1, "");
  expect(test.screen125.msg2, "");
  expect(test.screen125.msg1_size, 0);
  expect(test.screen125.msg2_size, "");
  expect(test.screen125.sound1, 0);
  expect(test.screen125.sound2, 0);
  expect(test.screen125.sound3, 0);
  expect(test.screen125.snd_timer, 0);
  expect(test.screen125.timer1, 0);
  expect(test.screen125.timer2, 0);
  expect(test.screen125.timer3, 0);
  expect(test.screen125.dsp_flg1, 0);
  expect(test.screen125.dsp_flg2, 0);
  expect(test.screen125.movie01_ext, 0);
  expect(test.screen125.movie02_ext, 0);
  expect(test.screen125.movie03_ext, 0);
  expect(test.screen125.movie04_ext, 0);
  expect(test.screen125.line_title, "");
  expect(test.screen125.line_title_ex, "");
  expect(test.screen125.line1, "");
  expect(test.screen125.line2, "");
  expect(test.screen125.line3, "");
  expect(test.screen125.line4, "");
  expect(test.screen125.line1_ex, "");
  expect(test.screen125.line2_ex, "");
  expect(test.screen125.line3_ex, "");
  expect(test.screen125.line4_ex, "");
  expect(test.screen125.sound_led1, 0);
  expect(test.screen125.sound_led2, 0);
  expect(test.screen125.sound_led3, 0);
  expect(test.screen126.title, "");
  expect(test.screen126.msg1, "");
  expect(test.screen126.msg2, "");
  expect(test.screen126.msg1_size, 0);
  expect(test.screen126.msg2_size, "");
  expect(test.screen126.sound1, 0);
  expect(test.screen126.sound2, 0);
  expect(test.screen126.sound3, 0);
  expect(test.screen126.snd_timer, 0);
  expect(test.screen126.timer1, 0);
  expect(test.screen126.timer2, 0);
  expect(test.screen126.timer3, 0);
  expect(test.screen126.dsp_flg1, 0);
  expect(test.screen126.dsp_flg2, 0);
  expect(test.screen126.movie01_ext, 0);
  expect(test.screen126.movie02_ext, 0);
  expect(test.screen126.movie03_ext, 0);
  expect(test.screen126.movie04_ext, 0);
  expect(test.screen126.line_title, "");
  expect(test.screen126.line_title_ex, "");
  expect(test.screen126.line1, "");
  expect(test.screen126.line2, "");
  expect(test.screen126.line3, "");
  expect(test.screen126.line4, "");
  expect(test.screen126.line1_ex, "");
  expect(test.screen126.line2_ex, "");
  expect(test.screen126.line3_ex, "");
  expect(test.screen126.line4_ex, "");
  expect(test.screen126.sound_led1, 0);
  expect(test.screen126.sound_led2, 0);
  expect(test.screen126.sound_led3, 0);
  expect(test.screen127.title, "");
  expect(test.screen127.msg1, "");
  expect(test.screen127.msg2, "");
  expect(test.screen127.msg1_size, 0);
  expect(test.screen127.msg2_size, 0);
  expect(test.screen127.sound1, 0);
  expect(test.screen127.sound2, 0);
  expect(test.screen127.sound3, 0);
  expect(test.screen127.snd_timer, 0);
  expect(test.screen127.timer1, 0);
  expect(test.screen127.timer2, 0);
  expect(test.screen127.timer3, 0);
  expect(test.screen127.dsp_flg1, 0);
  expect(test.screen127.dsp_flg2, 0);
  expect(test.screen127.movie01_ext, 0);
  expect(test.screen127.movie02_ext, 0);
  expect(test.screen127.movie03_ext, 0);
  expect(test.screen127.movie04_ext, 0);
  expect(test.screen127.line_title, "");
  expect(test.screen127.line_title_ex, "");
  expect(test.screen127.line1, "");
  expect(test.screen127.line2, "");
  expect(test.screen127.line3, "");
  expect(test.screen127.line4, "");
  expect(test.screen127.line1_ex, "");
  expect(test.screen127.line2_ex, "");
  expect(test.screen127.line3_ex, "");
  expect(test.screen127.line4_ex, "");
  expect(test.screen127.sound_led1, 0);
  expect(test.screen127.sound_led2, 0);
  expect(test.screen127.sound_led3, 0);
  expect(test.screen128.title, "");
  expect(test.screen128.msg1, "");
  expect(test.screen128.msg2, "");
  expect(test.screen128.msg1_size, 0);
  expect(test.screen128.msg2_size, 0);
  expect(test.screen128.sound1, 0);
  expect(test.screen128.sound2, 0);
  expect(test.screen128.sound3, 0);
  expect(test.screen128.snd_timer, 0);
  expect(test.screen128.timer1, 0);
  expect(test.screen128.timer2, 0);
  expect(test.screen128.timer3, 0);
  expect(test.screen128.dsp_flg1, 0);
  expect(test.screen128.dsp_flg2, 0);
  expect(test.screen128.movie01_ext, 0);
  expect(test.screen128.movie02_ext, 0);
  expect(test.screen128.movie03_ext, 0);
  expect(test.screen128.movie04_ext, 0);
  expect(test.screen128.line_title, "");
  expect(test.screen128.line_title_ex, "");
  expect(test.screen128.line1, "");
  expect(test.screen128.line2, "");
  expect(test.screen128.line3, "");
  expect(test.screen128.line4, "");
  expect(test.screen128.line1_ex, "");
  expect(test.screen128.line2_ex, "");
  expect(test.screen128.line3_ex, "");
  expect(test.screen128.line4_ex, "");
  expect(test.screen128.sound_led1, 0);
  expect(test.screen128.sound_led2, 0);
  expect(test.screen128.sound_led3, 0);
  expect(test.screen129.title, "");
  expect(test.screen129.msg1, "");
  expect(test.screen129.msg2, "");
  expect(test.screen129.msg1_size, 0);
  expect(test.screen129.msg2_size, 0);
  expect(test.screen129.sound1, 0);
  expect(test.screen129.sound2, 0);
  expect(test.screen129.sound3, 0);
  expect(test.screen129.snd_timer, 0);
  expect(test.screen129.timer1, 0);
  expect(test.screen129.timer2, 0);
  expect(test.screen129.timer3, 0);
  expect(test.screen129.dsp_flg1, 0);
  expect(test.screen129.dsp_flg2, 0);
  expect(test.screen129.movie01_ext, 0);
  expect(test.screen129.movie02_ext, 0);
  expect(test.screen129.movie03_ext, 0);
  expect(test.screen129.movie04_ext, 0);
  expect(test.screen129.line_title, "");
  expect(test.screen129.line_title_ex, "");
  expect(test.screen129.line1, "");
  expect(test.screen129.line2, "");
  expect(test.screen129.line3, "");
  expect(test.screen129.line4, "");
  expect(test.screen129.line1_ex, "");
  expect(test.screen129.line2_ex, "");
  expect(test.screen129.line3_ex, "");
  expect(test.screen129.line4_ex, "");
  expect(test.screen129.sound_led1, 0);
  expect(test.screen129.sound_led2, 0);
  expect(test.screen129.sound_led3, 0);
  expect(test.screen130.title, "");
  expect(test.screen130.msg1, "");
  expect(test.screen130.msg2, "");
  expect(test.screen130.msg1_size, 0);
  expect(test.screen130.msg2_size, 0);
  expect(test.screen130.sound1, 0);
  expect(test.screen130.sound2, "");
  expect(test.screen130.sound3, "");
  expect(test.screen130.snd_timer, 0);
  expect(test.screen130.timer1, 0);
  expect(test.screen130.timer2, 0);
  expect(test.screen130.timer3, 0);
  expect(test.screen130.dsp_flg1, 0);
  expect(test.screen130.dsp_flg2, 0);
  expect(test.screen130.movie01_ext, 0);
  expect(test.screen130.movie02_ext, 0);
  expect(test.screen130.movie03_ext, 0);
  expect(test.screen130.movie04_ext, 0);
  expect(test.screen130.line_title, "");
  expect(test.screen130.line_title_ex, "");
  expect(test.screen130.line1, "");
  expect(test.screen130.line2, "");
  expect(test.screen130.line3, "");
  expect(test.screen130.line4, "");
  expect(test.screen130.line1_ex, "");
  expect(test.screen130.line2_ex, "");
  expect(test.screen130.line3_ex, "");
  expect(test.screen130.line4_ex, "");
  expect(test.screen130.sound_led1, 0);
  expect(test.screen130.sound_led2, "");
  expect(test.screen130.sound_led3, "");
  expect(test.screen131.title, "");
  expect(test.screen131.msg1, "");
  expect(test.screen131.msg2, "");
  expect(test.screen131.msg1_size, 0);
  expect(test.screen131.msg2_size, 0);
  expect(test.screen131.sound1, 0);
  expect(test.screen131.sound2, 0);
  expect(test.screen131.sound3, 0);
  expect(test.screen131.snd_timer, 0);
  expect(test.screen131.timer1, 0);
  expect(test.screen131.timer2, 0);
  expect(test.screen131.timer3, 0);
  expect(test.screen131.dsp_flg1, 0);
  expect(test.screen131.dsp_flg2, 0);
  expect(test.screen131.movie01_ext, 0);
  expect(test.screen131.movie02_ext, 0);
  expect(test.screen131.movie03_ext, 0);
  expect(test.screen131.movie04_ext, 0);
  expect(test.screen131.line_title, "");
  expect(test.screen131.line_title_ex, "");
  expect(test.screen131.line1, "");
  expect(test.screen131.line2, "");
  expect(test.screen131.line3, "");
  expect(test.screen131.line4, "");
  expect(test.screen131.line1_ex, "");
  expect(test.screen131.line2_ex, "");
  expect(test.screen131.line3_ex, "");
  expect(test.screen131.line4_ex, "");
  expect(test.screen131.sound_led1, 0);
  expect(test.screen131.sound_led2, 0);
  expect(test.screen131.sound_led3, 0);
  expect(test.screen132.title, "");
  expect(test.screen132.msg1, "");
  expect(test.screen132.msg2, "");
  expect(test.screen132.msg1_size, 0);
  expect(test.screen132.msg2_size, "");
  expect(test.screen132.sound1, 0);
  expect(test.screen132.sound2, 0);
  expect(test.screen132.sound3, 0);
  expect(test.screen132.snd_timer, 0);
  expect(test.screen132.timer1, 0);
  expect(test.screen132.timer2, 0);
  expect(test.screen132.timer3, 0);
  expect(test.screen132.dsp_flg1, 0);
  expect(test.screen132.dsp_flg2, 0);
  expect(test.screen132.movie01_ext, 0);
  expect(test.screen132.movie02_ext, 0);
  expect(test.screen132.movie03_ext, 0);
  expect(test.screen132.movie04_ext, 0);
  expect(test.screen132.line_title, "");
  expect(test.screen132.line_title_ex, "");
  expect(test.screen132.line1, "");
  expect(test.screen132.line2, "");
  expect(test.screen132.line3, "");
  expect(test.screen132.line4, "");
  expect(test.screen132.line1_ex, "");
  expect(test.screen132.line2_ex, "");
  expect(test.screen132.line3_ex, "");
  expect(test.screen132.line4_ex, "");
  expect(test.screen132.sound_led1, 0);
  expect(test.screen132.sound_led2, 0);
  expect(test.screen132.sound_led3, 0);
  expect(test.screen133.title, "");
  expect(test.screen133.msg1, "");
  expect(test.screen133.msg2, "");
  expect(test.screen133.msg1_size, 0);
  expect(test.screen133.msg2_size, 0);
  expect(test.screen133.sound1, 0);
  expect(test.screen133.sound2, 0);
  expect(test.screen133.sound3, 0);
  expect(test.screen133.snd_timer, 0);
  expect(test.screen133.timer1, 0);
  expect(test.screen133.timer2, 0);
  expect(test.screen133.timer3, 0);
  expect(test.screen133.dsp_flg1, 0);
  expect(test.screen133.dsp_flg2, 0);
  expect(test.screen133.movie01_ext, 0);
  expect(test.screen133.movie02_ext, 0);
  expect(test.screen133.movie03_ext, 0);
  expect(test.screen133.movie04_ext, 0);
  expect(test.screen133.line_title, "");
  expect(test.screen133.line_title_ex, "");
  expect(test.screen133.line1, "");
  expect(test.screen133.line2, "");
  expect(test.screen133.line3, "");
  expect(test.screen133.line4, "");
  expect(test.screen133.line1_ex, "");
  expect(test.screen133.line2_ex, "");
  expect(test.screen133.line3_ex, "");
  expect(test.screen133.line4_ex, "");
  expect(test.screen133.sound_led1, 0);
  expect(test.screen133.sound_led2, 0);
  expect(test.screen133.sound_led3, 0);
  expect(test.screen134.title, "");
  expect(test.screen134.msg1, "");
  expect(test.screen134.msg2, "");
  expect(test.screen134.msg1_size, 0);
  expect(test.screen134.msg2_size, "");
  expect(test.screen134.sound1, 0);
  expect(test.screen134.sound2, 0);
  expect(test.screen134.sound3, 0);
  expect(test.screen134.snd_timer, 0);
  expect(test.screen134.timer1, 0);
  expect(test.screen134.timer2, 0);
  expect(test.screen134.timer3, 0);
  expect(test.screen134.dsp_flg1, 0);
  expect(test.screen134.dsp_flg2, 0);
  expect(test.screen134.movie01_ext, 0);
  expect(test.screen134.movie02_ext, 0);
  expect(test.screen134.movie03_ext, 0);
  expect(test.screen134.movie04_ext, 0);
  expect(test.screen134.line_title, "");
  expect(test.screen134.line_title_ex, "");
  expect(test.screen134.line1, "");
  expect(test.screen134.line2, "");
  expect(test.screen134.line3, "");
  expect(test.screen134.line4, "");
  expect(test.screen134.line1_ex, "");
  expect(test.screen134.line2_ex, "");
  expect(test.screen134.line3_ex, "");
  expect(test.screen134.line4_ex, "");
  expect(test.screen134.sound_led1, 0);
  expect(test.screen134.sound_led2, 0);
  expect(test.screen134.sound_led3, 0);
  expect(test.screen135.title, "");
  expect(test.screen135.msg1, "");
  expect(test.screen135.msg2, "");
  expect(test.screen135.msg1_size, 0);
  expect(test.screen135.msg2_size, 0);
  expect(test.screen135.sound1, 0);
  expect(test.screen135.sound2, 0);
  expect(test.screen135.sound3, 0);
  expect(test.screen135.snd_timer, 0);
  expect(test.screen135.timer1, 0);
  expect(test.screen135.timer2, 0);
  expect(test.screen135.timer3, 0);
  expect(test.screen135.dsp_flg1, 0);
  expect(test.screen135.dsp_flg2, 0);
  expect(test.screen135.movie01_ext, 0);
  expect(test.screen135.movie02_ext, 0);
  expect(test.screen135.movie03_ext, 0);
  expect(test.screen135.movie04_ext, 0);
  expect(test.screen135.line_title, "");
  expect(test.screen135.line_title_ex, "");
  expect(test.screen135.line1, "");
  expect(test.screen135.line2, "");
  expect(test.screen135.line3, "");
  expect(test.screen135.line4, "");
  expect(test.screen135.line1_ex, "");
  expect(test.screen135.line2_ex, "");
  expect(test.screen135.line3_ex, "");
  expect(test.screen135.line4_ex, "");
  expect(test.screen135.sound_led1, 0);
  expect(test.screen135.sound_led2, 0);
  expect(test.screen135.sound_led3, 0);
  expect(test.screen136.title, "");
  expect(test.screen136.msg1, "");
  expect(test.screen136.msg2, "");
  expect(test.screen136.msg1_size, 0);
  expect(test.screen136.msg2_size, 0);
  expect(test.screen136.sound1, 0);
  expect(test.screen136.sound2, 0);
  expect(test.screen136.sound3, 0);
  expect(test.screen136.snd_timer, 0);
  expect(test.screen136.timer1, 0);
  expect(test.screen136.timer2, 0);
  expect(test.screen136.timer3, 0);
  expect(test.screen136.dsp_flg1, 0);
  expect(test.screen136.dsp_flg2, 0);
  expect(test.screen136.movie01_ext, 0);
  expect(test.screen136.movie02_ext, 0);
  expect(test.screen136.movie03_ext, 0);
  expect(test.screen136.movie04_ext, 0);
  expect(test.screen136.line_title, "");
  expect(test.screen136.line_title_ex, "");
  expect(test.screen136.line1, "");
  expect(test.screen136.line2, "");
  expect(test.screen136.line3, "");
  expect(test.screen136.line4, "");
  expect(test.screen136.line1_ex, "");
  expect(test.screen136.line2_ex, "");
  expect(test.screen136.line3_ex, "");
  expect(test.screen136.line4_ex, "");
  expect(test.screen136.sound_led1, 0);
  expect(test.screen136.sound_led2, 0);
  expect(test.screen136.sound_led3, 0);
  expect(test.screen137.title, "");
  expect(test.screen137.msg1, "");
  expect(test.screen137.msg2, "");
  expect(test.screen137.msg1_size, 0);
  expect(test.screen137.msg2_size, 0);
  expect(test.screen137.sound1, 0);
  expect(test.screen137.sound2, 0);
  expect(test.screen137.sound3, 0);
  expect(test.screen137.snd_timer, 0);
  expect(test.screen137.timer1, 0);
  expect(test.screen137.timer2, 0);
  expect(test.screen137.timer3, 0);
  expect(test.screen137.dsp_flg1, 0);
  expect(test.screen137.dsp_flg2, 0);
  expect(test.screen137.movie01_ext, 0);
  expect(test.screen137.movie02_ext, 0);
  expect(test.screen137.movie03_ext, 0);
  expect(test.screen137.movie04_ext, 0);
  expect(test.screen137.line_title, "");
  expect(test.screen137.line_title_ex, "");
  expect(test.screen137.line1, "");
  expect(test.screen137.line2, "");
  expect(test.screen137.line3, "");
  expect(test.screen137.line4, "");
  expect(test.screen137.line1_ex, "");
  expect(test.screen137.line2_ex, "");
  expect(test.screen137.line3_ex, "");
  expect(test.screen137.line4_ex, "");
  expect(test.screen137.sound_led1, 0);
  expect(test.screen137.sound_led2, 0);
  expect(test.screen137.sound_led3, 0);
  expect(test.screen138.title, "");
  expect(test.screen138.msg1, "");
  expect(test.screen138.msg2, "");
  expect(test.screen138.msg1_size, 0);
  expect(test.screen138.msg2_size, 0);
  expect(test.screen138.sound1, 0);
  expect(test.screen138.sound2, 0);
  expect(test.screen138.sound3, 0);
  expect(test.screen138.snd_timer, 0);
  expect(test.screen138.timer1, 0);
  expect(test.screen138.timer2, 0);
  expect(test.screen138.timer3, 0);
  expect(test.screen138.dsp_flg1, 0);
  expect(test.screen138.dsp_flg2, 0);
  expect(test.screen138.movie01_ext, 0);
  expect(test.screen138.movie02_ext, 0);
  expect(test.screen138.movie03_ext, 0);
  expect(test.screen138.movie04_ext, 0);
  expect(test.screen138.line_title, "");
  expect(test.screen138.line_title_ex, "");
  expect(test.screen138.line1, "");
  expect(test.screen138.line2, "");
  expect(test.screen138.line3, "");
  expect(test.screen138.line4, "");
  expect(test.screen138.line1_ex, "");
  expect(test.screen138.line2_ex, "");
  expect(test.screen138.line3_ex, "");
  expect(test.screen138.line4_ex, "");
  expect(test.screen138.sound_led1, 0);
  expect(test.screen138.sound_led2, 0);
  expect(test.screen138.sound_led3, 0);
  expect(test.screen139.title, "");
  expect(test.screen139.msg1, "");
  expect(test.screen139.msg2, "");
  expect(test.screen139.msg1_size, 0);
  expect(test.screen139.msg2_size, 0);
  expect(test.screen139.sound1, 0);
  expect(test.screen139.sound2, 0);
  expect(test.screen139.sound3, 0);
  expect(test.screen139.snd_timer, 0);
  expect(test.screen139.timer1, 0);
  expect(test.screen139.timer2, 0);
  expect(test.screen139.timer3, 0);
  expect(test.screen139.dsp_flg1, 0);
  expect(test.screen139.dsp_flg2, 0);
  expect(test.screen139.movie01_ext, 0);
  expect(test.screen139.movie02_ext, 0);
  expect(test.screen139.movie03_ext, 0);
  expect(test.screen139.movie04_ext, 0);
  expect(test.screen139.line_title, "");
  expect(test.screen139.line_title_ex, "");
  expect(test.screen139.line1, "");
  expect(test.screen139.line2, "");
  expect(test.screen139.line3, "");
  expect(test.screen139.line4, "");
  expect(test.screen139.line1_ex, "");
  expect(test.screen139.line2_ex, "");
  expect(test.screen139.line3_ex, "");
  expect(test.screen139.line4_ex, "");
  expect(test.screen139.sound_led1, 0);
  expect(test.screen139.sound_led2, 0);
  expect(test.screen139.sound_led3, 0);
  expect(test.screen140.title, "");
  expect(test.screen140.msg1, "");
  expect(test.screen140.msg2, "");
  expect(test.screen140.msg1_size, 0);
  expect(test.screen140.msg2_size, 0);
  expect(test.screen140.sound1, 0);
  expect(test.screen140.sound2, 0);
  expect(test.screen140.sound3, 0);
  expect(test.screen140.snd_timer, 0);
  expect(test.screen140.timer1, 0);
  expect(test.screen140.timer2, 0);
  expect(test.screen140.timer3, 0);
  expect(test.screen140.dsp_flg1, 0);
  expect(test.screen140.dsp_flg2, 0);
  expect(test.screen140.movie01_ext, 0);
  expect(test.screen140.movie02_ext, 0);
  expect(test.screen140.movie03_ext, 0);
  expect(test.screen140.movie04_ext, 0);
  expect(test.screen140.line_title, "");
  expect(test.screen140.line_title_ex, "");
  expect(test.screen140.line1, "");
  expect(test.screen140.line2, "");
  expect(test.screen140.line3, "");
  expect(test.screen140.line4, "");
  expect(test.screen140.line1_ex, "");
  expect(test.screen140.line2_ex, "");
  expect(test.screen140.line3_ex, "");
  expect(test.screen140.line4_ex, "");
  expect(test.screen140.sound_led1, 0);
  expect(test.screen140.sound_led2, 0);
  expect(test.screen140.sound_led3, 0);
  expect(test.screen141.title, "");
  expect(test.screen141.msg1, "");
  expect(test.screen141.msg2, "");
  expect(test.screen141.msg1_size, 0);
  expect(test.screen141.msg2_size, 0);
  expect(test.screen141.sound1, 0);
  expect(test.screen141.sound2, 0);
  expect(test.screen141.sound3, 0);
  expect(test.screen141.snd_timer, 0);
  expect(test.screen141.timer1, 0);
  expect(test.screen141.timer2, 0);
  expect(test.screen141.timer3, 0);
  expect(test.screen141.dsp_flg1, 0);
  expect(test.screen141.dsp_flg2, 0);
  expect(test.screen141.movie01_ext, 0);
  expect(test.screen141.movie02_ext, 0);
  expect(test.screen141.movie03_ext, 0);
  expect(test.screen141.movie04_ext, 0);
  expect(test.screen141.line_title, "");
  expect(test.screen141.line_title_ex, "");
  expect(test.screen141.line1, "");
  expect(test.screen141.line2, "");
  expect(test.screen141.line3, "");
  expect(test.screen141.line4, "");
  expect(test.screen141.line1_ex, "");
  expect(test.screen141.line2_ex, "");
  expect(test.screen141.line3_ex, "");
  expect(test.screen141.line4_ex, "");
  expect(test.screen141.sound_led1, 0);
  expect(test.screen141.sound_led2, 0);
  expect(test.screen141.sound_led3, 0);
  expect(test.screen144.title, "");
  expect(test.screen144.msg1, "");
  expect(test.screen144.msg2, "");
  expect(test.screen144.msg1_size, 0);
  expect(test.screen144.msg2_size, 0);
  expect(test.screen144.sound1, 0);
  expect(test.screen144.sound2, 0);
  expect(test.screen144.sound3, 0);
  expect(test.screen144.snd_timer, 0);
  expect(test.screen144.timer1, 0);
  expect(test.screen144.timer2, 0);
  expect(test.screen144.timer3, 0);
  expect(test.screen144.dsp_flg1, 0);
  expect(test.screen144.dsp_flg2, 0);
  expect(test.screen144.movie01_ext, 0);
  expect(test.screen144.movie02_ext, 0);
  expect(test.screen144.movie03_ext, 0);
  expect(test.screen144.movie04_ext, 0);
  expect(test.screen144.line_title, "");
  expect(test.screen144.line_title_ex, "");
  expect(test.screen144.line1, "");
  expect(test.screen144.line2, "");
  expect(test.screen144.line3, "");
  expect(test.screen144.line4, "");
  expect(test.screen144.line1_ex, "");
  expect(test.screen144.line2_ex, "");
  expect(test.screen144.line3_ex, "");
  expect(test.screen144.line4_ex, "");
  expect(test.screen144.sound_led1, 0);
  expect(test.screen144.sound_led2, 0);
  expect(test.screen144.sound_led3, 0);
  expect(test.ActSetUp.ReadAlertTime, 0);
  expect(test.ActSetUp.AutoReadInterval, 0);
  expect(test.ActSetUp.InterruptPrint, 0);
  expect(test.ActSetUp.InterruptPay, 0);
  expect(test.ActSetUp.UpdGetFtpTimer, 0);
  expect(test.HiddenSetUp.TableReadInterval, 0);
  expect(test.customer.cust_card_max, 0);
  expect(test.customer.cust_card_type1, 0);
  expect(test.customer.cust_card_type2, 0);
  expect(test.customer.cust_card_type3, 0);
  expect(test.customer.cust_card_type4, 0);
  expect(test.customer.cust_card_type5, 0);
  expect(test.customer.cust_card_type6, 0);
  expect(test.ShopAndGo.shop_and_go_nonfile_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_nonscan_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_limit1, 0);
  expect(test.ShopAndGo.shop_and_go_limit2, 0);
  expect(test.ShopAndGo.shop_and_go_limit3, 0);
  expect(test.ShopAndGo.shop_and_go_test_srv_flg, 0);
  expect(test.ShopAndGo.shop_and_go_companycode, 0);
  expect(test.ShopAndGo.shop_and_go_storecode, 0);
  expect(test.ShopAndGo.shop_and_go_mbr_chk_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_server_timeout, 0);
  expect(test.ShopAndGo.shop_and_go_proxy, "");
  expect(test.ShopAndGo.shop_and_go_proxy_port, 0);
  expect(test.ShopAndGo.shop_and_go_n_money_btn_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_domain, "");
  expect(test.ShopAndGo.shop_and_go_mbr_card_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cr50_domain, "");
  expect(test.ShopAndGo.shop_and_go_point_domain, "");
  expect(test.ShopAndGo.shop_and_go_cr50_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_eatin_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cogca_read_twice, 0);
  expect(test.ShopAndGo.shop_and_go_use_class, 0);
  expect(test.ShopAndGo.shop_and_go_expensive_mark_prn, 0);
  expect(test.ShopAndGo.shop_and_go_regbag_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_use_preset_grp_code, 0);
  expect(test.ShopAndGo.shop_and_go_mente_nonplu_btn_reference, 0);
  expect(test.ShopAndGo.shop_and_go_mbr_auto_cncl_time, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_msg_use_no, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print_normal, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss, 0);
  expect(test.ShopAndGo.shop_and_go_thread_timeout, 0);
  expect(test.PaymentGroup.pay_grp_name1, "");
  expect(test.PaymentGroup.pay_grp_name2, "");
  expect(test.PaymentGroup.pay_grp_name3, "");
  expect(test.PaymentGroup.pay_grp_name4, "");
  expect(test.PaymentGroup.pay_grp_name5, "");
  expect(test.PaymentGroup.pay_grp_name6, "");
  expect(test.PaymentGroup.pay_grp_name7, "");
  expect(test.PaymentGroup.pay_grp_name8, "");
  expect(test.PaymentGroup.pay_grp_name9, "");
  expect(test.PaymentGroup.pay_typ1_grp, 0);
  expect(test.PaymentGroup.pay_typ2_grp, 0);
  expect(test.PaymentGroup.pay_typ3_grp, 0);
  expect(test.PaymentGroup.pay_typ4_grp, 0);
  expect(test.PaymentGroup.pay_typ5_grp, 0);
  expect(test.PaymentGroup.pay_typ6_grp, 0);
  expect(test.PaymentGroup.pay_typ7_grp, 0);
  expect(test.PaymentGroup.pay_typ8_grp, 0);
  expect(test.PaymentGroup.pay_typ9_grp, 0);
  expect(test.PaymentGroup.pay_typ10_grp, 0);
  expect(test.PaymentGroup.pay_typ11_grp, 0);
  expect(test.PaymentGroup.pay_typ12_grp, 0);
  expect(test.PaymentGroup.pay_typ13_grp, 0);
  expect(test.PaymentGroup.pay_typ14_grp, 0);
  expect(test.PaymentGroup.pay_typ15_grp, 0);
  expect(test.PaymentGroup.pay_typ16_grp, 0);
  expect(test.PaymentGroup.pay_grp_name1_ex, "");
  expect(test.PaymentGroup.pay_grp_name2_ex, "");
  expect(test.PaymentGroup.pay_grp_name3_ex, "");
  expect(test.PaymentGroup.pay_grp_name4_ex, "");
  expect(test.PaymentGroup.pay_grp_name5_ex, "");
  expect(test.PaymentGroup.pay_grp_name6_ex, "");
  expect(test.PaymentGroup.pay_grp_name7_ex, "");
  expect(test.PaymentGroup.pay_grp_name8_ex, "");
  expect(test.PaymentGroup.pay_grp_name9_ex, "");
}

void allPropatyCheck(QcashierJsonFile test, bool firstItemCheck)
{
  if(firstItemCheck == true) {
    expect(test.common.item_disp, 1);
  }
  expect(test.common.logo_typ, 0);
  expect(test.common.disp_typ, 1);
  expect(test.common.spdsp_use, 1);
  expect(test.common.fix_max, 10);
  expect(test.common.fix_typ, 1);
  expect(test.common.ptn_max, 6);
  expect(test.common.ptn_typ, 1);
  expect(test.common.spe_typ, 1);
  expect(test.common.chara_typ, 0);
  expect(test.common.language_typ, 0);
  expect(test.common.page_max, 145);
  expect(test.common.typ_max, 1);
  expect(test.common.pay_typ1, 0);
  expect(test.common.pay_typ2, 1);
  expect(test.common.pay_typ3, 0);
  expect(test.common.pay_typ4, 0);
  expect(test.common.pay_typ5, 0);
  expect(test.common.pay_typ6, 0);
  expect(test.common.pay_typ7, 0);
  expect(test.common.pay_typ8, 0);
  expect(test.common.demo_disp_btn, 0);
  expect(test.common.rcpt_limit_time, 10);
  expect(test.common.next_rcpt_limit, 60);
  expect(test.common.auto_susdsp, 0);
  expect(test.common.susdsp_time, 2200);
  expect(test.common.rfm_receipt, 1);
  expect(test.common.signp_typ, 0);
  expect(test.common.select_typ, 0);
  expect(test.common.select_str_msg, 0);
  expect(test.common.regbag1_plucd, 0);
  expect(test.common.regbag2_plucd, 0);
  expect(test.common.regbag3_plucd, 0);
  expect(test.common.autocash_operation, 0);
  expect(test.common.autocash_equaltime, 10);
  expect(test.common.autocash_overtime, 0);
  expect(test.common.fip_disp, 0);
  expect(test.common.crdtcard_gettimer, 0);
  expect(test.common.charge_plucd1, 0);
  expect(test.common.charge_plucd2, 0);
  expect(test.common.charge_plucd3, 0);
  expect(test.common.charge_plucd4, 0);
  expect(test.common.charge_plucd5, 0);
  expect(test.common.charge_plucd6, 0);
  expect(test.common.crdtcard_warntime, 6);
  expect(test.common.acx_recalc_btn, 0);
  expect(test.common.lang_chg_max, 0);
  expect(test.common.lang_select1, 0);
  expect(test.common.lang_select2, 0);
  expect(test.common.lang_select3, 0);
  expect(test.common.lang_select4, 0);
  expect(test.common.lang_select5, 0);
  expect(test.common.lang_select6, 0);
  expect(test.common.lang_select7, 0);
  expect(test.common.lang_select8, 0);
  expect(test.common.autocrdt_operation, 0);
  expect(test.common.autocrdt_time, 10);
  expect(test.common.preca_charge_only, 0);
  expect(test.common.preca_charge_plucd1, 0);
  expect(test.common.preca_charge_plucd2, 0);
  expect(test.common.preca_charge_plucd3, 0);
  expect(test.common.preca_charge_plucd4, 0);
  expect(test.common.preca_charge_plucd5, 0);
  expect(test.common.preca_charge_plucd6, 0);
  expect(test.common.select_dsp_ccin, 0);
  expect(test.common.cancel_btn_dsp, 0);
  expect(test.common.clinic_mode, 0);
  expect(test.common.clinic_receipt, 1);
  expect(test.common.clinic_greeting, 1);
  expect(test.common.clinic_greeting_sound, 1);
  expect(test.common.fin_btn_chg, 0);
  expect(test.common.startdsp_btn_single, 1);
  expect(test.common.startdsp_scan_enable, 0);
  expect(test.common.pay_typ9, 0);
  expect(test.common.pay_typ10, 0);
  expect(test.common.pay_typ11, 0);
  expect(test.common.pay_typ12, 0);
  expect(test.common.pay_typ13, 0);
  expect(test.common.pay_typ14, 0);
  expect(test.common.pay_typ15, 0);
  expect(test.common.pay_typ16, 0);
  expect(test.common.verifone_nfc_crdt, 0);
  expect(test.common.hs_dualdisp_chk, 1);
  expect(test.common.back_btn_dsp, 1);
  expect(test.common.NoOperationWarning, 0);
  expect(test.common.NoOperationSignpaul_time, 0);
  expect(test.common.NoOperationVoicesound_time, 0);
  expect(test.common.NoOperationSound, 0);
  expect(test.common.NoOperationPayWarning, 0);
  expect(test.common.cin_dsp_wait, 0);
  expect(test.common.clinic_auto_stl, 0);
  expect(test.common.acracb_stlmode, 1);
  expect(test.common.apbf_regbag_plucd, 0);
  expect(test.common.apbf_dlgdisp_time, 30);
  expect(test.common.mybag_plu_point_add, 0);
  expect(test.common.video_jpqr_scanner, 0);
  expect(test.common.chg_warn_timer_use, 0);
  expect(test.common.cin_cnl_btn_show, 0);
  expect(test.common.regs_use_class, 0);
  expect(test.common.sg_eatin_chk, 0);
  expect(test.common.selfmode1_auto_cancel, 0);
  expect(test.common.point_use_unit, 1);
  expect(test.common.selfmode1_wav_qty, 0);
  expect(test.common.age_chk_notice, 0);
  expect(test.common.verifone_nfc_repika_crdt, 0);
  expect(test.common.regbag1_default, 0);
  expect(test.common.regbag2_default, 0);
  expect(test.common.regbag3_default, 0);
  expect(test.common.regbag_timing, 0);
  expect(test.common.regbag_disp_back_btn, 1);
  expect(test.common.self_disp_preca_ref, 0);
  expect(test.common.fs_cashless_dsp_change, 0);
  expect(test.common.hs_fs_scanning_guide, 0);
  expect(test.common.hs_fs_twice_read_stop, 0);
  expect(test.common.cashin_sound, 0);
  expect(test.common.sound_change_flg, 0);
  expect(test.common.hs_fs_auto_preset_dsp, 0);
  expect(test.common.cashless_dsp_return, 0);
  expect(test.common.regbag_screen_scan_input, 0);
  expect(test.common.g3_pay_btn_blink, 0);
  expect(test.common.g3_employee_call_btn, 1);
  expect(test.common.g3_pay_slct_btn_ptn, 0);
  expect(test.common.video_jpqr_sidescanner, 0);
  expect(test.common.mente_itemlist_type, 0);
  expect(test.common.rg_self_noteplu_perm, 0);
  expect(test.common.g3_self_itemlist_scrvoid, 0);
  expect(test.common.g3_fs_presetgroup_custom, 0);
  expect(test.common.g3_fs_presetgroup_btn1, 0);
  expect(test.common.g3_fs_presetgroup_btn2, 0);
  expect(test.common.g3_fs_presetgroup_btn3, 0);
  expect(test.common.g3_fs_presetgroup_btn4, 0);
  expect(test.common.g3_fs_presetgroup_btn5, 0);
  expect(test.common.g3_fs_presetgroup_btn6, 0);
  expect(test.common.g3_fs_presetgroup_btn7, 0);
  expect(test.common.g3_fs_presetgroup_btn8, 0);
  expect(test.common.callBuzzer_sound_change_flg, 0);
  expect(test.common.top_map_display, 0);
  expect(test.common.start_payselect_display, 0);
  expect(test.common.idle_signp_state, 0);
  expect(test.common.jpqr_paybtn_image, 0);
  expect(test.common.vega_credit_forget_chk, 0);
  expect(test.common.cash_only_setting, 0);
  expect(test.common.cash_only_border, 0);
  expect(test.chg_info.chg_info, 1);
  expect(test.chg_info.chg_5000, 0);
  expect(test.chg_info.chg_2000, 0);
  expect(test.chg_info.chg_1000, 9);
  expect(test.chg_info.chg_500, 0);
  expect(test.chg_info.chg_100, 9);
  expect(test.chg_info.chg_50, 0);
  expect(test.chg_info.chg_10, 9);
  expect(test.chg_info.chg_5, 0);
  expect(test.chg_info.chg_1, 9);
  expect(test.chg_info.chg_info_full_chk, 30);
  expect(test.chg_info.chg_signp_full_chk, 10);
  expect(test.period.spr_str, 301);
  expect(test.period.spr_end, 531);
  expect(test.period.sum_str, 601);
  expect(test.period.sum_end, 831);
  expect(test.period.aut_str, 901);
  expect(test.period.aut_end, 1130);
  expect(test.period.win1_str, 1201);
  expect(test.period.win1_end, 1231);
  expect(test.period.win2_str, 101);
  expect(test.period.win2_end, 229);
  expect(test.period.sp1_flg, 1);
  expect(test.period.sp2_flg, 0);
  expect(test.period.sp3_flg, 1);
  expect(test.period.sp4_flg, 1);
  expect(test.period.sp5_flg, 0);
  expect(test.period.sp6_flg, 1);
  expect(test.period.sp7_flg, 1);
  expect(test.period.sp8_flg, 0);
  expect(test.period.sp9_flg, 0);
  expect(test.period.sp10_flg, 1);
  expect(test.period.sp11_flg, 0);
  expect(test.period.sp12_flg, 1);
  expect(test.period.sp13_flg, 0);
  expect(test.period.sp14_flg, 1);
  expect(test.period.sp15_flg, 0);
  expect(test.period.sp16_flg, 1);
  expect(test.period.sp17_flg, 1);
  expect(test.period.sp18_flg, 0);
  expect(test.period.sp1_str, 101);
  expect(test.period.sp1_end, 107);
  expect(test.period.sp2_str, "");
  expect(test.period.sp2_end, "");
  expect(test.period.sp3_str, 201);
  expect(test.period.sp3_end, 214);
  expect(test.period.sp4_str, 215);
  expect(test.period.sp4_end, 303);
  expect(test.period.sp5_str, "");
  expect(test.period.sp5_end, "");
  expect(test.period.sp6_str, 325);
  expect(test.period.sp6_end, 410);
  expect(test.period.sp7_str, 425);
  expect(test.period.sp7_end, 505);
  expect(test.period.sp8_str, "");
  expect(test.period.sp8_end, "");
  expect(test.period.sp9_str, "");
  expect(test.period.sp9_end, "");
  expect(test.period.sp10_str, 627);
  expect(test.period.sp10_end, 707);
  expect(test.period.sp11_str, "");
  expect(test.period.sp11_end, "");
  expect(test.period.sp12_str, 825);
  expect(test.period.sp12_end, 920);
  expect(test.period.sp13_str, "");
  expect(test.period.sp13_end, "");
  expect(test.period.sp14_str, 1015);
  expect(test.period.sp14_end, 1030);
  expect(test.period.sp15_str, "");
  expect(test.period.sp15_end, "");
  expect(test.period.sp16_str, 1201);
  expect(test.period.sp16_end, 1225);
  expect(test.period.sp17_str, 1226);
  expect(test.period.sp17_end, 1231);
  expect(test.period.sp18_str, "");
  expect(test.period.sp18_end, "");
  expect(test.period.spr_time1, 600);
  expect(test.period.spr_time2, 1700);
  expect(test.period.sum_time1, 600);
  expect(test.period.sum_time2, 1800);
  expect(test.period.aut_time1, 600);
  expect(test.period.aut_time2, 1700);
  expect(test.period.win_time1, 600);
  expect(test.period.win_time2, 1700);
  expect(test.screen0.title, "スタート画面");
  expect(test.screen0.msg1, "お会計券を読ませるとスタートします");
  expect(test.screen0.msg2, "");
  expect(test.screen0.msg1_size, 0);
  expect(test.screen0.msg2_size, 0);
  expect(test.screen0.sound1, 0);
  expect(test.screen0.sound2, 0);
  expect(test.screen0.sound3, 6091);
  expect(test.screen0.snd_timer, 0);
  expect(test.screen0.timer1, 0);
  expect(test.screen0.timer2, 0);
  expect(test.screen0.timer3, 0);
  expect(test.screen0.dsp_flg1, 0);
  expect(test.screen0.dsp_flg2, 0);
  expect(test.screen0.movie01_ext, 0);
  expect(test.screen0.movie02_ext, 0);
  expect(test.screen0.movie03_ext, 0);
  expect(test.screen0.movie04_ext, 0);
  expect(test.screen0.line_title, "");
  expect(test.screen0.line_title_ex, "");
  expect(test.screen0.line1, "");
  expect(test.screen0.line2, "お会計券を");
  expect(test.screen0.line3, "読ませてください");
  expect(test.screen0.line4, "");
  expect(test.screen0.line1_ex, "");
  expect(test.screen0.line2_ex, "Insert the ticket");
  expect(test.screen0.line3_ex, "into the scanner.");
  expect(test.screen0.line4_ex, "");
  expect(test.screen0.sound_led1, 0);
  expect(test.screen0.sound_led2, 0);
  expect(test.screen0.sound_led3, 6091);
  expect(test.screen1.title, "スキャン中画面");
  expect(test.screen1.msg1, "お会計券を読ませるとスタートします");
  expect(test.screen1.msg2, "");
  expect(test.screen1.msg1_size, 0);
  expect(test.screen1.msg2_size, 0);
  expect(test.screen1.sound1, 6003);
  expect(test.screen1.sound2, 6097);
  expect(test.screen1.sound3, 6096);
  expect(test.screen1.snd_timer, 10);
  expect(test.screen1.timer1, 2);
  expect(test.screen1.timer2, 10);
  expect(test.screen1.timer3, 10);
  expect(test.screen1.dsp_flg1, 0);
  expect(test.screen1.dsp_flg2, 0);
  expect(test.screen1.movie01_ext, 0);
  expect(test.screen1.movie02_ext, 0);
  expect(test.screen1.movie03_ext, 0);
  expect(test.screen1.movie04_ext, 0);
  expect(test.screen1.line_title, "");
  expect(test.screen1.line_title_ex, "");
  expect(test.screen1.line1, "");
  expect(test.screen1.line2, "");
  expect(test.screen1.line3, "");
  expect(test.screen1.line4, "");
  expect(test.screen1.line1_ex, "");
  expect(test.screen1.line2_ex, "");
  expect(test.screen1.line3_ex, "");
  expect(test.screen1.line4_ex, "");
  expect(test.screen1.sound_led1, 6003);
  expect(test.screen1.sound_led2, 6097);
  expect(test.screen1.sound_led3, 6096);
  expect(test.screen2.title, "会計選択画面");
  expect(test.screen2.msg1, "お支払方法のボタンを押して下さい");
  expect(test.screen2.msg2, "");
  expect(test.screen2.msg1_size, 0);
  expect(test.screen2.msg2_size, 0);
  expect(test.screen2.sound1, 6004);
  expect(test.screen2.sound2, 0);
  expect(test.screen2.sound3, 0);
  expect(test.screen2.snd_timer, 30);
  expect(test.screen2.timer1, 60);
  expect(test.screen2.timer2, 10);
  expect(test.screen2.timer3, 10);
  expect(test.screen2.dsp_flg1, 0);
  expect(test.screen2.dsp_flg2, 0);
  expect(test.screen2.movie01_ext, 0);
  expect(test.screen2.movie02_ext, 0);
  expect(test.screen2.movie03_ext, 0);
  expect(test.screen2.movie04_ext, 0);
  expect(test.screen2.line_title, "");
  expect(test.screen2.line_title_ex, "");
  expect(test.screen2.line1, "お支払方法を");
  expect(test.screen2.line2, "押してください");
  expect(test.screen2.line3, "");
  expect(test.screen2.line4, "");
  expect(test.screen2.line1_ex, "Please select your");
  expect(test.screen2.line2_ex, "payment method.");
  expect(test.screen2.line3_ex, "");
  expect(test.screen2.line4_ex, "");
  expect(test.screen2.sound_led1, 6129);
  expect(test.screen2.sound_led2, 0);
  expect(test.screen2.sound_led3, 0);
  expect(test.screen3.title, "現金入金画面");
  expect(test.screen3.msg1, "お買上金額を確認し             お金をいれてください");
  expect(test.screen3.msg2, "");
  expect(test.screen3.msg1_size, 0);
  expect(test.screen3.msg2_size, 0);
  expect(test.screen3.sound1, 6005);
  expect(test.screen3.sound2, 6006);
  expect(test.screen3.sound3, 6015);
  expect(test.screen3.snd_timer, 20);
  expect(test.screen3.timer1, 0);
  expect(test.screen3.timer2, 0);
  expect(test.screen3.timer3, 0);
  expect(test.screen3.dsp_flg1, 0);
  expect(test.screen3.dsp_flg2, 0);
  expect(test.screen3.movie01_ext, 0);
  expect(test.screen3.movie02_ext, 0);
  expect(test.screen3.movie03_ext, 0);
  expect(test.screen3.movie04_ext, 0);
  expect(test.screen3.line_title, "現金でお支払い");
  expect(test.screen3.line_title_ex, "Cash Payment");
  expect(test.screen3.line1, "お金を");
  expect(test.screen3.line2, "入れてください");
  expect(test.screen3.line3, "");
  expect(test.screen3.line4, "");
  expect(test.screen3.line1_ex, "Please insert the cash.");
  expect(test.screen3.line2_ex, "");
  expect(test.screen3.line3_ex, "");
  expect(test.screen3.line4_ex, "");
  expect(test.screen3.sound_led1, 6180);
  expect(test.screen3.sound_led2, 6130);
  expect(test.screen3.sound_led3, 6015);
  expect(test.screen4.title, "現金支払画面");
  expect(test.screen4.msg1, "お買上金額を確認し             お金をいれてください");
  expect(test.screen4.msg2, "");
  expect(test.screen4.msg1_size, 0);
  expect(test.screen4.msg2_size, 0);
  expect(test.screen4.sound1, 6016);
  expect(test.screen4.sound2, 0);
  expect(test.screen4.sound3, 0);
  expect(test.screen4.snd_timer, 20);
  expect(test.screen4.timer1, 10);
  expect(test.screen4.timer2, 0);
  expect(test.screen4.timer3, 0);
  expect(test.screen4.dsp_flg1, 0);
  expect(test.screen4.dsp_flg2, 0);
  expect(test.screen4.movie01_ext, 0);
  expect(test.screen4.movie02_ext, 0);
  expect(test.screen4.movie03_ext, 0);
  expect(test.screen4.movie04_ext, 0);
  expect(test.screen4.line_title, "");
  expect(test.screen4.line_title_ex, "");
  expect(test.screen4.line1, "よろしければ");
  expect(test.screen4.line2, "おわりボタンを");
  expect(test.screen4.line3, "押してください");
  expect(test.screen4.line4, "");
  expect(test.screen4.line1_ex, "When ready, ");
  expect(test.screen4.line2_ex, "press \"finish\"");
  expect(test.screen4.line3_ex, "to complete payment.");
  expect(test.screen4.line4_ex, "");
  expect(test.screen4.sound_led1, 6179);
  expect(test.screen4.sound_led2, 6217);
  expect(test.screen4.sound_led3, 0);
  expect(test.screen5.title, "現金支払完了画面");
  expect(test.screen5.msg1, "お釣りとレシートを             お取りください。");
  expect(test.screen5.msg2, "");
  expect(test.screen5.msg1_size, 0);
  expect(test.screen5.msg2_size, 0);
  expect(test.screen5.sound1, 6017);
  expect(test.screen5.sound2, "");
  expect(test.screen5.sound3, 0);
  expect(test.screen5.snd_timer, 0);
  expect(test.screen5.timer1, 5);
  expect(test.screen5.timer2, 10);
  expect(test.screen5.timer3, 2);
  expect(test.screen5.dsp_flg1, 0);
  expect(test.screen5.dsp_flg2, 0);
  expect(test.screen5.movie01_ext, 0);
  expect(test.screen5.movie02_ext, 0);
  expect(test.screen5.movie03_ext, 0);
  expect(test.screen5.movie04_ext, 0);
  expect(test.screen5.line_title, "");
  expect(test.screen5.line_title_ex, "");
  expect(test.screen5.line1, "おつりを");
  expect(test.screen5.line2, "お受け取りください");
  expect(test.screen5.line3, "");
  expect(test.screen5.line4, "");
  expect(test.screen5.line1_ex, "Please take your change.");
  expect(test.screen5.line2_ex, "");
  expect(test.screen5.line3_ex, "");
  expect(test.screen5.line4_ex, "");
  expect(test.screen5.sound_led1, 6132);
  expect(test.screen5.sound_led2, 6132);
  expect(test.screen5.sound_led3, 0);
  expect(test.screen6.title, "支払完了(お釣り０円)");
  expect(test.screen6.msg1, "レシートをお取りください。");
  expect(test.screen6.msg2, "");
  expect(test.screen6.msg1_size, 0);
  expect(test.screen6.msg2_size, 0);
  expect(test.screen6.sound1, 6018);
  expect(test.screen6.sound2, 6129);
  expect(test.screen6.sound3, 6548);
  expect(test.screen6.snd_timer, 0);
  expect(test.screen6.timer1, 5);
  expect(test.screen6.timer2, 10);
  expect(test.screen6.timer3, 0);
  expect(test.screen6.dsp_flg1, 0);
  expect(test.screen6.dsp_flg2, 0);
  expect(test.screen6.movie01_ext, 0);
  expect(test.screen6.movie02_ext, 0);
  expect(test.screen6.movie03_ext, 0);
  expect(test.screen6.movie04_ext, 0);
  expect(test.screen6.line_title, "");
  expect(test.screen6.line_title_ex, "");
  expect(test.screen6.line1, "レシートを");
  expect(test.screen6.line2, "お受け取りください");
  expect(test.screen6.line3, "ありがとう");
  expect(test.screen6.line4, "ございました");
  expect(test.screen6.line1_ex, "Thank you.");
  expect(test.screen6.line2_ex, "Please take your receipt.");
  expect(test.screen6.line3_ex, "");
  expect(test.screen6.line4_ex, "");
  expect(test.screen6.sound_led1, 6133);
  expect(test.screen6.sound_led2, 6132);
  expect(test.screen6.sound_led3, 6548);
  expect(test.screen6.line2_1, "レシートを");
  expect(test.screen6.line2_2, "お受け取りください");
  expect(test.screen6.line2_3, "お大事にして下さい");
  expect(test.screen6.line2_4, "");
  expect(test.screen7.title, "アイテム明細画面");
  expect(test.screen7.msg1, "確認が終わりましたら、お会計ボタンを押してください");
  expect(test.screen7.msg2, "");
  expect(test.screen7.msg1_size, 0);
  expect(test.screen7.msg2_size, 0);
  expect(test.screen7.sound1, 6027);
  expect(test.screen7.sound2, 0);
  expect(test.screen7.sound3, 0);
  expect(test.screen7.snd_timer, 20);
  expect(test.screen7.timer1, 1);
  expect(test.screen7.timer2, 0);
  expect(test.screen7.timer3, 0);
  expect(test.screen7.dsp_flg1, 0);
  expect(test.screen7.dsp_flg2, 0);
  expect(test.screen7.movie01_ext, 0);
  expect(test.screen7.movie02_ext, 0);
  expect(test.screen7.movie03_ext, 0);
  expect(test.screen7.movie04_ext, 0);
  expect(test.screen7.line_title, "");
  expect(test.screen7.line_title_ex, "");
  expect(test.screen7.line1, "");
  expect(test.screen7.line2, "");
  expect(test.screen7.line3, "");
  expect(test.screen7.line4, "");
  expect(test.screen7.line1_ex, "");
  expect(test.screen7.line2_ex, "");
  expect(test.screen7.line3_ex, "");
  expect(test.screen7.line4_ex, "");
  expect(test.screen7.sound_led1, 6027);
  expect(test.screen7.sound_led2, 0);
  expect(test.screen7.sound_led3, 0);
  expect(test.screen8.title, "ｸﾚｼﾞｯﾄﾘｰﾄﾞ画面");
  expect(test.screen8.msg1, "お買上金額を確認し             クレジットカードを読ませて下さい");
  expect(test.screen8.msg2, "");
  expect(test.screen8.msg1_size, 0);
  expect(test.screen8.msg2_size, 0);
  expect(test.screen8.sound1, 6007);
  expect(test.screen8.sound2, 6008);
  expect(test.screen8.sound3, 0);
  expect(test.screen8.snd_timer, 20);
  expect(test.screen8.timer1, 0);
  expect(test.screen8.timer2, 0);
  expect(test.screen8.timer3, 0);
  expect(test.screen8.dsp_flg1, 0);
  expect(test.screen8.dsp_flg2, 0);
  expect(test.screen8.movie01_ext, 0);
  expect(test.screen8.movie02_ext, 0);
  expect(test.screen8.movie03_ext, 0);
  expect(test.screen8.movie04_ext, 0);
  expect(test.screen8.line_title, "クレジットでお支払い");
  expect(test.screen8.line_title_ex, "Credit Card Payment");
  expect(test.screen8.line1, "クレジットカードを");
  expect(test.screen8.line2, "読ませてください");
  expect(test.screen8.line3, "");
  expect(test.screen8.line4, "");
  expect(test.screen8.line1_ex, "Please swipe");
  expect(test.screen8.line2_ex, "your credit card.");
  expect(test.screen8.line3_ex, "");
  expect(test.screen8.line4_ex, "");
  expect(test.screen8.sound_led1, 6007);
  expect(test.screen8.sound_led2, 6008);
  expect(test.screen8.sound_led3, 0);
  expect(test.screen9.title, "ｸﾚｼﾞｯﾄ支払完了画面");
  expect(test.screen9.msg1, "レシートをお取りください。");
  expect(test.screen9.msg2, "");
  expect(test.screen9.msg1_size, 0);
  expect(test.screen9.msg2_size, 0);
  expect(test.screen9.sound1, 6018);
  expect(test.screen9.sound2, 0);
  expect(test.screen9.sound3, 0);
  expect(test.screen9.snd_timer, 0);
  expect(test.screen9.timer1, 5);
  expect(test.screen9.timer2, 10);
  expect(test.screen9.timer3, 0);
  expect(test.screen9.dsp_flg1, 0);
  expect(test.screen9.dsp_flg2, 0);
  expect(test.screen9.movie01_ext, 0);
  expect(test.screen9.movie02_ext, 0);
  expect(test.screen9.movie03_ext, 0);
  expect(test.screen9.movie04_ext, 0);
  expect(test.screen9.line_title, "");
  expect(test.screen9.line_title_ex, "");
  expect(test.screen9.line1, "レシートを");
  expect(test.screen9.line2, "お受け取りください");
  expect(test.screen9.line3, "ありがとう");
  expect(test.screen9.line4, "ございました");
  expect(test.screen9.line1_ex, "Thank you.");
  expect(test.screen9.line2_ex, "Please take your receipt.");
  expect(test.screen9.line3_ex, "");
  expect(test.screen9.line4_ex, "");
  expect(test.screen9.sound_led1, 6133);
  expect(test.screen9.sound_led2, 0);
  expect(test.screen9.sound_led3, 0);
  expect(test.screen10.title, "ありがとうございました画面");
  expect(test.screen10.msg1, "");
  expect(test.screen10.msg2, "");
  expect(test.screen10.msg1_size, 0);
  expect(test.screen10.msg2_size, 0);
  expect(test.screen10.sound1, 6025);
  expect(test.screen10.sound2, 6098);
  expect(test.screen10.sound3, 0);
  expect(test.screen10.snd_timer, 0);
  expect(test.screen10.timer1, 4);
  expect(test.screen10.timer2, 0);
  expect(test.screen10.timer3, 0);
  expect(test.screen10.dsp_flg1, 0);
  expect(test.screen10.dsp_flg2, 0);
  expect(test.screen10.movie01_ext, 0);
  expect(test.screen10.movie02_ext, 0);
  expect(test.screen10.movie03_ext, 0);
  expect(test.screen10.movie04_ext, 0);
  expect(test.screen10.line_title, "");
  expect(test.screen10.line_title_ex, "");
  expect(test.screen10.line1, "");
  expect(test.screen10.line2, "");
  expect(test.screen10.line3, "");
  expect(test.screen10.line4, "");
  expect(test.screen10.line1_ex, "");
  expect(test.screen10.line2_ex, "");
  expect(test.screen10.line3_ex, "");
  expect(test.screen10.line4_ex, "");
  expect(test.screen10.sound_led1, 6025);
  expect(test.screen10.sound_led2, 6098);
  expect(test.screen10.sound_led3, 0);
  expect(test.screen11.title, "店員呼び出し選択画面");
  expect(test.screen11.msg1, "");
  expect(test.screen11.msg2, "");
  expect(test.screen11.msg1_size, 0);
  expect(test.screen11.msg2_size, 0);
  expect(test.screen11.sound1, 6034);
  expect(test.screen11.sound2, 0);
  expect(test.screen11.sound3, 0);
  expect(test.screen11.snd_timer, 10);
  expect(test.screen11.timer1, 0);
  expect(test.screen11.timer2, 0);
  expect(test.screen11.timer3, 0);
  expect(test.screen11.dsp_flg1, 0);
  expect(test.screen11.dsp_flg2, 0);
  expect(test.screen11.movie01_ext, 0);
  expect(test.screen11.movie02_ext, 0);
  expect(test.screen11.movie03_ext, 0);
  expect(test.screen11.movie04_ext, 0);
  expect(test.screen11.line_title, "");
  expect(test.screen11.line_title_ex, "");
  expect(test.screen11.line1, "");
  expect(test.screen11.line2, "");
  expect(test.screen11.line3, "");
  expect(test.screen11.line4, "");
  expect(test.screen11.line1_ex, "");
  expect(test.screen11.line2_ex, "");
  expect(test.screen11.line3_ex, "");
  expect(test.screen11.line4_ex, "");
  expect(test.screen11.sound_led1, 6034);
  expect(test.screen11.sound_led2, 0);
  expect(test.screen11.sound_led3, 0);
  expect(test.screen12.title, "店員呼び出し中画面");
  expect(test.screen12.msg1, "");
  expect(test.screen12.msg2, "");
  expect(test.screen12.msg1_size, 0);
  expect(test.screen12.msg2_size, 0);
  expect(test.screen12.sound1, 6035);
  expect(test.screen12.sound2, 0);
  expect(test.screen12.sound3, 0);
  expect(test.screen12.snd_timer, 15);
  expect(test.screen12.timer1, 0);
  expect(test.screen12.timer2, 0);
  expect(test.screen12.timer3, 0);
  expect(test.screen12.dsp_flg1, 0);
  expect(test.screen12.dsp_flg2, 0);
  expect(test.screen12.movie01_ext, 0);
  expect(test.screen12.movie02_ext, 0);
  expect(test.screen12.movie03_ext, 0);
  expect(test.screen12.movie04_ext, 0);
  expect(test.screen12.line_title, "");
  expect(test.screen12.line_title_ex, "");
  expect(test.screen12.line1, "");
  expect(test.screen12.line2, "");
  expect(test.screen12.line3, "");
  expect(test.screen12.line4, "");
  expect(test.screen12.line1_ex, "");
  expect(test.screen12.line2_ex, "");
  expect(test.screen12.line3_ex, "");
  expect(test.screen12.line4_ex, "");
  expect(test.screen12.sound_led1, 6178);
  expect(test.screen12.sound_led2, 0);
  expect(test.screen12.sound_led3, 0);
  expect(test.screen13.title, "パスワード入力");
  expect(test.screen13.msg1, "");
  expect(test.screen13.msg2, "");
  expect(test.screen13.msg1_size, 0);
  expect(test.screen13.msg2_size, 0);
  expect(test.screen13.sound1, 6036);
  expect(test.screen13.sound2, 0);
  expect(test.screen13.sound3, 0);
  expect(test.screen13.snd_timer, 20);
  expect(test.screen13.timer1, 0);
  expect(test.screen13.timer2, 0);
  expect(test.screen13.timer3, 0);
  expect(test.screen13.dsp_flg1, 0);
  expect(test.screen13.dsp_flg2, 0);
  expect(test.screen13.movie01_ext, 0);
  expect(test.screen13.movie02_ext, 0);
  expect(test.screen13.movie03_ext, 0);
  expect(test.screen13.movie04_ext, 0);
  expect(test.screen13.line_title, "");
  expect(test.screen13.line_title_ex, "");
  expect(test.screen13.line1, "");
  expect(test.screen13.line2, "");
  expect(test.screen13.line3, "");
  expect(test.screen13.line4, "");
  expect(test.screen13.line1_ex, "");
  expect(test.screen13.line2_ex, "");
  expect(test.screen13.line3_ex, "");
  expect(test.screen13.line4_ex, "");
  expect(test.screen13.sound_led1, 6036);
  expect(test.screen13.sound_led2, 0);
  expect(test.screen13.sound_led3, 0);
  expect(test.screen14.title, "メンテナンス画面");
  expect(test.screen14.msg1, "");
  expect(test.screen14.msg2, "");
  expect(test.screen14.msg1_size, 0);
  expect(test.screen14.msg2_size, 0);
  expect(test.screen14.sound1, 6031);
  expect(test.screen14.sound2, 1008);
  expect(test.screen14.sound3, 0);
  expect(test.screen14.snd_timer, 0);
  expect(test.screen14.timer1, 0);
  expect(test.screen14.timer2, 0);
  expect(test.screen14.timer3, 0);
  expect(test.screen14.dsp_flg1, 0);
  expect(test.screen14.dsp_flg2, 0);
  expect(test.screen14.movie01_ext, 0);
  expect(test.screen14.movie02_ext, 0);
  expect(test.screen14.movie03_ext, 0);
  expect(test.screen14.movie04_ext, 0);
  expect(test.screen14.line_title, "");
  expect(test.screen14.line_title_ex, "");
  expect(test.screen14.line1, "");
  expect(test.screen14.line2, "");
  expect(test.screen14.line3, "");
  expect(test.screen14.line4, "");
  expect(test.screen14.line1_ex, "");
  expect(test.screen14.line2_ex, "");
  expect(test.screen14.line3_ex, "");
  expect(test.screen14.line4_ex, "");
  expect(test.screen14.sound_led1, 6031);
  expect(test.screen14.sound_led2, 1008);
  expect(test.screen14.sound_led3, 0);
  expect(test.screen15.title, "商品取消画面");
  expect(test.screen15.msg1, "");
  expect(test.screen15.msg2, "");
  expect(test.screen15.msg1_size, 0);
  expect(test.screen15.msg2_size, 0);
  expect(test.screen15.sound1, 1054);
  expect(test.screen15.sound2, 5089);
  expect(test.screen15.sound3, 5090);
  expect(test.screen15.snd_timer, 30);
  expect(test.screen15.timer1, 0);
  expect(test.screen15.timer2, 0);
  expect(test.screen15.timer3, 0);
  expect(test.screen15.dsp_flg1, 0);
  expect(test.screen15.dsp_flg2, 0);
  expect(test.screen15.movie01_ext, 0);
  expect(test.screen15.movie02_ext, 0);
  expect(test.screen15.movie03_ext, 0);
  expect(test.screen15.movie04_ext, 0);
  expect(test.screen15.line_title, "");
  expect(test.screen15.line_title_ex, "");
  expect(test.screen15.line1, "");
  expect(test.screen15.line2, "");
  expect(test.screen15.line3, "");
  expect(test.screen15.line4, "");
  expect(test.screen15.line1_ex, "");
  expect(test.screen15.line2_ex, "");
  expect(test.screen15.line3_ex, "");
  expect(test.screen15.line4_ex, "");
  expect(test.screen15.sound_led1, 1054);
  expect(test.screen15.sound_led2, 5089);
  expect(test.screen15.sound_led3, 5090);
  expect(test.screen16.title, "クレジットリード完了画面");
  expect(test.screen16.msg1, "よろしければ決済ボタンを       押してください");
  expect(test.screen16.msg2, "");
  expect(test.screen16.msg1_size, 0);
  expect(test.screen16.msg2_size, 0);
  expect(test.screen16.sound1, 6119);
  expect(test.screen16.sound2, "");
  expect(test.screen16.sound3, "");
  expect(test.screen16.snd_timer, 20);
  expect(test.screen16.timer1, 0);
  expect(test.screen16.timer2, 0);
  expect(test.screen16.timer3, 0);
  expect(test.screen16.dsp_flg1, 0);
  expect(test.screen16.dsp_flg2, 0);
  expect(test.screen16.movie01_ext, 0);
  expect(test.screen16.movie02_ext, 0);
  expect(test.screen16.movie03_ext, 0);
  expect(test.screen16.movie04_ext, 0);
  expect(test.screen16.line_title, "");
  expect(test.screen16.line_title_ex, "");
  expect(test.screen16.line1, "よろしければ");
  expect(test.screen16.line2, "おわりボタンを");
  expect(test.screen16.line3, "押してください");
  expect(test.screen16.line4, "");
  expect(test.screen16.line1_ex, "When ready, ");
  expect(test.screen16.line2_ex, "press \"finish\"");
  expect(test.screen16.line3_ex, "to complete payment.");
  expect(test.screen16.line4_ex, "");
  expect(test.screen16.sound_led1, 6179);
  expect(test.screen16.sound_led2, "");
  expect(test.screen16.sound_led3, "");
  expect(test.screen16.msg_max, 1);
  expect(test.screen16.line2_1, "クレジット決済できませんでした");
  expect(test.screen16.line2_2, "会計中止ボタンを押して");
  expect(test.screen16.line2_3, "再度お会計を行ってください");
  expect(test.screen16.line2_4, "");
  expect(test.screen16.line2_1_ex, "Payment failed.");
  expect(test.screen16.line2_2_ex, "Press \"Swipe again\"");
  expect(test.screen16.line2_3_ex, "and try it again.");
  expect(test.screen16.line2_4_ex, "");
  expect(test.screen17.title, "Edyタッチ画面");
  expect(test.screen17.msg1, "お会計金額を確認し             “Ｅｄｙ”をタッチしてください");
  expect(test.screen17.msg2, "");
  expect(test.screen17.msg1_size, 0);
  expect(test.screen17.msg2_size, 0);
  expect(test.screen17.sound1, 6124);
  expect(test.screen17.sound2, 6125);
  expect(test.screen17.sound3, 0);
  expect(test.screen17.snd_timer, 20);
  expect(test.screen17.timer1, 0);
  expect(test.screen17.timer2, 0);
  expect(test.screen17.timer3, 0);
  expect(test.screen17.dsp_flg1, 0);
  expect(test.screen17.dsp_flg2, 0);
  expect(test.screen17.movie01_ext, 0);
  expect(test.screen17.movie02_ext, 0);
  expect(test.screen17.movie03_ext, 0);
  expect(test.screen17.movie04_ext, 0);
  expect(test.screen17.line_title, "Ｅｄｙでお支払い");
  expect(test.screen17.line_title_ex, "Edy Payment");
  expect(test.screen17.line1, "お会計金額を確認し");
  expect(test.screen17.line2, "カードをタッチしてください");
  expect(test.screen17.line3, "");
  expect(test.screen17.line4, "");
  expect(test.screen17.line1_ex, "Please read");
  expect(test.screen17.line2_ex, "Card on the Reader.");
  expect(test.screen17.line3_ex, "");
  expect(test.screen17.line4_ex, "");
  expect(test.screen17.sound_led1, 6124);
  expect(test.screen17.sound_led2, 6125);
  expect(test.screen17.sound_led3, 0);
  expect(test.screen18.title, "Edy支払完了画面");
  expect(test.screen18.msg1, "レシートをお取りください。");
  expect(test.screen18.msg2, "");
  expect(test.screen18.msg1_size, 0);
  expect(test.screen18.msg2_size, 0);
  expect(test.screen18.sound1, 6019);
  expect(test.screen18.sound2, 0);
  expect(test.screen18.sound3, 0);
  expect(test.screen18.snd_timer, 0);
  expect(test.screen18.timer1, 5);
  expect(test.screen18.timer2, 10);
  expect(test.screen18.timer3, 0);
  expect(test.screen18.dsp_flg1, 0);
  expect(test.screen18.dsp_flg2, 0);
  expect(test.screen18.movie01_ext, 0);
  expect(test.screen18.movie02_ext, 0);
  expect(test.screen18.movie03_ext, 0);
  expect(test.screen18.movie04_ext, 0);
  expect(test.screen18.line_title, "");
  expect(test.screen18.line_title_ex, "");
  expect(test.screen18.line1, "レシートを");
  expect(test.screen18.line2, "お受け取りください");
  expect(test.screen18.line3, "ありがとう");
  expect(test.screen18.line4, "ございました");
  expect(test.screen18.line1_ex, "Thank you.");
  expect(test.screen18.line2_ex, "Please take your receipt.");
  expect(test.screen18.line3_ex, "");
  expect(test.screen18.line4_ex, "");
  expect(test.screen18.sound_led1, 6019);
  expect(test.screen18.sound_led2, 0);
  expect(test.screen18.sound_led3, 0);
  expect(test.screen19.title, "Edyタッチ完了画面");
  expect(test.screen19.msg1, "レシート発行ボタンを              押してください");
  expect(test.screen19.msg2, "");
  expect(test.screen19.msg1_size, 0);
  expect(test.screen19.msg2_size, 0);
  expect(test.screen19.sound1, 6126);
  expect(test.screen19.sound2, "");
  expect(test.screen19.sound3, "");
  expect(test.screen19.snd_timer, 20);
  expect(test.screen19.timer1, 0);
  expect(test.screen19.timer2, 0);
  expect(test.screen19.timer3, 0);
  expect(test.screen19.dsp_flg1, 0);
  expect(test.screen19.dsp_flg2, 0);
  expect(test.screen19.movie01_ext, 0);
  expect(test.screen19.movie02_ext, 0);
  expect(test.screen19.movie03_ext, 0);
  expect(test.screen19.movie04_ext, 0);
  expect(test.screen19.line_title, "");
  expect(test.screen19.line_title_ex, "");
  expect(test.screen19.line1, "よろしければ");
  expect(test.screen19.line2, "おわりボタンを");
  expect(test.screen19.line3, "押してください");
  expect(test.screen19.line4, "");
  expect(test.screen19.line1_ex, "When ready, ");
  expect(test.screen19.line2_ex, "press \"finish\"");
  expect(test.screen19.line3_ex, "to complete payment.");
  expect(test.screen19.line4_ex, "");
  expect(test.screen19.sound_led1, 6179);
  expect(test.screen19.sound_led2, "");
  expect(test.screen19.sound_led3, "");
  expect(test.screen20.title, "電子マネー確認選択画面");
  expect(test.screen20.msg1, "確認する電子マネーを選択してください");
  expect(test.screen20.msg2, "");
  expect(test.screen20.msg1_size, 0);
  expect(test.screen20.msg2_size, 0);
  expect(test.screen20.sound1, 6028);
  expect(test.screen20.sound2, 0);
  expect(test.screen20.sound3, 0);
  expect(test.screen20.snd_timer, 30);
  expect(test.screen20.timer1, 0);
  expect(test.screen20.timer2, 0);
  expect(test.screen20.timer3, 0);
  expect(test.screen20.dsp_flg1, 0);
  expect(test.screen20.dsp_flg2, 0);
  expect(test.screen20.movie01_ext, 0);
  expect(test.screen20.movie02_ext, 0);
  expect(test.screen20.movie03_ext, 0);
  expect(test.screen20.movie04_ext, 0);
  expect(test.screen20.line_title, "");
  expect(test.screen20.line_title_ex, "");
  expect(test.screen20.line1, "");
  expect(test.screen20.line2, "");
  expect(test.screen20.line3, "");
  expect(test.screen20.line4, "");
  expect(test.screen20.line1_ex, "");
  expect(test.screen20.line2_ex, "");
  expect(test.screen20.line3_ex, "");
  expect(test.screen20.line4_ex, "");
  expect(test.screen20.sound_led1, 6028);
  expect(test.screen20.sound_led2, 0);
  expect(test.screen20.sound_led3, 0);
  expect(test.screen21.title, "電子マネー確認Edyタッチ画面");
  expect(test.screen21.msg1, "Ｅｄｙをタッチしてください");
  expect(test.screen21.msg2, "");
  expect(test.screen21.msg1_size, 0);
  expect(test.screen21.msg2_size, 0);
  expect(test.screen21.sound1, 6009);
  expect(test.screen21.sound2, 0);
  expect(test.screen21.sound3, 0);
  expect(test.screen21.snd_timer, 10);
  expect(test.screen21.timer1, 0);
  expect(test.screen21.timer2, 0);
  expect(test.screen21.timer3, 0);
  expect(test.screen21.dsp_flg1, 0);
  expect(test.screen21.dsp_flg2, 0);
  expect(test.screen21.movie01_ext, 0);
  expect(test.screen21.movie02_ext, 0);
  expect(test.screen21.movie03_ext, 0);
  expect(test.screen21.movie04_ext, 0);
  expect(test.screen21.line_title, "");
  expect(test.screen21.line_title_ex, "");
  expect(test.screen21.line1, "");
  expect(test.screen21.line2, "");
  expect(test.screen21.line3, "");
  expect(test.screen21.line4, "");
  expect(test.screen21.line1_ex, "");
  expect(test.screen21.line2_ex, "");
  expect(test.screen21.line3_ex, "");
  expect(test.screen21.line4_ex, "");
  expect(test.screen21.sound_led1, 6009);
  expect(test.screen21.sound_led2, 0);
  expect(test.screen21.sound_led3, 0);
  expect(test.screen22.title, "電子マネー確認Edy完了画面");
  expect(test.screen22.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen22.msg2, "");
  expect(test.screen22.msg1_size, 0);
  expect(test.screen22.msg2_size, 0);
  expect(test.screen22.sound1, 6029);
  expect(test.screen22.sound2, 0);
  expect(test.screen22.sound3, 0);
  expect(test.screen22.snd_timer, 20);
  expect(test.screen22.timer1, 0);
  expect(test.screen22.timer2, 0);
  expect(test.screen22.timer3, 0);
  expect(test.screen22.dsp_flg1, 0);
  expect(test.screen22.dsp_flg2, 0);
  expect(test.screen22.movie01_ext, 0);
  expect(test.screen22.movie02_ext, 0);
  expect(test.screen22.movie03_ext, 0);
  expect(test.screen22.movie04_ext, 0);
  expect(test.screen22.line_title, "");
  expect(test.screen22.line_title_ex, "");
  expect(test.screen22.line1, "");
  expect(test.screen22.line2, "");
  expect(test.screen22.line3, "");
  expect(test.screen22.line4, "");
  expect(test.screen22.line1_ex, "");
  expect(test.screen22.line2_ex, "");
  expect(test.screen22.line3_ex, "");
  expect(test.screen22.line4_ex, "");
  expect(test.screen22.sound_led1, 6029);
  expect(test.screen22.sound_led2, 0);
  expect(test.screen22.sound_led3, 0);
  expect(test.screen23.title, "返金画面");
  expect(test.screen23.msg1, "お金とレシートを　             お取りください。");
  expect(test.screen23.msg2, "");
  expect(test.screen23.msg1_size, 0);
  expect(test.screen23.msg2_size, 0);
  expect(test.screen23.sound1, 6127);
  expect(test.screen23.sound2, 0);
  expect(test.screen23.sound3, 0);
  expect(test.screen23.snd_timer, 0);
  expect(test.screen23.timer1, 0);
  expect(test.screen23.timer2, 0);
  expect(test.screen23.timer3, 0);
  expect(test.screen23.dsp_flg1, 0);
  expect(test.screen23.dsp_flg2, 0);
  expect(test.screen23.movie01_ext, 0);
  expect(test.screen23.movie02_ext, 0);
  expect(test.screen23.movie03_ext, 0);
  expect(test.screen23.movie04_ext, 0);
  expect(test.screen23.line_title, "");
  expect(test.screen23.line_title_ex, "");
  expect(test.screen23.line1, "お金を");
  expect(test.screen23.line2, "お受け取りください");
  expect(test.screen23.line3, "");
  expect(test.screen23.line4, "");
  expect(test.screen23.line1_ex, "Please take the money.");
  expect(test.screen23.line2_ex, "");
  expect(test.screen23.line3_ex, "");
  expect(test.screen23.line4_ex, "");
  expect(test.screen23.sound_led1, 6098);
  expect(test.screen23.sound_led2, 0);
  expect(test.screen23.sound_led3, 0);
  expect(test.screen24.title, "交通系ICタッチ画面");
  expect(test.screen24.msg1, "お会計金額を確認し             “交通系IC”をタッチしてください");
  expect(test.screen24.msg2, "");
  expect(test.screen24.msg1_size, 0);
  expect(test.screen24.msg2_size, 0);
  expect(test.screen24.sound1, 6153);
  expect(test.screen24.sound2, 6070);
  expect(test.screen24.sound3, 0);
  expect(test.screen24.snd_timer, 20);
  expect(test.screen24.timer1, 0);
  expect(test.screen24.timer2, 0);
  expect(test.screen24.timer3, 0);
  expect(test.screen24.dsp_flg1, 0);
  expect(test.screen24.dsp_flg2, 0);
  expect(test.screen24.movie01_ext, 0);
  expect(test.screen24.movie02_ext, 0);
  expect(test.screen24.movie03_ext, 0);
  expect(test.screen24.movie04_ext, 0);
  expect(test.screen24.line_title, "交通系ICでお支払い");
  expect(test.screen24.line_title_ex, "IC Card Payment");
  expect(test.screen24.line1, "お会計金額を確認し");
  expect(test.screen24.line2, "カードをタッチしてください");
  expect(test.screen24.line3, "");
  expect(test.screen24.line4, "");
  expect(test.screen24.line1_ex, "Tap your IC card");
  expect(test.screen24.line2_ex, "on the terminal.");
  expect(test.screen24.line3_ex, "");
  expect(test.screen24.line4_ex, "");
  expect(test.screen24.sound_led1, 6153);
  expect(test.screen24.sound_led2, 6070);
  expect(test.screen24.sound_led3, 0);
  expect(test.screen25.title, "交通系IC支払完了画面");
  expect(test.screen25.msg1, "レシートをお取りください。");
  expect(test.screen25.msg2, "");
  expect(test.screen25.msg1_size, 0);
  expect(test.screen25.msg2_size, 0);
  expect(test.screen25.sound1, 6219);
  expect(test.screen25.sound2, 0);
  expect(test.screen25.sound3, 0);
  expect(test.screen25.snd_timer, 0);
  expect(test.screen25.timer1, 5);
  expect(test.screen25.timer2, 10);
  expect(test.screen25.timer3, 0);
  expect(test.screen25.dsp_flg1, 0);
  expect(test.screen25.dsp_flg2, 0);
  expect(test.screen25.movie01_ext, 0);
  expect(test.screen25.movie02_ext, 0);
  expect(test.screen25.movie03_ext, 0);
  expect(test.screen25.movie04_ext, 0);
  expect(test.screen25.line_title, "");
  expect(test.screen25.line_title_ex, "");
  expect(test.screen25.line1, "レシートを");
  expect(test.screen25.line2, "お受け取りください");
  expect(test.screen25.line3, "ありがとう");
  expect(test.screen25.line4, "ございました");
  expect(test.screen25.line1_ex, "Please take your card");
  expect(test.screen25.line2_ex, "and the receipt.");
  expect(test.screen25.line3_ex, "Thank you.");
  expect(test.screen25.line4_ex, "");
  expect(test.screen25.sound_led1, 6219);
  expect(test.screen25.sound_led2, 0);
  expect(test.screen25.sound_led3, 0);
  expect(test.screen26.title, "交通系ICタッチ完了画面");
  expect(test.screen26.msg1, "レシート発行ボタンを              押してください");
  expect(test.screen26.msg2, "");
  expect(test.screen26.msg1_size, 0);
  expect(test.screen26.msg2_size, 0);
  expect(test.screen26.sound1, 6126);
  expect(test.screen26.sound2, "");
  expect(test.screen26.sound3, "");
  expect(test.screen26.snd_timer, 20);
  expect(test.screen26.timer1, 0);
  expect(test.screen26.timer2, 0);
  expect(test.screen26.timer3, 0);
  expect(test.screen26.dsp_flg1, 0);
  expect(test.screen26.dsp_flg2, 0);
  expect(test.screen26.movie01_ext, 0);
  expect(test.screen26.movie02_ext, 0);
  expect(test.screen26.movie03_ext, 0);
  expect(test.screen26.movie04_ext, 0);
  expect(test.screen26.line_title, "");
  expect(test.screen26.line_title_ex, "");
  expect(test.screen26.line1, "よろしければ");
  expect(test.screen26.line2, "おわりボタンを");
  expect(test.screen26.line3, "押してください");
  expect(test.screen26.line4, "");
  expect(test.screen26.line1_ex, "When ready, ");
  expect(test.screen26.line2_ex, "press \"finish\"");
  expect(test.screen26.line3_ex, "to complete payment.");
  expect(test.screen26.line4_ex, "");
  expect(test.screen26.sound_led1, 6179);
  expect(test.screen26.sound_led2, "");
  expect(test.screen26.sound_led3, "");
  expect(test.screen27.title, "電子マネー確認交通系ICタッチ画面");
  expect(test.screen27.msg1, "交通系ICをタッチしてください");
  expect(test.screen27.msg2, "");
  expect(test.screen27.msg1_size, 0);
  expect(test.screen27.msg2_size, 0);
  expect(test.screen27.sound1, 6153);
  expect(test.screen27.sound2, 0);
  expect(test.screen27.sound3, 0);
  expect(test.screen27.snd_timer, 10);
  expect(test.screen27.timer1, 0);
  expect(test.screen27.timer2, 0);
  expect(test.screen27.timer3, 0);
  expect(test.screen27.dsp_flg1, 0);
  expect(test.screen27.dsp_flg2, 0);
  expect(test.screen27.movie01_ext, 0);
  expect(test.screen27.movie02_ext, 0);
  expect(test.screen27.movie03_ext, 0);
  expect(test.screen27.movie04_ext, 0);
  expect(test.screen27.line_title, "");
  expect(test.screen27.line_title_ex, "");
  expect(test.screen27.line1, "");
  expect(test.screen27.line2, "");
  expect(test.screen27.line3, "");
  expect(test.screen27.line4, "");
  expect(test.screen27.line1_ex, "");
  expect(test.screen27.line2_ex, "");
  expect(test.screen27.line3_ex, "");
  expect(test.screen27.line4_ex, "");
  expect(test.screen27.sound_led1, 6153);
  expect(test.screen27.sound_led2, 0);
  expect(test.screen27.sound_led3, 0);
  expect(test.screen28.title, "電子マネー確認交通系IC完了画面");
  expect(test.screen28.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen28.msg2, "");
  expect(test.screen28.msg1_size, 0);
  expect(test.screen28.msg2_size, 0);
  expect(test.screen28.sound1, 6029);
  expect(test.screen28.sound2, 0);
  expect(test.screen28.sound3, 0);
  expect(test.screen28.snd_timer, 20);
  expect(test.screen28.timer1, 0);
  expect(test.screen28.timer2, 0);
  expect(test.screen28.timer3, 0);
  expect(test.screen28.dsp_flg1, 0);
  expect(test.screen28.dsp_flg2, 0);
  expect(test.screen28.movie01_ext, 0);
  expect(test.screen28.movie02_ext, 0);
  expect(test.screen28.movie03_ext, 0);
  expect(test.screen28.movie04_ext, 0);
  expect(test.screen28.line_title, "");
  expect(test.screen28.line_title_ex, "");
  expect(test.screen28.line1, "");
  expect(test.screen28.line2, "");
  expect(test.screen28.line3, "");
  expect(test.screen28.line4, "");
  expect(test.screen28.line1_ex, "");
  expect(test.screen28.line2_ex, "");
  expect(test.screen28.line3_ex, "");
  expect(test.screen28.line4_ex, "");
  expect(test.screen28.sound_led1, 6029);
  expect(test.screen28.sound_led2, 0);
  expect(test.screen28.sound_led3, 0);
  expect(test.screen29.title, "レジ袋登録画面");
  expect(test.screen29.msg1, "レジ袋登録");
  expect(test.screen29.msg2, "レジ袋は有料となっております。枚数を入力してください。");
  expect(test.screen29.msg1_size, 1);
  expect(test.screen29.msg2_size, 1);
  expect(test.screen29.sound1, 0);
  expect(test.screen29.sound2, 0);
  expect(test.screen29.sound3, 0);
  expect(test.screen29.snd_timer, 0);
  expect(test.screen29.timer1, 0);
  expect(test.screen29.timer2, 0);
  expect(test.screen29.timer3, 0);
  expect(test.screen29.dsp_flg1, 0);
  expect(test.screen29.dsp_flg2, 0);
  expect(test.screen29.movie01_ext, 0);
  expect(test.screen29.movie02_ext, 0);
  expect(test.screen29.movie03_ext, 0);
  expect(test.screen29.movie04_ext, 0);
  expect(test.screen29.line_title, "");
  expect(test.screen29.line_title_ex, "");
  expect(test.screen29.line1, "");
  expect(test.screen29.line2, "");
  expect(test.screen29.line3, "");
  expect(test.screen29.line4, "");
  expect(test.screen29.line1_ex, "");
  expect(test.screen29.line2_ex, "");
  expect(test.screen29.line3_ex, "");
  expect(test.screen29.line4_ex, "");
  expect(test.screen29.sound_led1, 0);
  expect(test.screen29.sound_led2, 0);
  expect(test.screen29.sound_led3, 0);
  expect(test.screen30.title, "おつりチャージ画面");
  expect(test.screen30.msg1, "");
  expect(test.screen30.msg2, "");
  expect(test.screen30.msg1_size, 0);
  expect(test.screen30.msg2_size, 0);
  expect(test.screen30.sound1, 6183);
  expect(test.screen30.sound2, 0);
  expect(test.screen30.sound3, 0);
  expect(test.screen30.snd_timer, 20);
  expect(test.screen30.timer1, 0);
  expect(test.screen30.timer2, 0);
  expect(test.screen30.timer3, 0);
  expect(test.screen30.dsp_flg1, 0);
  expect(test.screen30.dsp_flg2, 0);
  expect(test.screen30.movie01_ext, 0);
  expect(test.screen30.movie02_ext, 0);
  expect(test.screen30.movie03_ext, 0);
  expect(test.screen30.movie04_ext, 0);
  expect(test.screen30.line_title, "");
  expect(test.screen30.line_title_ex, "");
  expect(test.screen30.line1, "");
  expect(test.screen30.line2, "");
  expect(test.screen30.line3, "");
  expect(test.screen30.line4, "");
  expect(test.screen30.line1_ex, "");
  expect(test.screen30.line2_ex, "");
  expect(test.screen30.line3_ex, "");
  expect(test.screen30.line4_ex, "");
  expect(test.screen30.sound_led1, 6183);
  expect(test.screen30.sound_led2, 0);
  expect(test.screen30.sound_led3, 0);
  expect(test.screen31.title, "現金チャージ選択画面");
  expect(test.screen31.msg1, "チャージ金額を選択してください");
  expect(test.screen31.msg2, "Select the amount you want to add to your card.");
  expect(test.screen31.msg1_size, 30);
  expect(test.screen31.msg2_size, 47);
  expect(test.screen31.sound1, 6198);
  expect(test.screen31.sound2, 0);
  expect(test.screen31.sound3, 0);
  expect(test.screen31.snd_timer, 30);
  expect(test.screen31.timer1, 0);
  expect(test.screen31.timer2, 0);
  expect(test.screen31.timer3, 0);
  expect(test.screen31.dsp_flg1, 0);
  expect(test.screen31.dsp_flg2, 0);
  expect(test.screen31.movie01_ext, 0);
  expect(test.screen31.movie02_ext, 0);
  expect(test.screen31.movie03_ext, 0);
  expect(test.screen31.movie04_ext, 0);
  expect(test.screen31.line_title, "");
  expect(test.screen31.line_title_ex, "");
  expect(test.screen31.line1, "");
  expect(test.screen31.line2, "");
  expect(test.screen31.line3, "");
  expect(test.screen31.line4, "");
  expect(test.screen31.line1_ex, "");
  expect(test.screen31.line2_ex, "");
  expect(test.screen31.line3_ex, "");
  expect(test.screen31.line4_ex, "");
  expect(test.screen31.sound_led1, 6198);
  expect(test.screen31.sound_led2, 0);
  expect(test.screen31.sound_led3, 0);
  expect(test.screen32.title, "ｎｉｍｏｃａカード確認画面");
  expect(test.screen32.msg1, "★ｎｉｍｏｃａカード、または");
  expect(test.screen32.msg2, "クレジットｎｉｍｏｃａカードはお持ちですか？");
  expect(test.screen32.msg1_size, 28);
  expect(test.screen32.msg2_size, 44);
  expect(test.screen32.sound1, 6214);
  expect(test.screen32.sound2, 0);
  expect(test.screen32.sound3, 0);
  expect(test.screen32.snd_timer, 30);
  expect(test.screen32.timer1, 0);
  expect(test.screen32.timer2, 0);
  expect(test.screen32.timer3, 0);
  expect(test.screen32.dsp_flg1, 0);
  expect(test.screen32.dsp_flg2, 0);
  expect(test.screen32.movie01_ext, 0);
  expect(test.screen32.movie02_ext, 0);
  expect(test.screen32.movie03_ext, 0);
  expect(test.screen32.movie04_ext, 0);
  expect(test.screen32.line_title, "");
  expect(test.screen32.line_title_ex, "");
  expect(test.screen32.line1, "");
  expect(test.screen32.line2, "");
  expect(test.screen32.line3, "");
  expect(test.screen32.line4, "");
  expect(test.screen32.line1_ex, "");
  expect(test.screen32.line2_ex, "");
  expect(test.screen32.line3_ex, "");
  expect(test.screen32.line4_ex, "");
  expect(test.screen32.sound_led1, 6214);
  expect(test.screen32.sound_led2, 0);
  expect(test.screen32.sound_led3, 0);
  expect(test.screen33.title, "交通系ICチャージ画面");
  expect(test.screen33.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen33.msg2, "");
  expect(test.screen33.msg1_size, 0);
  expect(test.screen33.msg2_size, 0);
  expect(test.screen33.sound1, 6005);
  expect(test.screen33.sound2, 6006);
  expect(test.screen33.sound3, 6015);
  expect(test.screen33.snd_timer, 20);
  expect(test.screen33.timer1, 0);
  expect(test.screen33.timer2, 0);
  expect(test.screen33.timer3, 0);
  expect(test.screen33.dsp_flg1, 0);
  expect(test.screen33.dsp_flg2, 0);
  expect(test.screen33.movie01_ext, 0);
  expect(test.screen33.movie02_ext, 0);
  expect(test.screen33.movie03_ext, 0);
  expect(test.screen33.movie04_ext, 0);
  expect(test.screen33.line_title, "交通系ICチャージ");
  expect(test.screen33.line_title_ex, "Reload Card");
  expect(test.screen33.line1, "お金を");
  expect(test.screen33.line2, "入れてください");
  expect(test.screen33.line3, "");
  expect(test.screen33.line4, "");
  expect(test.screen33.line1_ex, "Insert the payment.");
  expect(test.screen33.line2_ex, "");
  expect(test.screen33.line3_ex, "");
  expect(test.screen33.line4_ex, "");
  expect(test.screen33.sound_led1, 6216);
  expect(test.screen33.sound_led2, 6216);
  expect(test.screen33.sound_led3, 6015);
  expect(test.screen34.title, "交通系ICチャージタッチ画面");
  expect(test.screen34.msg1, "チャージ金額を確認し“交通系IC”をタッチしてください");
  expect(test.screen34.msg2, "");
  expect(test.screen34.msg1_size, 0);
  expect(test.screen34.msg2_size, 0);
  expect(test.screen34.sound1, 6153);
  expect(test.screen34.sound2, 6070);
  expect(test.screen34.sound3, 0);
  expect(test.screen34.snd_timer, 20);
  expect(test.screen34.timer1, 0);
  expect(test.screen34.timer2, 0);
  expect(test.screen34.timer3, 0);
  expect(test.screen34.dsp_flg1, 0);
  expect(test.screen34.dsp_flg2, 0);
  expect(test.screen34.movie01_ext, 0);
  expect(test.screen34.movie02_ext, 0);
  expect(test.screen34.movie03_ext, 0);
  expect(test.screen34.movie04_ext, 0);
  expect(test.screen34.line_title, "交通系ICチャージ");
  expect(test.screen34.line_title_ex, "Reload Card");
  expect(test.screen34.line1, "チャージ金額を確認し");
  expect(test.screen34.line2, "カードをタッチしてください");
  expect(test.screen34.line3, "");
  expect(test.screen34.line4, "");
  expect(test.screen34.line1_ex, "Tap your IC card");
  expect(test.screen34.line2_ex, "on the terminal.");
  expect(test.screen34.line3_ex, "");
  expect(test.screen34.line4_ex, "");
  expect(test.screen34.sound_led1, 6153);
  expect(test.screen34.sound_led2, 6070);
  expect(test.screen34.sound_led3, 0);
  expect(test.screen35.title, "チャージする、しない確認画面");
  expect(test.screen35.msg1, "残額が不足しています。チャージしますか？");
  expect(test.screen35.msg2, "");
  expect(test.screen35.msg1_size, 42);
  expect(test.screen35.msg2_size, 0);
  expect(test.screen35.sound1, 6218);
  expect(test.screen35.sound2, 0);
  expect(test.screen35.sound3, 0);
  expect(test.screen35.snd_timer, 30);
  expect(test.screen35.timer1, 0);
  expect(test.screen35.timer2, 0);
  expect(test.screen35.timer3, 0);
  expect(test.screen35.dsp_flg1, 0);
  expect(test.screen35.dsp_flg2, 0);
  expect(test.screen35.movie01_ext, 0);
  expect(test.screen35.movie02_ext, 0);
  expect(test.screen35.movie03_ext, 0);
  expect(test.screen35.movie04_ext, 0);
  expect(test.screen35.line_title, "");
  expect(test.screen35.line_title_ex, "");
  expect(test.screen35.line1, "");
  expect(test.screen35.line2, "");
  expect(test.screen35.line3, "");
  expect(test.screen35.line4, "");
  expect(test.screen35.line1_ex, "");
  expect(test.screen35.line2_ex, "");
  expect(test.screen35.line3_ex, "");
  expect(test.screen35.line4_ex, "");
  expect(test.screen35.sound_led1, 6218);
  expect(test.screen35.sound_led2, 0);
  expect(test.screen35.sound_led3, 0);
  expect(test.screen36.title, "残額不足！！現金併用する？しない？確認画面");
  expect(test.screen36.msg1, "残額が不足している為、支払いが完了出来ません");
  expect(test.screen36.msg2, "不足額を現金でお支払いください");
  expect(test.screen36.msg1_size, 44);
  expect(test.screen36.msg2_size, 30);
  expect(test.screen36.sound1, 6224);
  expect(test.screen36.sound2, 0);
  expect(test.screen36.sound3, 0);
  expect(test.screen36.snd_timer, 30);
  expect(test.screen36.timer1, 0);
  expect(test.screen36.timer2, 0);
  expect(test.screen36.timer3, 0);
  expect(test.screen36.dsp_flg1, 0);
  expect(test.screen36.dsp_flg2, 0);
  expect(test.screen36.movie01_ext, 0);
  expect(test.screen36.movie02_ext, 0);
  expect(test.screen36.movie03_ext, 0);
  expect(test.screen36.movie04_ext, 0);
  expect(test.screen36.line_title, "");
  expect(test.screen36.line_title_ex, "");
  expect(test.screen36.line1, "");
  expect(test.screen36.line2, "");
  expect(test.screen36.line3, "");
  expect(test.screen36.line4, "");
  expect(test.screen36.line1_ex, "");
  expect(test.screen36.line2_ex, "");
  expect(test.screen36.line3_ex, "");
  expect(test.screen36.line4_ex, "");
  expect(test.screen36.sound_led1, 6224);
  expect(test.screen36.sound_led2, 0);
  expect(test.screen36.sound_led3, 0);
  expect(test.screen37.title, "領収書？レシート？発行確認画面");
  expect(test.screen37.msg1, "どちらか一方のボタンを選択してください");
  expect(test.screen37.msg2, "Please touch either of the buttons.");
  expect(test.screen37.msg1_size, 38);
  expect(test.screen37.msg2_size, 35);
  expect(test.screen37.sound1, 6225);
  expect(test.screen37.sound2, 0);
  expect(test.screen37.sound3, 0);
  expect(test.screen37.snd_timer, 30);
  expect(test.screen37.timer1, 0);
  expect(test.screen37.timer2, 0);
  expect(test.screen37.timer3, 0);
  expect(test.screen37.dsp_flg1, 0);
  expect(test.screen37.dsp_flg2, 0);
  expect(test.screen37.movie01_ext, 0);
  expect(test.screen37.movie02_ext, 0);
  expect(test.screen37.movie03_ext, 0);
  expect(test.screen37.movie04_ext, 0);
  expect(test.screen37.line_title, "");
  expect(test.screen37.line_title_ex, "");
  expect(test.screen37.line1, "");
  expect(test.screen37.line2, "");
  expect(test.screen37.line3, "");
  expect(test.screen37.line4, "");
  expect(test.screen37.line1_ex, "");
  expect(test.screen37.line2_ex, "");
  expect(test.screen37.line3_ex, "");
  expect(test.screen37.line4_ex, "");
  expect(test.screen37.sound_led1, 6225);
  expect(test.screen37.sound_led2, 0);
  expect(test.screen37.sound_led3, 0);
  expect(test.screen38.title, "交通系ICチャージ入金完了画面");
  expect(test.screen38.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen38.msg2, "");
  expect(test.screen38.msg1_size, 0);
  expect(test.screen38.msg2_size, 0);
  expect(test.screen38.sound1, 6217);
  expect(test.screen38.sound2, 0);
  expect(test.screen38.sound3, 0);
  expect(test.screen38.snd_timer, 20);
  expect(test.screen38.timer1, 10);
  expect(test.screen38.timer2, 0);
  expect(test.screen38.timer3, 0);
  expect(test.screen38.dsp_flg1, 0);
  expect(test.screen38.dsp_flg2, 0);
  expect(test.screen38.movie01_ext, 0);
  expect(test.screen38.movie02_ext, 0);
  expect(test.screen38.movie03_ext, 0);
  expect(test.screen38.movie04_ext, 0);
  expect(test.screen38.line_title, "交通系ICチャージ");
  expect(test.screen38.line_title_ex, "Reload Card");
  expect(test.screen38.line1, "よろしければ");
  expect(test.screen38.line2, "チャージボタンを");
  expect(test.screen38.line3, "押してください");
  expect(test.screen38.line4, "");
  expect(test.screen38.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen38.line2_ex, "button to reload");
  expect(test.screen38.line3_ex, "your card.");
  expect(test.screen38.line4_ex, "");
  expect(test.screen38.sound_led1, 6179);
  expect(test.screen38.sound_led2, 6217);
  expect(test.screen38.sound_led3, 0);
  expect(test.screen39.title, "未精算支払画面");
  expect(test.screen39.msg1, "よろしければ未精算支払へを押してください");
  expect(test.screen39.msg2, "");
  expect(test.screen39.msg1_size, 0);
  expect(test.screen39.msg2_size, 0);
  expect(test.screen39.sound1, 6226);
  expect(test.screen39.sound2, 0);
  expect(test.screen39.sound3, 0);
  expect(test.screen39.snd_timer, 20);
  expect(test.screen39.timer1, 10);
  expect(test.screen39.timer2, 0);
  expect(test.screen39.timer3, 0);
  expect(test.screen39.dsp_flg1, 0);
  expect(test.screen39.dsp_flg2, 0);
  expect(test.screen39.movie01_ext, 0);
  expect(test.screen39.movie02_ext, 0);
  expect(test.screen39.movie03_ext, 0);
  expect(test.screen39.movie04_ext, 0);
  expect(test.screen39.line_title, "");
  expect(test.screen39.line_title_ex, "");
  expect(test.screen39.line1, "よろしければ");
  expect(test.screen39.line2, "未精算支払へを");
  expect(test.screen39.line3, "押してください");
  expect(test.screen39.line4, "");
  expect(test.screen39.line1_ex, "Touch the");
  expect(test.screen39.line2_ex, "\"Pay remaining balance\"");
  expect(test.screen39.line3_ex, "button.");
  expect(test.screen39.line4_ex, "");
  expect(test.screen39.sound_led1, 6226);
  expect(test.screen39.sound_led2, 0);
  expect(test.screen39.sound_led3, 0);
  expect(test.screen40.title, "ポイント機能なしカード通知画面");
  expect(test.screen40.msg1, "ポイント機能なしカードです");
  expect(test.screen40.msg2, "You cannot use this card to earn points.");
  expect(test.screen40.msg1_size, 26);
  expect(test.screen40.msg2_size, 40);
  expect(test.screen40.sound1, 6632);
  expect(test.screen40.sound2, 0);
  expect(test.screen40.sound3, 0);
  expect(test.screen40.snd_timer, 30);
  expect(test.screen40.timer1, 0);
  expect(test.screen40.timer2, 0);
  expect(test.screen40.timer3, 0);
  expect(test.screen40.dsp_flg1, 0);
  expect(test.screen40.dsp_flg2, 0);
  expect(test.screen40.movie01_ext, 0);
  expect(test.screen40.movie02_ext, 0);
  expect(test.screen40.movie03_ext, 0);
  expect(test.screen40.movie04_ext, 0);
  expect(test.screen40.line_title, "");
  expect(test.screen40.line_title_ex, "");
  expect(test.screen40.line1, "");
  expect(test.screen40.line2, "");
  expect(test.screen40.line3, "");
  expect(test.screen40.line4, "");
  expect(test.screen40.line1_ex, "");
  expect(test.screen40.line2_ex, "");
  expect(test.screen40.line3_ex, "");
  expect(test.screen40.line4_ex, "");
  expect(test.screen40.sound_led1, 6632);
  expect(test.screen40.sound_led2, 0);
  expect(test.screen40.sound_led3, 0);
  expect(test.screen41.title, "チケットお取り下さい画面");
  expect(test.screen41.msg1, "チケットをお取りください。");
  expect(test.screen41.msg2, "");
  expect(test.screen41.msg1_size, 0);
  expect(test.screen41.msg2_size, 0);
  expect(test.screen41.sound1, 6228);
  expect(test.screen41.sound2, 0);
  expect(test.screen41.sound3, 0);
  expect(test.screen41.snd_timer, 0);
  expect(test.screen41.timer1, 5);
  expect(test.screen41.timer2, 10);
  expect(test.screen41.timer3, 0);
  expect(test.screen41.dsp_flg1, 0);
  expect(test.screen41.dsp_flg2, 0);
  expect(test.screen41.movie01_ext, 0);
  expect(test.screen41.movie02_ext, 0);
  expect(test.screen41.movie03_ext, 0);
  expect(test.screen41.movie04_ext, 0);
  expect(test.screen41.line_title, "");
  expect(test.screen41.line_title_ex, "");
  expect(test.screen41.line1, "チケットとレシートを");
  expect(test.screen41.line2, "お受け取りください");
  expect(test.screen41.line3, "ありがとう");
  expect(test.screen41.line4, "ございました");
  expect(test.screen41.line1_ex, "Thank you.");
  expect(test.screen41.line2_ex, "Please take your receipt.");
  expect(test.screen41.line3_ex, "");
  expect(test.screen41.line4_ex, "");
  expect(test.screen41.sound_led1, 6228);
  expect(test.screen41.sound_led2, 0);
  expect(test.screen41.sound_led3, 0);
  expect(test.screen42.title, "クレジット利用画面<verifone>");
  expect(test.screen42.msg1, "クレジットでお会計ですね");
  expect(test.screen42.msg2, "");
  expect(test.screen42.msg1_size, 0);
  expect(test.screen42.msg2_size, 0);
  expect(test.screen42.sound1, 6007);
  expect(test.screen42.sound2, 6008);
  expect(test.screen42.sound3, 0);
  expect(test.screen42.snd_timer, 20);
  expect(test.screen42.timer1, 0);
  expect(test.screen42.timer2, 0);
  expect(test.screen42.timer3, 0);
  expect(test.screen42.dsp_flg1, 0);
  expect(test.screen42.dsp_flg2, 0);
  expect(test.screen42.movie01_ext, 0);
  expect(test.screen42.movie02_ext, 0);
  expect(test.screen42.movie03_ext, 0);
  expect(test.screen42.movie04_ext, 0);
  expect(test.screen42.line_title, "クレジットでお支払い");
  expect(test.screen42.line_title_ex, "Credit Card Payment");
  expect(test.screen42.line1, "お支払い金額を確認し");
  expect(test.screen42.line2, "カードを読ませてください");
  expect(test.screen42.line3, "");
  expect(test.screen42.line4, "");
  expect(test.screen42.line1_ex, "Please swipe");
  expect(test.screen42.line2_ex, "your credit card.");
  expect(test.screen42.line3_ex, "");
  expect(test.screen42.line4_ex, "");
  expect(test.screen42.sound_led1, 6007);
  expect(test.screen42.sound_led2, 6008);
  expect(test.screen42.sound_led3, 0);
  expect(test.screen43.title, "Edy利用画面<verifone>");
  expect(test.screen43.msg1, "Edyでお会計ですね");
  expect(test.screen43.msg2, "");
  expect(test.screen43.msg1_size, 0);
  expect(test.screen43.msg2_size, 0);
  expect(test.screen43.sound1, 6124);
  expect(test.screen43.sound2, 6125);
  expect(test.screen43.sound3, 0);
  expect(test.screen43.snd_timer, 20);
  expect(test.screen43.timer1, 0);
  expect(test.screen43.timer2, 0);
  expect(test.screen43.timer3, 0);
  expect(test.screen43.dsp_flg1, 0);
  expect(test.screen43.dsp_flg2, 0);
  expect(test.screen43.movie01_ext, 0);
  expect(test.screen43.movie02_ext, 0);
  expect(test.screen43.movie03_ext, 0);
  expect(test.screen43.movie04_ext, 0);
  expect(test.screen43.line_title, "Ｅｄｙでお支払い");
  expect(test.screen43.line_title_ex, "Edy Payment");
  expect(test.screen43.line1, "お支払い金額を確認し");
  expect(test.screen43.line2, "カードをタッチしてください");
  expect(test.screen43.line3, "");
  expect(test.screen43.line4, "");
  expect(test.screen43.line1_ex, "Tap your IC card");
  expect(test.screen43.line2_ex, "on the terminal.");
  expect(test.screen43.line3_ex, "");
  expect(test.screen43.line4_ex, "");
  expect(test.screen43.sound_led1, 6124);
  expect(test.screen43.sound_led2, 6125);
  expect(test.screen43.sound_led3, 0);
  expect(test.screen44.title, "iD利用画面<verifone>");
  expect(test.screen44.msg1, "iDでお会計ですね");
  expect(test.screen44.msg2, "");
  expect(test.screen44.msg1_size, 0);
  expect(test.screen44.msg2_size, 0);
  expect(test.screen44.sound1, 6124);
  expect(test.screen44.sound2, 6255);
  expect(test.screen44.sound3, 0);
  expect(test.screen44.snd_timer, 20);
  expect(test.screen44.timer1, 0);
  expect(test.screen44.timer2, 0);
  expect(test.screen44.timer3, 0);
  expect(test.screen44.dsp_flg1, 0);
  expect(test.screen44.dsp_flg2, 0);
  expect(test.screen44.movie01_ext, 0);
  expect(test.screen44.movie02_ext, 0);
  expect(test.screen44.movie03_ext, 0);
  expect(test.screen44.movie04_ext, 0);
  expect(test.screen44.line_title, "ｉＤでお支払い");
  expect(test.screen44.line_title_ex, "iD Payment");
  expect(test.screen44.line1, "お支払い金額を確認し");
  expect(test.screen44.line2, "カードをタッチしてください");
  expect(test.screen44.line3, "");
  expect(test.screen44.line4, "");
  expect(test.screen44.line1_ex, "Tap your IC card");
  expect(test.screen44.line2_ex, "on the terminal.");
  expect(test.screen44.line3_ex, "");
  expect(test.screen44.line4_ex, "");
  expect(test.screen44.sound_led1, 6124);
  expect(test.screen44.sound_led2, 6255);
  expect(test.screen44.sound_led3, 0);
  expect(test.screen45.title, "交通系IC利用画面<verifone>");
  expect(test.screen45.msg1, "交通系ICでお会計ですね");
  expect(test.screen45.msg2, "");
  expect(test.screen45.msg1_size, 0);
  expect(test.screen45.msg2_size, 0);
  expect(test.screen45.sound1, 6124);
  expect(test.screen45.sound2, 6153);
  expect(test.screen45.sound3, 0);
  expect(test.screen45.snd_timer, 20);
  expect(test.screen45.timer1, 0);
  expect(test.screen45.timer2, 0);
  expect(test.screen45.timer3, 0);
  expect(test.screen45.dsp_flg1, 0);
  expect(test.screen45.dsp_flg2, 0);
  expect(test.screen45.movie01_ext, 0);
  expect(test.screen45.movie02_ext, 0);
  expect(test.screen45.movie03_ext, 0);
  expect(test.screen45.movie04_ext, 0);
  expect(test.screen45.line_title, "交通系ＩＣでお支払い");
  expect(test.screen45.line_title_ex, "IC Card Payment");
  expect(test.screen45.line1, "お支払い金額を確認し");
  expect(test.screen45.line2, "カードをタッチしてください");
  expect(test.screen45.line3, "");
  expect(test.screen45.line4, "");
  expect(test.screen45.line1_ex, "Tap your IC card");
  expect(test.screen45.line2_ex, "on the terminal.");
  expect(test.screen45.line3_ex, "");
  expect(test.screen45.line4_ex, "");
  expect(test.screen45.sound_led1, 6124);
  expect(test.screen45.sound_led2, 6153);
  expect(test.screen45.sound_led3, 0);
  expect(test.screen46.title, "QUICPay利用画面<verifone>");
  expect(test.screen46.msg1, "QUICPayでお会計ですね");
  expect(test.screen46.msg2, "");
  expect(test.screen46.msg1_size, 0);
  expect(test.screen46.msg2_size, 0);
  expect(test.screen46.sound1, 6124);
  expect(test.screen46.sound2, 6254);
  expect(test.screen46.sound3, 0);
  expect(test.screen46.snd_timer, 20);
  expect(test.screen46.timer1, 0);
  expect(test.screen46.timer2, 0);
  expect(test.screen46.timer3, 0);
  expect(test.screen46.dsp_flg1, 0);
  expect(test.screen46.dsp_flg2, 0);
  expect(test.screen46.movie01_ext, 0);
  expect(test.screen46.movie02_ext, 0);
  expect(test.screen46.movie03_ext, 0);
  expect(test.screen46.movie04_ext, 0);
  expect(test.screen46.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen46.line_title_ex, "QUICPay Payment");
  expect(test.screen46.line1, "お支払い金額を確認し");
  expect(test.screen46.line2, "カードをタッチしてください");
  expect(test.screen46.line3, "");
  expect(test.screen46.line4, "");
  expect(test.screen46.line1_ex, "Tap your IC card");
  expect(test.screen46.line2_ex, "on the terminal.");
  expect(test.screen46.line3_ex, "");
  expect(test.screen46.line4_ex, "");
  expect(test.screen46.sound_led1, 6124);
  expect(test.screen46.sound_led2, 6254);
  expect(test.screen46.sound_led3, 0);
  expect(test.screen47.title, "WAON利用画面<verifone>");
  expect(test.screen47.msg1, "WAONでお会計ですね");
  expect(test.screen47.msg2, "");
  expect(test.screen47.msg1_size, 0);
  expect(test.screen47.msg2_size, 0);
  expect(test.screen47.sound1, 6124);
  expect(test.screen47.sound2, 6256);
  expect(test.screen47.sound3, 0);
  expect(test.screen47.snd_timer, 20);
  expect(test.screen47.timer1, 0);
  expect(test.screen47.timer2, 0);
  expect(test.screen47.timer3, 0);
  expect(test.screen47.dsp_flg1, 0);
  expect(test.screen47.dsp_flg2, 0);
  expect(test.screen47.movie01_ext, 0);
  expect(test.screen47.movie02_ext, 0);
  expect(test.screen47.movie03_ext, 0);
  expect(test.screen47.movie04_ext, 0);
  expect(test.screen47.line_title, "ＷＡＯＮでお支払い");
  expect(test.screen47.line_title_ex, "WAON Payment");
  expect(test.screen47.line1, "お支払い金額を確認し");
  expect(test.screen47.line2, "カードをタッチしてください");
  expect(test.screen47.line3, "");
  expect(test.screen47.line4, "");
  expect(test.screen47.line1_ex, "Tap your IC card");
  expect(test.screen47.line2_ex, "on the terminal.");
  expect(test.screen47.line3_ex, "");
  expect(test.screen47.line4_ex, "");
  expect(test.screen47.sound_led1, 6124);
  expect(test.screen47.sound_led2, 6256);
  expect(test.screen47.sound_led3, 0);
  expect(test.screen48.title, "nanaco利用画面<verifone>");
  expect(test.screen48.msg1, "nanacoでお会計ですね");
  expect(test.screen48.msg2, "");
  expect(test.screen48.msg1_size, 0);
  expect(test.screen48.msg2_size, 0);
  expect(test.screen48.sound1, 6124);
  expect(test.screen48.sound2, 6257);
  expect(test.screen48.sound3, 0);
  expect(test.screen48.snd_timer, 20);
  expect(test.screen48.timer1, 0);
  expect(test.screen48.timer2, 0);
  expect(test.screen48.timer3, 0);
  expect(test.screen48.dsp_flg1, 0);
  expect(test.screen48.dsp_flg2, 0);
  expect(test.screen48.movie01_ext, 0);
  expect(test.screen48.movie02_ext, 0);
  expect(test.screen48.movie03_ext, 0);
  expect(test.screen48.movie04_ext, 0);
  expect(test.screen48.line_title, "ｎａｎａｃｏでお支払い");
  expect(test.screen48.line_title_ex, "nanaco Payment");
  expect(test.screen48.line1, "お支払い金額を確認し");
  expect(test.screen48.line2, "カードをタッチしてください");
  expect(test.screen48.line3, "");
  expect(test.screen48.line4, "");
  expect(test.screen48.line1_ex, "Tap your IC card");
  expect(test.screen48.line2_ex, "on the terminal.");
  expect(test.screen48.line3_ex, "");
  expect(test.screen48.line4_ex, "");
  expect(test.screen48.sound_led1, 6124);
  expect(test.screen48.sound_led2, 6257);
  expect(test.screen48.sound_led3, 0);
  expect(test.screen49.title, "銀聯利用画面<verifone>");
  expect(test.screen49.msg1, "銀聯でお会計ですね");
  expect(test.screen49.msg2, "");
  expect(test.screen49.msg1_size, 0);
  expect(test.screen49.msg2_size, 0);
  expect(test.screen49.sound1, 6258);
  expect(test.screen49.sound2, 6252);
  expect(test.screen49.sound3, 0);
  expect(test.screen49.snd_timer, 20);
  expect(test.screen49.timer1, 0);
  expect(test.screen49.timer2, 0);
  expect(test.screen49.timer3, 0);
  expect(test.screen49.dsp_flg1, 0);
  expect(test.screen49.dsp_flg2, 0);
  expect(test.screen49.movie01_ext, 0);
  expect(test.screen49.movie02_ext, 0);
  expect(test.screen49.movie03_ext, 0);
  expect(test.screen49.movie04_ext, 0);
  expect(test.screen49.line_title, "銀聯でお支払い");
  expect(test.screen49.line_title_ex, "UnionPay Card Payment");
  expect(test.screen49.line1, "お支払い金額を確認し");
  expect(test.screen49.line2, "カードを読ませてください");
  expect(test.screen49.line3, "");
  expect(test.screen49.line4, "");
  expect(test.screen49.line1_ex, "Please swipe");
  expect(test.screen49.line2_ex, "your unionpay card.");
  expect(test.screen49.line3_ex, "");
  expect(test.screen49.line4_ex, "");
  expect(test.screen49.sound_led1, 6258);
  expect(test.screen49.sound_led2, 6252);
  expect(test.screen49.sound_led3, 0);
  expect(test.screen50.title, "プリカ利用画面<verifone>");
  expect(test.screen50.msg1, "プリペイドカードでお会計ですね");
  expect(test.screen50.msg2, "");
  expect(test.screen50.msg1_size, 0);
  expect(test.screen50.msg2_size, 0);
  expect(test.screen50.sound1, 6258);
  expect(test.screen50.sound2, 6253);
  expect(test.screen50.sound3, 0);
  expect(test.screen50.snd_timer, 20);
  expect(test.screen50.timer1, 0);
  expect(test.screen50.timer2, 0);
  expect(test.screen50.timer3, 0);
  expect(test.screen50.dsp_flg1, 0);
  expect(test.screen50.dsp_flg2, 0);
  expect(test.screen50.movie01_ext, 0);
  expect(test.screen50.movie02_ext, 0);
  expect(test.screen50.movie03_ext, 0);
  expect(test.screen50.movie04_ext, 0);
  expect(test.screen50.line_title, "プリカでお支払い");
  expect(test.screen50.line_title_ex, "Prepaid Card Payment");
  expect(test.screen50.line1, "お支払い金額を確認し");
  expect(test.screen50.line2, "カードを読ませてください");
  expect(test.screen50.line3, "");
  expect(test.screen50.line4, "");
  expect(test.screen50.line1_ex, "Please swipe");
  expect(test.screen50.line2_ex, "your prepaid card.");
  expect(test.screen50.line3_ex, "");
  expect(test.screen50.line4_ex, "");
  expect(test.screen50.sound_led1, 6258);
  expect(test.screen50.sound_led2, 6253);
  expect(test.screen50.sound_led3, 0);
  expect(test.screen51.title, "Edy入金画面<verifone>");
  expect(test.screen51.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen51.msg2, "");
  expect(test.screen51.msg1_size, 0);
  expect(test.screen51.msg2_size, 0);
  expect(test.screen51.sound1, 6216);
  expect(test.screen51.sound2, 6216);
  expect(test.screen51.sound3, "");
  expect(test.screen51.snd_timer, 20);
  expect(test.screen51.timer1, 0);
  expect(test.screen51.timer2, 0);
  expect(test.screen51.timer3, 0);
  expect(test.screen51.dsp_flg1, 0);
  expect(test.screen51.dsp_flg2, 0);
  expect(test.screen51.movie01_ext, 0);
  expect(test.screen51.movie02_ext, 0);
  expect(test.screen51.movie03_ext, 0);
  expect(test.screen51.movie04_ext, 0);
  expect(test.screen51.line_title, "Ｅｄｙチャージ");
  expect(test.screen51.line_title_ex, "Reload Card");
  expect(test.screen51.line1, "お金を");
  expect(test.screen51.line2, "入れてください");
  expect(test.screen51.line3, "");
  expect(test.screen51.line4, "");
  expect(test.screen51.line1_ex, "Insert the payment.");
  expect(test.screen51.line2_ex, "");
  expect(test.screen51.line3_ex, "");
  expect(test.screen51.line4_ex, "");
  expect(test.screen51.sound_led1, 6216);
  expect(test.screen51.sound_led2, 6216);
  expect(test.screen51.sound_led3, "");
  expect(test.screen52.title, "Edyチャージ画面<verifone>");
  expect(test.screen52.msg1, "“Edy”をタッチしてください");
  expect(test.screen52.msg2, "");
  expect(test.screen52.msg1_size, 0);
  expect(test.screen52.msg2_size, 0);
  expect(test.screen52.sound1, 6009);
  expect(test.screen52.sound2, 6009);
  expect(test.screen52.sound3, 0);
  expect(test.screen52.snd_timer, 20);
  expect(test.screen52.timer1, 0);
  expect(test.screen52.timer2, 0);
  expect(test.screen52.timer3, 0);
  expect(test.screen52.dsp_flg1, 0);
  expect(test.screen52.dsp_flg2, 0);
  expect(test.screen52.movie01_ext, 0);
  expect(test.screen52.movie02_ext, 0);
  expect(test.screen52.movie03_ext, 0);
  expect(test.screen52.movie04_ext, 0);
  expect(test.screen52.line_title, "Ｅｄｙチャージ");
  expect(test.screen52.line_title_ex, "Reload Card");
  expect(test.screen52.line1, "チャージ金額を確認し");
  expect(test.screen52.line2, "カードをタッチしてください");
  expect(test.screen52.line3, "");
  expect(test.screen52.line4, "");
  expect(test.screen52.line1_ex, "Tap your IC card");
  expect(test.screen52.line2_ex, "on the terminal.");
  expect(test.screen52.line3_ex, "");
  expect(test.screen52.line4_ex, "");
  expect(test.screen52.sound_led1, 6009);
  expect(test.screen52.sound_led2, 6009);
  expect(test.screen52.sound_led3, 0);
  expect(test.screen53.title, "Edy入金終了画面<verifone>");
  expect(test.screen53.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen53.msg2, "");
  expect(test.screen53.msg1_size, 0);
  expect(test.screen53.msg2_size, 0);
  expect(test.screen53.sound1, 6217);
  expect(test.screen53.sound2, 6217);
  expect(test.screen53.sound3, 0);
  expect(test.screen53.snd_timer, 20);
  expect(test.screen53.timer1, 10);
  expect(test.screen53.timer2, 0);
  expect(test.screen53.timer3, 0);
  expect(test.screen53.dsp_flg1, 0);
  expect(test.screen53.dsp_flg2, 0);
  expect(test.screen53.movie01_ext, 0);
  expect(test.screen53.movie02_ext, 0);
  expect(test.screen53.movie03_ext, 0);
  expect(test.screen53.movie04_ext, 0);
  expect(test.screen53.line_title, "Ｅｄｙチャージ");
  expect(test.screen53.line_title_ex, "Reload Card");
  expect(test.screen53.line1, "よろしければ");
  expect(test.screen53.line2, "チャージボタンを");
  expect(test.screen53.line3, "押してください");
  expect(test.screen53.line4, "");
  expect(test.screen53.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen53.line2_ex, "button to reload");
  expect(test.screen53.line3_ex, "your card.");
  expect(test.screen53.line4_ex, "");
  expect(test.screen53.sound_led1, 6217);
  expect(test.screen53.sound_led2, 6217);
  expect(test.screen53.sound_led3, 0);
  expect(test.screen54.title, "交通系IC入金画面<verifone>");
  expect(test.screen54.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen54.msg2, "");
  expect(test.screen54.msg1_size, 0);
  expect(test.screen54.msg2_size, 0);
  expect(test.screen54.sound1, 6216);
  expect(test.screen54.sound2, 6216);
  expect(test.screen54.sound3, "");
  expect(test.screen54.snd_timer, 20);
  expect(test.screen54.timer1, 0);
  expect(test.screen54.timer2, 0);
  expect(test.screen54.timer3, 0);
  expect(test.screen54.dsp_flg1, 0);
  expect(test.screen54.dsp_flg2, 0);
  expect(test.screen54.movie01_ext, 0);
  expect(test.screen54.movie02_ext, 0);
  expect(test.screen54.movie03_ext, 0);
  expect(test.screen54.movie04_ext, 0);
  expect(test.screen54.line_title, "交通系ＩＣチャージ");
  expect(test.screen54.line_title_ex, "Reload Card");
  expect(test.screen54.line1, "お金を");
  expect(test.screen54.line2, "入れてください");
  expect(test.screen54.line3, "");
  expect(test.screen54.line4, "");
  expect(test.screen54.line1_ex, "Insert the payment.");
  expect(test.screen54.line2_ex, "");
  expect(test.screen54.line3_ex, "");
  expect(test.screen54.line4_ex, "");
  expect(test.screen54.sound_led1, 6216);
  expect(test.screen54.sound_led2, 6216);
  expect(test.screen54.sound_led3, "");
  expect(test.screen55.title, "交通系ICチャージ画面<verifone>");
  expect(test.screen55.msg1, "“交通系IC”をタッチしてください");
  expect(test.screen55.msg2, "");
  expect(test.screen55.msg1_size, 0);
  expect(test.screen55.msg2_size, 0);
  expect(test.screen55.sound1, 6009);
  expect(test.screen55.sound2, 6009);
  expect(test.screen55.sound3, 0);
  expect(test.screen55.snd_timer, 20);
  expect(test.screen55.timer1, 0);
  expect(test.screen55.timer2, 0);
  expect(test.screen55.timer3, 0);
  expect(test.screen55.dsp_flg1, 0);
  expect(test.screen55.dsp_flg2, 0);
  expect(test.screen55.movie01_ext, 0);
  expect(test.screen55.movie02_ext, 0);
  expect(test.screen55.movie03_ext, 0);
  expect(test.screen55.movie04_ext, 0);
  expect(test.screen55.line_title, "交通系ＩＣチャージ");
  expect(test.screen55.line_title_ex, "Reload Card");
  expect(test.screen55.line1, "チャージ金額を確認し");
  expect(test.screen55.line2, "カードをタッチしてください");
  expect(test.screen55.line3, "");
  expect(test.screen55.line4, "");
  expect(test.screen55.line1_ex, "Tap your IC card");
  expect(test.screen55.line2_ex, "on the terminal.");
  expect(test.screen55.line3_ex, "");
  expect(test.screen55.line4_ex, "");
  expect(test.screen55.sound_led1, 6009);
  expect(test.screen55.sound_led2, 6009);
  expect(test.screen55.sound_led3, 0);
  expect(test.screen56.title, "交通系IC入金終了画面<verifone>");
  expect(test.screen56.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen56.msg2, "");
  expect(test.screen56.msg1_size, 0);
  expect(test.screen56.msg2_size, 0);
  expect(test.screen56.sound1, 6217);
  expect(test.screen56.sound2, 6217);
  expect(test.screen56.sound3, 0);
  expect(test.screen56.snd_timer, 20);
  expect(test.screen56.timer1, 10);
  expect(test.screen56.timer2, 0);
  expect(test.screen56.timer3, 0);
  expect(test.screen56.dsp_flg1, 0);
  expect(test.screen56.dsp_flg2, 0);
  expect(test.screen56.movie01_ext, 0);
  expect(test.screen56.movie02_ext, 0);
  expect(test.screen56.movie03_ext, 0);
  expect(test.screen56.movie04_ext, 0);
  expect(test.screen56.line_title, "交通系ＩＣチャージ");
  expect(test.screen56.line_title_ex, "Reload Card");
  expect(test.screen56.line1, "よろしければ");
  expect(test.screen56.line2, "チャージボタンを");
  expect(test.screen56.line3, "押してください");
  expect(test.screen56.line4, "");
  expect(test.screen56.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen56.line2_ex, "button to reload");
  expect(test.screen56.line3_ex, "your card.");
  expect(test.screen56.line4_ex, "");
  expect(test.screen56.sound_led1, 6217);
  expect(test.screen56.sound_led2, 6217);
  expect(test.screen56.sound_led3, 0);
  expect(test.screen57.title, "WAON入金画面<verifone>");
  expect(test.screen57.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen57.msg2, "");
  expect(test.screen57.msg1_size, 0);
  expect(test.screen57.msg2_size, 0);
  expect(test.screen57.sound1, 6216);
  expect(test.screen57.sound2, 6216);
  expect(test.screen57.sound3, "");
  expect(test.screen57.snd_timer, 20);
  expect(test.screen57.timer1, 0);
  expect(test.screen57.timer2, 0);
  expect(test.screen57.timer3, 0);
  expect(test.screen57.dsp_flg1, 0);
  expect(test.screen57.dsp_flg2, 0);
  expect(test.screen57.movie01_ext, 0);
  expect(test.screen57.movie02_ext, 0);
  expect(test.screen57.movie03_ext, 0);
  expect(test.screen57.movie04_ext, 0);
  expect(test.screen57.line_title, "ＷＡＯＮチャージ");
  expect(test.screen57.line_title_ex, "Reload Card");
  expect(test.screen57.line1, "お金を");
  expect(test.screen57.line2, "入れてください");
  expect(test.screen57.line3, "");
  expect(test.screen57.line4, "");
  expect(test.screen57.line1_ex, "Insert the payment.");
  expect(test.screen57.line2_ex, "");
  expect(test.screen57.line3_ex, "");
  expect(test.screen57.line4_ex, "");
  expect(test.screen57.sound_led1, 6216);
  expect(test.screen57.sound_led2, 6216);
  expect(test.screen57.sound_led3, "");
  expect(test.screen58.title, "WAONチャージ画面<verifone>");
  expect(test.screen58.msg1, "“WAON”をタッチしてください");
  expect(test.screen58.msg2, "");
  expect(test.screen58.msg1_size, 0);
  expect(test.screen58.msg2_size, 0);
  expect(test.screen58.sound1, 6009);
  expect(test.screen58.sound2, 6009);
  expect(test.screen58.sound3, 0);
  expect(test.screen58.snd_timer, 20);
  expect(test.screen58.timer1, 0);
  expect(test.screen58.timer2, 0);
  expect(test.screen58.timer3, 0);
  expect(test.screen58.dsp_flg1, 0);
  expect(test.screen58.dsp_flg2, 0);
  expect(test.screen58.movie01_ext, 0);
  expect(test.screen58.movie02_ext, 0);
  expect(test.screen58.movie03_ext, 0);
  expect(test.screen58.movie04_ext, 0);
  expect(test.screen58.line_title, "ＷＡＯＮチャージ");
  expect(test.screen58.line_title_ex, "Reload Card");
  expect(test.screen58.line1, "チャージ金額を確認し");
  expect(test.screen58.line2, "カードをタッチしてください");
  expect(test.screen58.line3, "");
  expect(test.screen58.line4, "");
  expect(test.screen58.line1_ex, "Tap your IC card");
  expect(test.screen58.line2_ex, "on the terminal.");
  expect(test.screen58.line3_ex, "");
  expect(test.screen58.line4_ex, "");
  expect(test.screen58.sound_led1, 6009);
  expect(test.screen58.sound_led2, 6009);
  expect(test.screen58.sound_led3, 0);
  expect(test.screen59.title, "WAON入金終了画面<verifone>");
  expect(test.screen59.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen59.msg2, "");
  expect(test.screen59.msg1_size, 0);
  expect(test.screen59.msg2_size, 0);
  expect(test.screen59.sound1, 6217);
  expect(test.screen59.sound2, 6217);
  expect(test.screen59.sound3, 0);
  expect(test.screen59.snd_timer, 20);
  expect(test.screen59.timer1, 10);
  expect(test.screen59.timer2, 0);
  expect(test.screen59.timer3, 0);
  expect(test.screen59.dsp_flg1, 0);
  expect(test.screen59.dsp_flg2, 0);
  expect(test.screen59.movie01_ext, 0);
  expect(test.screen59.movie02_ext, 0);
  expect(test.screen59.movie03_ext, 0);
  expect(test.screen59.movie04_ext, 0);
  expect(test.screen59.line_title, "ＷＡＯＮチャージ");
  expect(test.screen59.line_title_ex, "Reload Card");
  expect(test.screen59.line1, "よろしければ");
  expect(test.screen59.line2, "チャージボタンを");
  expect(test.screen59.line3, "押してください");
  expect(test.screen59.line4, "");
  expect(test.screen59.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen59.line2_ex, "button to reload");
  expect(test.screen59.line3_ex, "your card.");
  expect(test.screen59.line4_ex, "");
  expect(test.screen59.sound_led1, 6217);
  expect(test.screen59.sound_led2, 6217);
  expect(test.screen59.sound_led3, 0);
  expect(test.screen60.title, "nanaco入金画面<verifone>");
  expect(test.screen60.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen60.msg2, "");
  expect(test.screen60.msg1_size, 0);
  expect(test.screen60.msg2_size, 0);
  expect(test.screen60.sound1, 6216);
  expect(test.screen60.sound2, 6216);
  expect(test.screen60.sound3, "");
  expect(test.screen60.snd_timer, 20);
  expect(test.screen60.timer1, 0);
  expect(test.screen60.timer2, 0);
  expect(test.screen60.timer3, 0);
  expect(test.screen60.dsp_flg1, 0);
  expect(test.screen60.dsp_flg2, 0);
  expect(test.screen60.movie01_ext, 0);
  expect(test.screen60.movie02_ext, 0);
  expect(test.screen60.movie03_ext, 0);
  expect(test.screen60.movie04_ext, 0);
  expect(test.screen60.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen60.line_title_ex, "Reload Card");
  expect(test.screen60.line1, "お金を");
  expect(test.screen60.line2, "入れてください");
  expect(test.screen60.line3, "");
  expect(test.screen60.line4, "");
  expect(test.screen60.line1_ex, "Insert the payment.");
  expect(test.screen60.line2_ex, "");
  expect(test.screen60.line3_ex, "");
  expect(test.screen60.line4_ex, "");
  expect(test.screen60.sound_led1, 6216);
  expect(test.screen60.sound_led2, 6216);
  expect(test.screen60.sound_led3, "");
  expect(test.screen61.title, "nanacoチャージ画面<verifone>");
  expect(test.screen61.msg1, "“nanaco”をタッチしてください");
  expect(test.screen61.msg2, "");
  expect(test.screen61.msg1_size, 0);
  expect(test.screen61.msg2_size, 0);
  expect(test.screen61.sound1, 6009);
  expect(test.screen61.sound2, 6009);
  expect(test.screen61.sound3, 0);
  expect(test.screen61.snd_timer, 20);
  expect(test.screen61.timer1, 0);
  expect(test.screen61.timer2, 0);
  expect(test.screen61.timer3, 0);
  expect(test.screen61.dsp_flg1, 0);
  expect(test.screen61.dsp_flg2, 0);
  expect(test.screen61.movie01_ext, 0);
  expect(test.screen61.movie02_ext, 0);
  expect(test.screen61.movie03_ext, 0);
  expect(test.screen61.movie04_ext, 0);
  expect(test.screen61.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen61.line_title_ex, "Reload Card");
  expect(test.screen61.line1, "チャージ金額を確認し");
  expect(test.screen61.line2, "カードをタッチしてください");
  expect(test.screen61.line3, "");
  expect(test.screen61.line4, "");
  expect(test.screen61.line1_ex, "Tap your IC card");
  expect(test.screen61.line2_ex, "on the terminal.");
  expect(test.screen61.line3_ex, "");
  expect(test.screen61.line4_ex, "");
  expect(test.screen61.sound_led1, 6009);
  expect(test.screen61.sound_led2, 6009);
  expect(test.screen61.sound_led3, 0);
  expect(test.screen62.title, "nanaco入金終了画面<verifone>");
  expect(test.screen62.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen62.msg2, "");
  expect(test.screen62.msg1_size, 0);
  expect(test.screen62.msg2_size, 0);
  expect(test.screen62.sound1, 6217);
  expect(test.screen62.sound2, 6217);
  expect(test.screen62.sound3, 0);
  expect(test.screen62.snd_timer, 20);
  expect(test.screen62.timer1, 10);
  expect(test.screen62.timer2, 0);
  expect(test.screen62.timer3, 0);
  expect(test.screen62.dsp_flg1, 0);
  expect(test.screen62.dsp_flg2, 0);
  expect(test.screen62.movie01_ext, 0);
  expect(test.screen62.movie02_ext, 0);
  expect(test.screen62.movie03_ext, 0);
  expect(test.screen62.movie04_ext, 0);
  expect(test.screen62.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen62.line_title_ex, "Reload Card");
  expect(test.screen62.line1, "よろしければ");
  expect(test.screen62.line2, "チャージボタンを");
  expect(test.screen62.line3, "押してください");
  expect(test.screen62.line4, "");
  expect(test.screen62.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen62.line2_ex, "button to reload");
  expect(test.screen62.line3_ex, "your card.");
  expect(test.screen62.line4_ex, "");
  expect(test.screen62.sound_led1, 6217);
  expect(test.screen62.sound_led2, 6217);
  expect(test.screen62.sound_led3, 0);
  expect(test.screen63.title, "プリカ入金画面<verifone>");
  expect(test.screen63.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen63.msg2, "");
  expect(test.screen63.msg1_size, 0);
  expect(test.screen63.msg2_size, 0);
  expect(test.screen63.sound1, 6216);
  expect(test.screen63.sound2, 6216);
  expect(test.screen63.sound3, "");
  expect(test.screen63.snd_timer, 20);
  expect(test.screen63.timer1, 0);
  expect(test.screen63.timer2, 0);
  expect(test.screen63.timer3, 0);
  expect(test.screen63.dsp_flg1, 0);
  expect(test.screen63.dsp_flg2, 0);
  expect(test.screen63.movie01_ext, 0);
  expect(test.screen63.movie02_ext, 0);
  expect(test.screen63.movie03_ext, 0);
  expect(test.screen63.movie04_ext, 0);
  expect(test.screen63.line_title, "プリカチャージ");
  expect(test.screen63.line_title_ex, "Reload Card");
  expect(test.screen63.line1, "お金を");
  expect(test.screen63.line2, "入れてください");
  expect(test.screen63.line3, "");
  expect(test.screen63.line4, "");
  expect(test.screen63.line1_ex, "Insert the payment.");
  expect(test.screen63.line2_ex, "");
  expect(test.screen63.line3_ex, "");
  expect(test.screen63.line4_ex, "");
  expect(test.screen63.sound_led1, 6216);
  expect(test.screen63.sound_led2, 6216);
  expect(test.screen63.sound_led3, "");
  expect(test.screen64.title, "プリカチャージ画面<verifone>");
  expect(test.screen64.msg1, "“プリペイドカード”を読ませてください");
  expect(test.screen64.msg2, "");
  expect(test.screen64.msg1_size, 0);
  expect(test.screen64.msg2_size, 0);
  expect(test.screen64.sound1, 6258);
  expect(test.screen64.sound2, 6258);
  expect(test.screen64.sound3, 0);
  expect(test.screen64.snd_timer, 20);
  expect(test.screen64.timer1, 0);
  expect(test.screen64.timer2, 0);
  expect(test.screen64.timer3, 0);
  expect(test.screen64.dsp_flg1, 0);
  expect(test.screen64.dsp_flg2, 0);
  expect(test.screen64.movie01_ext, 0);
  expect(test.screen64.movie02_ext, 0);
  expect(test.screen64.movie03_ext, 0);
  expect(test.screen64.movie04_ext, 0);
  expect(test.screen64.line_title, "プリカチャージ");
  expect(test.screen64.line_title_ex, "Reload Card");
  expect(test.screen64.line1, "チャージ金額を確認し");
  expect(test.screen64.line2, "カードを読ませてください");
  expect(test.screen64.line3, "");
  expect(test.screen64.line4, "");
  expect(test.screen64.line1_ex, "Please swipe");
  expect(test.screen64.line2_ex, "your prepaid card.");
  expect(test.screen64.line3_ex, "");
  expect(test.screen64.line4_ex, "");
  expect(test.screen64.sound_led1, 6258);
  expect(test.screen64.sound_led2, 6258);
  expect(test.screen64.sound_led3, 0);
  expect(test.screen65.title, "プリカ入金終了画面<verifone>");
  expect(test.screen65.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen65.msg2, "");
  expect(test.screen65.msg1_size, 0);
  expect(test.screen65.msg2_size, 0);
  expect(test.screen65.sound1, 6217);
  expect(test.screen65.sound2, 6217);
  expect(test.screen65.sound3, 0);
  expect(test.screen65.snd_timer, 20);
  expect(test.screen65.timer1, 10);
  expect(test.screen65.timer2, 0);
  expect(test.screen65.timer3, 0);
  expect(test.screen65.dsp_flg1, 0);
  expect(test.screen65.dsp_flg2, 0);
  expect(test.screen65.movie01_ext, 0);
  expect(test.screen65.movie02_ext, 0);
  expect(test.screen65.movie03_ext, 0);
  expect(test.screen65.movie04_ext, 0);
  expect(test.screen65.line_title, "プリカチャージ");
  expect(test.screen65.line_title_ex, "Reload Card");
  expect(test.screen65.line1, "よろしければ");
  expect(test.screen65.line2, "チャージボタンを");
  expect(test.screen65.line3, "押してください");
  expect(test.screen65.line4, "");
  expect(test.screen65.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen65.line2_ex, "button to reload");
  expect(test.screen65.line3_ex, "your card.");
  expect(test.screen65.line4_ex, "");
  expect(test.screen65.sound_led1, 6217);
  expect(test.screen65.sound_led2, 6217);
  expect(test.screen65.sound_led3, 0);
  expect(test.screen67.title, "店員操作中画面<対面>");
  expect(test.screen67.msg1, "");
  expect(test.screen67.msg2, "");
  expect(test.screen67.msg1_size, 0);
  expect(test.screen67.msg2_size, 0);
  expect(test.screen67.sound1, 0);
  expect(test.screen67.sound2, 0);
  expect(test.screen67.sound3, 0);
  expect(test.screen67.snd_timer, 0);
  expect(test.screen67.timer1, 0);
  expect(test.screen67.timer2, 0);
  expect(test.screen67.timer3, 0);
  expect(test.screen67.dsp_flg1, 0);
  expect(test.screen67.dsp_flg2, 0);
  expect(test.screen67.movie01_ext, 0);
  expect(test.screen67.movie02_ext, 0);
  expect(test.screen67.movie03_ext, 0);
  expect(test.screen67.movie04_ext, 0);
  expect(test.screen67.line_title, "");
  expect(test.screen67.line_title_ex, "");
  expect(test.screen67.line1, "店員操作中です");
  expect(test.screen67.line2, "お待ちください");
  expect(test.screen67.line3, "");
  expect(test.screen67.line4, "");
  expect(test.screen67.line1_ex, "");
  expect(test.screen67.line2_ex, "");
  expect(test.screen67.line3_ex, "");
  expect(test.screen67.line4_ex, "");
  expect(test.screen67.sound_led1, 0);
  expect(test.screen67.sound_led2, 0);
  expect(test.screen67.sound_led3, 0);
  expect(test.screen68.title, "プリカチャージ入金完了画面");
  expect(test.screen68.msg1, "");
  expect(test.screen68.msg2, "");
  expect(test.screen68.msg1_size, 0);
  expect(test.screen68.msg2_size, 0);
  expect(test.screen68.sound1, 0);
  expect(test.screen68.sound2, 0);
  expect(test.screen68.sound3, 0);
  expect(test.screen68.snd_timer, 0);
  expect(test.screen68.timer1, 0);
  expect(test.screen68.timer2, 0);
  expect(test.screen68.timer3, 0);
  expect(test.screen68.dsp_flg1, 0);
  expect(test.screen68.dsp_flg2, 0);
  expect(test.screen68.movie01_ext, 0);
  expect(test.screen68.movie02_ext, 0);
  expect(test.screen68.movie03_ext, 0);
  expect(test.screen68.movie04_ext, 0);
  expect(test.screen68.line_title, "");
  expect(test.screen68.line_title_ex, "");
  expect(test.screen68.line1, "よろしければ");
  expect(test.screen68.line2, "チャージボタンを");
  expect(test.screen68.line3, "押してください");
  expect(test.screen68.line4, "");
  expect(test.screen68.line1_ex, "");
  expect(test.screen68.line2_ex, "");
  expect(test.screen68.line3_ex, "");
  expect(test.screen68.line4_ex, "");
  expect(test.screen68.sound_led1, 6179);
  expect(test.screen68.sound_led2, 6217);
  expect(test.screen68.sound_led3, 0);
  expect(test.screen69.title, "チャージ完了画面<印字なし>");
  expect(test.screen69.msg1, "");
  expect(test.screen69.msg2, "");
  expect(test.screen69.msg1_size, 0);
  expect(test.screen69.msg2_size, 0);
  expect(test.screen69.sound1, 0);
  expect(test.screen69.sound2, 0);
  expect(test.screen69.sound3, 0);
  expect(test.screen69.snd_timer, 0);
  expect(test.screen69.timer1, 0);
  expect(test.screen69.timer2, 0);
  expect(test.screen69.timer3, 0);
  expect(test.screen69.dsp_flg1, 0);
  expect(test.screen69.dsp_flg2, 0);
  expect(test.screen69.movie01_ext, 0);
  expect(test.screen69.movie02_ext, 0);
  expect(test.screen69.movie03_ext, 0);
  expect(test.screen69.movie04_ext, 0);
  expect(test.screen69.line_title, "");
  expect(test.screen69.line_title_ex, "");
  expect(test.screen69.line1, "チャージしました");
  expect(test.screen69.line2, "お支払いを続けて");
  expect(test.screen69.line3, "ください");
  expect(test.screen69.line4, "");
  expect(test.screen69.line1_ex, "");
  expect(test.screen69.line2_ex, "");
  expect(test.screen69.line3_ex, "");
  expect(test.screen69.line4_ex, "");
  expect(test.screen69.sound_led1, 0);
  expect(test.screen69.sound_led2, 0);
  expect(test.screen69.sound_led3, 0);
  expect(test.screen70.title, "あいさつ画面");
  expect(test.screen70.msg1, "");
  expect(test.screen70.msg2, "");
  expect(test.screen70.msg1_size, 0);
  expect(test.screen70.msg2_size, 0);
  expect(test.screen70.sound1, 6547);
  expect(test.screen70.sound2, 0);
  expect(test.screen70.sound3, 0);
  expect(test.screen70.snd_timer, 20);
  expect(test.screen70.timer1, 0);
  expect(test.screen70.timer2, 0);
  expect(test.screen70.timer3, 0);
  expect(test.screen70.dsp_flg1, 0);
  expect(test.screen70.dsp_flg2, 0);
  expect(test.screen70.movie01_ext, 0);
  expect(test.screen70.movie02_ext, 0);
  expect(test.screen70.movie03_ext, 0);
  expect(test.screen70.movie04_ext, 0);
  expect(test.screen70.line_title, "");
  expect(test.screen70.line_title_ex, "");
  expect(test.screen70.line1, "");
  expect(test.screen70.line2, "");
  expect(test.screen70.line3, "");
  expect(test.screen70.line4, "");
  expect(test.screen70.line1_ex, "");
  expect(test.screen70.line2_ex, "");
  expect(test.screen70.line3_ex, "");
  expect(test.screen70.line4_ex, "");
  expect(test.screen70.sound_led1, 6547);
  expect(test.screen70.sound_led2, 0);
  expect(test.screen70.sound_led3, 0);
  expect(test.screen71.title, "会員カード選択画面");
  expect(test.screen71.msg1, "");
  expect(test.screen71.msg2, "");
  expect(test.screen71.msg1_size, 0);
  expect(test.screen71.msg2_size, 0);
  expect(test.screen71.sound1, 6547);
  expect(test.screen71.sound2, 0);
  expect(test.screen71.sound3, 0);
  expect(test.screen71.snd_timer, 20);
  expect(test.screen71.timer1, 0);
  expect(test.screen71.timer2, 0);
  expect(test.screen71.timer3, 0);
  expect(test.screen71.dsp_flg1, 0);
  expect(test.screen71.dsp_flg2, 0);
  expect(test.screen71.movie01_ext, 0);
  expect(test.screen71.movie02_ext, 0);
  expect(test.screen71.movie03_ext, 0);
  expect(test.screen71.movie04_ext, 0);
  expect(test.screen71.line_title, "");
  expect(test.screen71.line_title_ex, "");
  expect(test.screen71.line1, "");
  expect(test.screen71.line2, "");
  expect(test.screen71.line3, "");
  expect(test.screen71.line4, "");
  expect(test.screen71.line1_ex, "");
  expect(test.screen71.line2_ex, "");
  expect(test.screen71.line3_ex, "");
  expect(test.screen71.line4_ex, "");
  expect(test.screen71.sound_led1, 6547);
  expect(test.screen71.sound_led2, 0);
  expect(test.screen71.sound_led3, 0);
  expect(test.screen72.title, "会員リード画面");
  expect(test.screen72.msg1, "");
  expect(test.screen72.msg2, "");
  expect(test.screen72.msg1_size, 0);
  expect(test.screen72.msg2_size, 0);
  expect(test.screen72.sound1, 6143);
  expect(test.screen72.sound2, 0);
  expect(test.screen72.sound3, 0);
  expect(test.screen72.snd_timer, 20);
  expect(test.screen72.timer1, 0);
  expect(test.screen72.timer2, 0);
  expect(test.screen72.timer3, 0);
  expect(test.screen72.dsp_flg1, 0);
  expect(test.screen72.dsp_flg2, 0);
  expect(test.screen72.movie01_ext, 0);
  expect(test.screen72.movie02_ext, 0);
  expect(test.screen72.movie03_ext, 0);
  expect(test.screen72.movie04_ext, 0);
  expect(test.screen72.line_title, "");
  expect(test.screen72.line_title_ex, "");
  expect(test.screen72.line1, "");
  expect(test.screen72.line2, "");
  expect(test.screen72.line3, "");
  expect(test.screen72.line4, "");
  expect(test.screen72.line1_ex, "");
  expect(test.screen72.line2_ex, "");
  expect(test.screen72.line3_ex, "");
  expect(test.screen72.line4_ex, "");
  expect(test.screen72.sound_led1, 6143);
  expect(test.screen72.sound_led2, 0);
  expect(test.screen72.sound_led3, 0);
  expect(test.screen73.title, "dポイント支払画面");
  expect(test.screen73.msg1, "");
  expect(test.screen73.msg2, "");
  expect(test.screen73.msg1_size, 24);
  expect(test.screen73.msg2_size, 0);
  expect(test.screen73.sound1, 6534);
  expect(test.screen73.sound2, 6534);
  expect(test.screen73.sound3, 0);
  expect(test.screen73.snd_timer, 20);
  expect(test.screen73.timer1, 10);
  expect(test.screen73.timer2, 0);
  expect(test.screen73.timer3, 0);
  expect(test.screen73.dsp_flg1, 0);
  expect(test.screen73.dsp_flg2, 0);
  expect(test.screen73.movie01_ext, 0);
  expect(test.screen73.movie02_ext, 0);
  expect(test.screen73.movie03_ext, 0);
  expect(test.screen73.movie04_ext, 0);
  expect(test.screen73.line_title, "");
  expect(test.screen73.line_title_ex, "");
  expect(test.screen73.line1, "ポイント数を入力して");
  expect(test.screen73.line2, "決定を押してください");
  expect(test.screen73.line3, "訂正する場合はクリア");
  expect(test.screen73.line4, "ボタンを押してください");
  expect(test.screen73.line1_ex, "");
  expect(test.screen73.line2_ex, "");
  expect(test.screen73.line3_ex, "");
  expect(test.screen73.line4_ex, "");
  expect(test.screen73.sound_led1, 6534);
  expect(test.screen73.sound_led2, 6534);
  expect(test.screen73.sound_led3, 0);
  expect(test.screen74.title, "dﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen74.msg1, "");
  expect(test.screen74.msg2, "");
  expect(test.screen74.msg1_size, 0);
  expect(test.screen74.msg2_size, 0);
  expect(test.screen74.sound1, 6179);
  expect(test.screen74.sound2, 6179);
  expect(test.screen74.sound3, 0);
  expect(test.screen74.snd_timer, 20);
  expect(test.screen74.timer1, 10);
  expect(test.screen74.timer2, 0);
  expect(test.screen74.timer3, 0);
  expect(test.screen74.dsp_flg1, 0);
  expect(test.screen74.dsp_flg2, 0);
  expect(test.screen74.movie01_ext, 0);
  expect(test.screen74.movie02_ext, 0);
  expect(test.screen74.movie03_ext, 0);
  expect(test.screen74.movie04_ext, 0);
  expect(test.screen74.line_title, "");
  expect(test.screen74.line_title_ex, "");
  expect(test.screen74.line1, "よろしければ");
  expect(test.screen74.line2, "おわりボタンを");
  expect(test.screen74.line3, "押してください");
  expect(test.screen74.line4, "");
  expect(test.screen74.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen74.line2_ex, "button to complete");
  expect(test.screen74.line3_ex, "the payment.");
  expect(test.screen74.line4_ex, "");
  expect(test.screen74.sound_led1, 6179);
  expect(test.screen74.sound_led2, 6179);
  expect(test.screen74.sound_led3, 0);
  expect(test.screen75.title, "dﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen75.msg1, "レシートをお取りください。");
  expect(test.screen75.msg2, "");
  expect(test.screen75.msg1_size, 0);
  expect(test.screen75.msg2_size, 0);
  expect(test.screen75.sound1, 6133);
  expect(test.screen75.sound2, 6133);
  expect(test.screen75.sound3, 0);
  expect(test.screen75.snd_timer, 0);
  expect(test.screen75.timer1, 5);
  expect(test.screen75.timer2, 10);
  expect(test.screen75.timer3, 0);
  expect(test.screen75.dsp_flg1, 0);
  expect(test.screen75.dsp_flg2, 0);
  expect(test.screen75.movie01_ext, 0);
  expect(test.screen75.movie02_ext, 0);
  expect(test.screen75.movie03_ext, 0);
  expect(test.screen75.movie04_ext, 0);
  expect(test.screen75.line_title, "");
  expect(test.screen75.line_title_ex, "");
  expect(test.screen75.line1, "レシートを");
  expect(test.screen75.line2, "お受け取りください");
  expect(test.screen75.line3, "ありがとう");
  expect(test.screen75.line4, "ございました");
  expect(test.screen75.line1_ex, "Thank you.");
  expect(test.screen75.line2_ex, "Please take your receipt.");
  expect(test.screen75.line3_ex, "");
  expect(test.screen75.line4_ex, "");
  expect(test.screen75.sound_led1, 6133);
  expect(test.screen75.sound_led2, 6133);
  expect(test.screen75.sound_led3, 0);
  expect(test.screen76.title, "LINE Pay読取画面");
  expect(test.screen76.msg1, "");
  expect(test.screen76.msg2, "");
  expect(test.screen76.msg1_size, 24);
  expect(test.screen76.msg2_size, 0);
  expect(test.screen76.sound1, 0);
  expect(test.screen76.sound2, 0);
  expect(test.screen76.sound3, 0);
  expect(test.screen76.snd_timer, 20);
  expect(test.screen76.timer1, 0);
  expect(test.screen76.timer2, 0);
  expect(test.screen76.timer3, 0);
  expect(test.screen76.dsp_flg1, 0);
  expect(test.screen76.dsp_flg2, 0);
  expect(test.screen76.movie01_ext, 0);
  expect(test.screen76.movie02_ext, 0);
  expect(test.screen76.movie03_ext, 0);
  expect(test.screen76.movie04_ext, 0);
  expect(test.screen76.line_title, "LINE Payでお支払い");
  expect(test.screen76.line_title_ex, "");
  expect(test.screen76.line1, "お支払い金額を確認し");
  expect(test.screen76.line2, "バーコードを読ませてください");
  expect(test.screen76.line3, "");
  expect(test.screen76.line4, "");
  expect(test.screen76.line1_ex, "");
  expect(test.screen76.line2_ex, "");
  expect(test.screen76.line3_ex, "");
  expect(test.screen76.line4_ex, "");
  expect(test.screen76.sound_led1, 6273);
  expect(test.screen76.sound_led2, 6273);
  expect(test.screen76.sound_led3, 0);
  expect(test.screen77.title, "Alipay読取画面");
  expect(test.screen77.msg1, "");
  expect(test.screen77.msg2, "");
  expect(test.screen77.msg1_size, 0);
  expect(test.screen77.msg2_size, 0);
  expect(test.screen77.sound1, 0);
  expect(test.screen77.sound2, 0);
  expect(test.screen77.sound3, 0);
  expect(test.screen77.snd_timer, 20);
  expect(test.screen77.timer1, 0);
  expect(test.screen77.timer2, 0);
  expect(test.screen77.timer3, 0);
  expect(test.screen77.dsp_flg1, 0);
  expect(test.screen77.dsp_flg2, 0);
  expect(test.screen77.movie01_ext, 0);
  expect(test.screen77.movie02_ext, 0);
  expect(test.screen77.movie03_ext, 0);
  expect(test.screen77.movie04_ext, 0);
  expect(test.screen77.line_title, "Alipayでお支払い");
  expect(test.screen77.line_title_ex, "");
  expect(test.screen77.line1, "お支払い金額を確認し");
  expect(test.screen77.line2, "QRコードを読み込んでください");
  expect(test.screen77.line3, "");
  expect(test.screen77.line4, "");
  expect(test.screen77.line1_ex, "");
  expect(test.screen77.line2_ex, "");
  expect(test.screen77.line3_ex, "");
  expect(test.screen77.line4_ex, "");
  expect(test.screen77.sound_led1, 6272);
  expect(test.screen77.sound_led2, 6272);
  expect(test.screen77.sound_led3, 0);
  expect(test.screen78.title, "バーコード決済支払完了画面");
  expect(test.screen78.msg1, "レシートをお取りください。");
  expect(test.screen78.msg2, "");
  expect(test.screen78.msg1_size, 0);
  expect(test.screen78.msg2_size, 0);
  expect(test.screen78.sound1, 0);
  expect(test.screen78.sound2, 0);
  expect(test.screen78.sound3, 0);
  expect(test.screen78.snd_timer, 0);
  expect(test.screen78.timer1, 5);
  expect(test.screen78.timer2, 10);
  expect(test.screen78.timer3, 0);
  expect(test.screen78.dsp_flg1, 0);
  expect(test.screen78.dsp_flg2, 0);
  expect(test.screen78.movie01_ext, 0);
  expect(test.screen78.movie02_ext, 0);
  expect(test.screen78.movie03_ext, 0);
  expect(test.screen78.movie04_ext, 0);
  expect(test.screen78.line_title, "");
  expect(test.screen78.line_title_ex, "");
  expect(test.screen78.line1, "レシートを");
  expect(test.screen78.line2, "お受け取りください");
  expect(test.screen78.line3, "ありがとう");
  expect(test.screen78.line4, "ございました");
  expect(test.screen78.line1_ex, "");
  expect(test.screen78.line2_ex, "");
  expect(test.screen78.line3_ex, "");
  expect(test.screen78.line4_ex, "");
  expect(test.screen78.sound_led1, 6133);
  expect(test.screen78.sound_led2, 6133);
  expect(test.screen78.sound_led3, 0);
  expect(test.screen79.title, "バーコード決済残高不足画面");
  expect(test.screen79.msg1, "残高が不足しています");
  expect(test.screen79.msg2, "");
  expect(test.screen79.msg1_size, 24);
  expect(test.screen79.msg2_size, 0);
  expect(test.screen79.sound1, 0);
  expect(test.screen79.sound2, 0);
  expect(test.screen79.sound3, 0);
  expect(test.screen79.snd_timer, 20);
  expect(test.screen79.timer1, 0);
  expect(test.screen79.timer2, 0);
  expect(test.screen79.timer3, 0);
  expect(test.screen79.dsp_flg1, 0);
  expect(test.screen79.dsp_flg2, 0);
  expect(test.screen79.movie01_ext, 0);
  expect(test.screen79.movie02_ext, 0);
  expect(test.screen79.movie03_ext, 0);
  expect(test.screen79.movie04_ext, 0);
  expect(test.screen79.line_title, "");
  expect(test.screen79.line_title_ex, "");
  expect(test.screen79.line1, "");
  expect(test.screen79.line2, "");
  expect(test.screen79.line3, "");
  expect(test.screen79.line4, "");
  expect(test.screen79.line1_ex, "");
  expect(test.screen79.line2_ex, "");
  expect(test.screen79.line3_ex, "");
  expect(test.screen79.line4_ex, "");
  expect(test.screen79.sound_led1, 6280);
  expect(test.screen79.sound_led2, 6280);
  expect(test.screen79.sound_led3, 0);
  expect(test.screen81.title, "Alipay読取画面");
  expect(test.screen81.msg1, "");
  expect(test.screen81.msg2, "");
  expect(test.screen81.msg1_size, 24);
  expect(test.screen81.msg2_size, 0);
  expect(test.screen81.sound1, 0);
  expect(test.screen81.sound2, 0);
  expect(test.screen81.sound3, 0);
  expect(test.screen81.snd_timer, 20);
  expect(test.screen81.timer1, 0);
  expect(test.screen81.timer2, 0);
  expect(test.screen81.timer3, 0);
  expect(test.screen81.dsp_flg1, 0);
  expect(test.screen81.dsp_flg2, 0);
  expect(test.screen81.movie01_ext, 0);
  expect(test.screen81.movie02_ext, 0);
  expect(test.screen81.movie03_ext, 0);
  expect(test.screen81.movie04_ext, 0);
  expect(test.screen81.line_title, "Alipayでお支払い");
  expect(test.screen81.line_title_ex, "");
  expect(test.screen81.line1, "お支払い金額を確認し");
  expect(test.screen81.line2, "バーコードを読ませてください");
  expect(test.screen81.line3, "");
  expect(test.screen81.line4, "");
  expect(test.screen81.line1_ex, "");
  expect(test.screen81.line2_ex, "");
  expect(test.screen81.line3_ex, "");
  expect(test.screen81.line4_ex, "");
  expect(test.screen81.sound_led1, 6273);
  expect(test.screen81.sound_led2, 6273);
  expect(test.screen81.sound_led3, 0);
  expect(test.screen82.title, "WeChatPay読取画面");
  expect(test.screen82.msg1, "");
  expect(test.screen82.msg2, "");
  expect(test.screen82.msg1_size, 0);
  expect(test.screen82.msg2_size, 0);
  expect(test.screen82.sound1, 0);
  expect(test.screen82.sound2, 0);
  expect(test.screen82.sound3, 0);
  expect(test.screen82.snd_timer, 20);
  expect(test.screen82.timer1, 0);
  expect(test.screen82.timer2, 0);
  expect(test.screen82.timer3, 0);
  expect(test.screen82.dsp_flg1, 0);
  expect(test.screen82.dsp_flg2, 0);
  expect(test.screen82.movie01_ext, 0);
  expect(test.screen82.movie02_ext, 0);
  expect(test.screen82.movie03_ext, 0);
  expect(test.screen82.movie04_ext, 0);
  expect(test.screen82.line_title, "WeChatPayでお支払い");
  expect(test.screen82.line_title_ex, "");
  expect(test.screen82.line1, "お支払い金額を確認し");
  expect(test.screen82.line2, "QRコードを読み込んでください");
  expect(test.screen82.line3, "");
  expect(test.screen82.line4, "");
  expect(test.screen82.line1_ex, "");
  expect(test.screen82.line2_ex, "");
  expect(test.screen82.line3_ex, "");
  expect(test.screen82.line4_ex, "");
  expect(test.screen82.sound_led1, 6272);
  expect(test.screen82.sound_led2, 6272);
  expect(test.screen82.sound_led3, 0);
  expect(test.screen83.title, "WeChatPay読取画面");
  expect(test.screen83.msg1, "");
  expect(test.screen83.msg2, "");
  expect(test.screen83.msg1_size, 24);
  expect(test.screen83.msg2_size, 0);
  expect(test.screen83.sound1, 0);
  expect(test.screen83.sound2, 0);
  expect(test.screen83.sound3, 0);
  expect(test.screen83.snd_timer, 20);
  expect(test.screen83.timer1, 0);
  expect(test.screen83.timer2, 0);
  expect(test.screen83.timer3, 0);
  expect(test.screen83.dsp_flg1, 0);
  expect(test.screen83.dsp_flg2, 0);
  expect(test.screen83.movie01_ext, 0);
  expect(test.screen83.movie02_ext, 0);
  expect(test.screen83.movie03_ext, 0);
  expect(test.screen83.movie04_ext, 0);
  expect(test.screen83.line_title, "WeChatPayでお支払い");
  expect(test.screen83.line_title_ex, "");
  expect(test.screen83.line1, "お支払い金額を確認し");
  expect(test.screen83.line2, "バーコードを読ませてください");
  expect(test.screen83.line3, "");
  expect(test.screen83.line4, "");
  expect(test.screen83.line1_ex, "");
  expect(test.screen83.line2_ex, "");
  expect(test.screen83.line3_ex, "");
  expect(test.screen83.line4_ex, "");
  expect(test.screen83.sound_led1, 6273);
  expect(test.screen83.sound_led2, 6273);
  expect(test.screen83.sound_led3, 0);
  expect(test.screen84.title, "JPQR PAY 読取画面");
  expect(test.screen84.msg1, "");
  expect(test.screen84.msg2, "");
  expect(test.screen84.msg1_size, 24);
  expect(test.screen84.msg2_size, 0);
  expect(test.screen84.sound1, 0);
  expect(test.screen84.sound2, 0);
  expect(test.screen84.sound3, 0);
  expect(test.screen84.snd_timer, 20);
  expect(test.screen84.timer1, 0);
  expect(test.screen84.timer2, 0);
  expect(test.screen84.timer3, 0);
  expect(test.screen84.dsp_flg1, 0);
  expect(test.screen84.dsp_flg2, 0);
  expect(test.screen84.movie01_ext, 0);
  expect(test.screen84.movie02_ext, 0);
  expect(test.screen84.movie03_ext, 0);
  expect(test.screen84.movie04_ext, 0);
  expect(test.screen84.line_title, "JPQRでお支払い");
  expect(test.screen84.line_title_ex, "");
  expect(test.screen84.line1, "お支払い金額を確認し");
  expect(test.screen84.line2, "バーコードを読ませてください");
  expect(test.screen84.line3, "");
  expect(test.screen84.line4, "");
  expect(test.screen84.line1_ex, "");
  expect(test.screen84.line2_ex, "");
  expect(test.screen84.line3_ex, "");
  expect(test.screen84.line4_ex, "");
  expect(test.screen84.sound_led1, 6273);
  expect(test.screen84.sound_led2, 6273);
  expect(test.screen84.sound_led3, 0);
  expect(test.screen85.title, "コード決済 読取画面");
  expect(test.screen85.msg1, "");
  expect(test.screen85.msg2, "");
  expect(test.screen85.msg1_size, 24);
  expect(test.screen85.msg2_size, 0);
  expect(test.screen85.sound1, 0);
  expect(test.screen85.sound2, 0);
  expect(test.screen85.sound3, 0);
  expect(test.screen85.snd_timer, 20);
  expect(test.screen85.timer1, 0);
  expect(test.screen85.timer2, 0);
  expect(test.screen85.timer3, 0);
  expect(test.screen85.dsp_flg1, 0);
  expect(test.screen85.dsp_flg2, 0);
  expect(test.screen85.movie01_ext, 0);
  expect(test.screen85.movie02_ext, 0);
  expect(test.screen85.movie03_ext, 0);
  expect(test.screen85.movie04_ext, 0);
  expect(test.screen85.line_title, "コード決済でお支払い");
  expect(test.screen85.line_title_ex, "");
  expect(test.screen85.line1, "お支払い金額を確認し");
  expect(test.screen85.line2, "バーコードを読ませてください");
  expect(test.screen85.line3, "");
  expect(test.screen85.line4, "");
  expect(test.screen85.line1_ex, "");
  expect(test.screen85.line2_ex, "");
  expect(test.screen85.line3_ex, "");
  expect(test.screen85.line4_ex, "");
  expect(test.screen85.sound_led1, 6273);
  expect(test.screen85.sound_led2, 6273);
  expect(test.screen85.sound_led3, 0);
  expect(test.screen86.title, "イートインアイテム画面");
  expect(test.screen86.msg1, "店内でご飲食される商品はありますか？");
  expect(test.screen86.msg2, "");
  expect(test.screen86.msg1_size, 24);
  expect(test.screen86.msg2_size, 0);
  expect(test.screen86.sound1, 0);
  expect(test.screen86.sound2, 0);
  expect(test.screen86.sound3, 0);
  expect(test.screen86.snd_timer, 10);
  expect(test.screen86.timer1, 0);
  expect(test.screen86.timer2, 0);
  expect(test.screen86.timer3, 0);
  expect(test.screen86.dsp_flg1, 0);
  expect(test.screen86.dsp_flg2, 0);
  expect(test.screen86.movie01_ext, 0);
  expect(test.screen86.movie02_ext, 0);
  expect(test.screen86.movie03_ext, 0);
  expect(test.screen86.movie04_ext, 0);
  expect(test.screen86.line_title, "");
  expect(test.screen86.line_title_ex, "");
  expect(test.screen86.line1, "");
  expect(test.screen86.line2, "");
  expect(test.screen86.line3, "");
  expect(test.screen86.line4, "");
  expect(test.screen86.line1_ex, "");
  expect(test.screen86.line2_ex, "");
  expect(test.screen86.line3_ex, "");
  expect(test.screen86.line4_ex, "");
  expect(test.screen86.sound_led1, 6715);
  expect(test.screen86.sound_led2, 0);
  expect(test.screen86.sound_led3, 0);
  expect(test.screen87.title, "ﾌﾟﾘﾍﾟｲﾄﾞｶｰﾄﾞ読取画面<IC>");
  expect(test.screen87.msg1, "");
  expect(test.screen87.msg2, "");
  expect(test.screen87.msg1_size, 20);
  expect(test.screen87.msg2_size, 0);
  expect(test.screen87.sound1, 0);
  expect(test.screen87.sound2, 0);
  expect(test.screen87.sound3, 0);
  expect(test.screen87.snd_timer, 20);
  expect(test.screen87.timer1, 0);
  expect(test.screen87.timer2, 0);
  expect(test.screen87.timer3, 0);
  expect(test.screen87.dsp_flg1, 0);
  expect(test.screen87.dsp_flg2, 0);
  expect(test.screen87.movie01_ext, 0);
  expect(test.screen87.movie02_ext, 0);
  expect(test.screen87.movie03_ext, 0);
  expect(test.screen87.movie04_ext, 0);
  expect(test.screen87.line_title, "CoGCaでお支払い");
  expect(test.screen87.line_title_ex, "");
  expect(test.screen87.line1, "CoGCaカードを");
  expect(test.screen87.line2, "タッチしてください");
  expect(test.screen87.line3, "");
  expect(test.screen87.line4, "");
  expect(test.screen87.line1_ex, "");
  expect(test.screen87.line2_ex, "");
  expect(test.screen87.line3_ex, "");
  expect(test.screen87.line4_ex, "");
  expect(test.screen87.sound_led1, 6283);
  expect(test.screen87.sound_led2, 6283);
  expect(test.screen87.sound_led3, 0);
  expect(test.screen88.title, "ﾌﾟﾘﾍﾟｲﾄﾞ支払画面");
  expect(test.screen88.msg1, "");
  expect(test.screen88.msg2, "");
  expect(test.screen88.msg1_size, 0);
  expect(test.screen88.msg2_size, 0);
  expect(test.screen88.sound1, 6179);
  expect(test.screen88.sound2, 6179);
  expect(test.screen88.sound3, 0);
  expect(test.screen88.snd_timer, 20);
  expect(test.screen88.timer1, 0);
  expect(test.screen88.timer2, 0);
  expect(test.screen88.timer3, 0);
  expect(test.screen88.dsp_flg1, 0);
  expect(test.screen88.dsp_flg2, 0);
  expect(test.screen88.movie01_ext, 0);
  expect(test.screen88.movie02_ext, 0);
  expect(test.screen88.movie03_ext, 0);
  expect(test.screen88.movie04_ext, 0);
  expect(test.screen88.line_title, "");
  expect(test.screen88.line_title_ex, "");
  expect(test.screen88.line1, "よろしければ");
  expect(test.screen88.line2, "おわりボタンを");
  expect(test.screen88.line3, "押してください");
  expect(test.screen88.line4, "");
  expect(test.screen88.line1_ex, "");
  expect(test.screen88.line2_ex, "");
  expect(test.screen88.line3_ex, "");
  expect(test.screen88.line4_ex, "");
  expect(test.screen88.sound_led1, 6179);
  expect(test.screen88.sound_led2, 6179);
  expect(test.screen88.sound_led3, 0);
  expect(test.screen89.title, "ﾌﾟﾘﾍﾟｲﾄﾞ支払完了画面");
  expect(test.screen89.msg1, "レシートをお取りください。");
  expect(test.screen89.msg2, "");
  expect(test.screen89.msg1_size, 0);
  expect(test.screen89.msg2_size, 0);
  expect(test.screen89.sound1, 6133);
  expect(test.screen89.sound2, 6133);
  expect(test.screen89.sound3, 0);
  expect(test.screen89.snd_timer, 0);
  expect(test.screen89.timer1, 5);
  expect(test.screen89.timer2, 10);
  expect(test.screen89.timer3, 0);
  expect(test.screen89.dsp_flg1, 0);
  expect(test.screen89.dsp_flg2, 0);
  expect(test.screen89.movie01_ext, 0);
  expect(test.screen89.movie02_ext, 0);
  expect(test.screen89.movie03_ext, 0);
  expect(test.screen89.movie04_ext, 0);
  expect(test.screen89.line_title, "");
  expect(test.screen89.line_title_ex, "");
  expect(test.screen89.line1, "レシートを");
  expect(test.screen89.line2, "お受け取りください");
  expect(test.screen89.line3, "ありがとう");
  expect(test.screen89.line4, "ございました");
  expect(test.screen89.line1_ex, "");
  expect(test.screen89.line2_ex, "");
  expect(test.screen89.line3_ex, "");
  expect(test.screen89.line4_ex, "");
  expect(test.screen89.sound_led1, 6133);
  expect(test.screen89.sound_led2, 6133);
  expect(test.screen89.sound_led3, 0);
  expect(test.screen90.title, "ﾌﾟﾘﾍﾟｲﾄﾞ置数支払画面");
  expect(test.screen90.msg1, "お支払金額を入力してください");
  expect(test.screen90.msg2, "");
  expect(test.screen90.msg1_size, 24);
  expect(test.screen90.msg2_size, 0);
  expect(test.screen90.sound1, 0);
  expect(test.screen90.sound2, 0);
  expect(test.screen90.sound3, 0);
  expect(test.screen90.snd_timer, 20);
  expect(test.screen90.timer1, 0);
  expect(test.screen90.timer2, 0);
  expect(test.screen90.timer3, 0);
  expect(test.screen90.dsp_flg1, 0);
  expect(test.screen90.dsp_flg2, 0);
  expect(test.screen90.movie01_ext, 0);
  expect(test.screen90.movie02_ext, 0);
  expect(test.screen90.movie03_ext, 0);
  expect(test.screen90.movie04_ext, 0);
  expect(test.screen90.line_title, "");
  expect(test.screen90.line_title_ex, "");
  expect(test.screen90.line1, "");
  expect(test.screen90.line2, "");
  expect(test.screen90.line3, "");
  expect(test.screen90.line4, "");
  expect(test.screen90.line1_ex, "");
  expect(test.screen90.line2_ex, "");
  expect(test.screen90.line3_ex, "");
  expect(test.screen90.line4_ex, "");
  expect(test.screen90.sound_led1, 6285);
  expect(test.screen90.sound_led2, 0);
  expect(test.screen90.sound_led3, 0);
  expect(test.screen91.title, "ﾌﾟﾘﾍﾟｲﾄﾞ残高不足確認画面");
  expect(test.screen91.msg1, "残高が不足しています");
  expect(test.screen91.msg2, "");
  expect(test.screen91.msg1_size, 24);
  expect(test.screen91.msg2_size, 0);
  expect(test.screen91.sound1, 0);
  expect(test.screen91.sound2, 0);
  expect(test.screen91.sound3, 0);
  expect(test.screen91.snd_timer, 20);
  expect(test.screen91.timer1, 0);
  expect(test.screen91.timer2, 0);
  expect(test.screen91.timer3, 0);
  expect(test.screen91.dsp_flg1, 0);
  expect(test.screen91.dsp_flg2, 0);
  expect(test.screen91.movie01_ext, 0);
  expect(test.screen91.movie02_ext, 0);
  expect(test.screen91.movie03_ext, 0);
  expect(test.screen91.movie04_ext, 0);
  expect(test.screen91.line_title, "");
  expect(test.screen91.line_title_ex, "");
  expect(test.screen91.line1, "");
  expect(test.screen91.line2, "");
  expect(test.screen91.line3, "");
  expect(test.screen91.line4, "");
  expect(test.screen91.line1_ex, "");
  expect(test.screen91.line2_ex, "");
  expect(test.screen91.line3_ex, "");
  expect(test.screen91.line4_ex, "");
  expect(test.screen91.sound_led1, 6284);
  expect(test.screen91.sound_led2, 0);
  expect(test.screen91.sound_led3, 0);
  expect(test.screen92.title, "ﾎﾟｲﾝﾄ支払画面");
  expect(test.screen92.msg1, "");
  expect(test.screen92.msg2, "");
  expect(test.screen92.msg1_size, 24);
  expect(test.screen92.msg2_size, 0);
  expect(test.screen92.sound1, 6534);
  expect(test.screen92.sound2, 6534);
  expect(test.screen92.sound3, 0);
  expect(test.screen92.snd_timer, 20);
  expect(test.screen92.timer1, 10);
  expect(test.screen92.timer2, 0);
  expect(test.screen92.timer3, 0);
  expect(test.screen92.dsp_flg1, 0);
  expect(test.screen92.dsp_flg2, 0);
  expect(test.screen92.movie01_ext, 0);
  expect(test.screen92.movie02_ext, 0);
  expect(test.screen92.movie03_ext, 0);
  expect(test.screen92.movie04_ext, 0);
  expect(test.screen92.line_title, "");
  expect(test.screen92.line_title_ex, "");
  expect(test.screen92.line1, "ポイント数を入力して");
  expect(test.screen92.line2, "決定を押してください");
  expect(test.screen92.line3, "訂正する場合はクリア");
  expect(test.screen92.line4, "ボタンを押してください");
  expect(test.screen92.line1_ex, "ポイント利用単位：");
  expect(test.screen92.line2_ex, "");
  expect(test.screen92.line3_ex, "");
  expect(test.screen92.line4_ex, "");
  expect(test.screen92.sound_led1, 6534);
  expect(test.screen92.sound_led2, 6534);
  expect(test.screen92.sound_led3, 0);
  expect(test.screen93.title, "ﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen93.msg1, "");
  expect(test.screen93.msg2, "");
  expect(test.screen93.msg1_size, 0);
  expect(test.screen93.msg2_size, 0);
  expect(test.screen93.sound1, 6016);
  expect(test.screen93.sound2, 0);
  expect(test.screen93.sound3, 0);
  expect(test.screen93.snd_timer, 20);
  expect(test.screen93.timer1, 10);
  expect(test.screen93.timer2, 0);
  expect(test.screen93.timer3, 0);
  expect(test.screen93.dsp_flg1, 0);
  expect(test.screen93.dsp_flg2, 0);
  expect(test.screen93.movie01_ext, 0);
  expect(test.screen93.movie02_ext, 0);
  expect(test.screen93.movie03_ext, 0);
  expect(test.screen93.movie04_ext, 0);
  expect(test.screen93.line_title, "");
  expect(test.screen93.line_title_ex, "");
  expect(test.screen93.line1, "よろしければ");
  expect(test.screen93.line2, "おわりボタンを");
  expect(test.screen93.line3, "押してください");
  expect(test.screen93.line4, "");
  expect(test.screen93.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen93.line2_ex, "button to complete");
  expect(test.screen93.line3_ex, "the payment.");
  expect(test.screen93.line4_ex, "");
  expect(test.screen93.sound_led1, 6179);
  expect(test.screen93.sound_led2, 6217);
  expect(test.screen93.sound_led3, 0);
  expect(test.screen94.title, "ﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen94.msg1, "レシートをお取りください。");
  expect(test.screen94.msg2, "");
  expect(test.screen94.msg1_size, 0);
  expect(test.screen94.msg2_size, 0);
  expect(test.screen94.sound1, 6018);
  expect(test.screen94.sound2, 0);
  expect(test.screen94.sound3, 0);
  expect(test.screen94.snd_timer, 0);
  expect(test.screen94.timer1, 5);
  expect(test.screen94.timer2, 10);
  expect(test.screen94.timer3, 0);
  expect(test.screen94.dsp_flg1, 0);
  expect(test.screen94.dsp_flg2, 0);
  expect(test.screen94.movie01_ext, 0);
  expect(test.screen94.movie02_ext, 0);
  expect(test.screen94.movie03_ext, 0);
  expect(test.screen94.movie04_ext, 0);
  expect(test.screen94.line_title, "");
  expect(test.screen94.line_title_ex, "");
  expect(test.screen94.line1, "レシートを");
  expect(test.screen94.line2, "お受け取りください");
  expect(test.screen94.line3, "ありがとう");
  expect(test.screen94.line4, "ございました");
  expect(test.screen94.line1_ex, "Thank you.");
  expect(test.screen94.line2_ex, "Please take your receipt.");
  expect(test.screen94.line3_ex, "");
  expect(test.screen94.line4_ex, "");
  expect(test.screen94.sound_led1, 6133);
  expect(test.screen94.sound_led2, 0);
  expect(test.screen94.sound_led3, 0);
  expect(test.screen95.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払画面");
  expect(test.screen95.msg1, "");
  expect(test.screen95.msg2, "");
  expect(test.screen95.msg1_size, 24);
  expect(test.screen95.msg2_size, 0);
  expect(test.screen95.sound1, 6534);
  expect(test.screen95.sound2, 6534);
  expect(test.screen95.sound3, 0);
  expect(test.screen95.snd_timer, 20);
  expect(test.screen95.timer1, 10);
  expect(test.screen95.timer2, 0);
  expect(test.screen95.timer3, 0);
  expect(test.screen95.dsp_flg1, 0);
  expect(test.screen95.dsp_flg2, 0);
  expect(test.screen95.movie01_ext, 0);
  expect(test.screen95.movie02_ext, 0);
  expect(test.screen95.movie03_ext, 0);
  expect(test.screen95.movie04_ext, 0);
  expect(test.screen95.line_title, "");
  expect(test.screen95.line_title_ex, "");
  expect(test.screen95.line1, "ポイント数を入力して");
  expect(test.screen95.line2, "決定を押してください");
  expect(test.screen95.line3, "訂正する場合はクリア");
  expect(test.screen95.line4, "ボタンを押してください");
  expect(test.screen95.line1_ex, "");
  expect(test.screen95.line2_ex, "");
  expect(test.screen95.line3_ex, "");
  expect(test.screen95.line4_ex, "");
  expect(test.screen95.sound_led1, 6534);
  expect(test.screen95.sound_led2, 6534);
  expect(test.screen95.sound_led3, 0);
  expect(test.screen96.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen96.msg1, "");
  expect(test.screen96.msg2, "");
  expect(test.screen96.msg1_size, 0);
  expect(test.screen96.msg2_size, 0);
  expect(test.screen96.sound1, 6016);
  expect(test.screen96.sound2, 0);
  expect(test.screen96.sound3, 0);
  expect(test.screen96.snd_timer, 20);
  expect(test.screen96.timer1, 10);
  expect(test.screen96.timer2, 0);
  expect(test.screen96.timer3, 0);
  expect(test.screen96.dsp_flg1, 0);
  expect(test.screen96.dsp_flg2, 0);
  expect(test.screen96.movie01_ext, 0);
  expect(test.screen96.movie02_ext, 0);
  expect(test.screen96.movie03_ext, 0);
  expect(test.screen96.movie04_ext, 0);
  expect(test.screen96.line_title, "");
  expect(test.screen96.line_title_ex, "");
  expect(test.screen96.line1, "よろしければ");
  expect(test.screen96.line2, "おわりボタンを");
  expect(test.screen96.line3, "押してください");
  expect(test.screen96.line4, "");
  expect(test.screen96.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen96.line2_ex, "button to complete");
  expect(test.screen96.line3_ex, "the payment.");
  expect(test.screen96.line4_ex, "");
  expect(test.screen96.sound_led1, 6179);
  expect(test.screen96.sound_led2, 6217);
  expect(test.screen96.sound_led3, 0);
  expect(test.screen97.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen97.msg1, "レシートをお取りください。");
  expect(test.screen97.msg2, "");
  expect(test.screen97.msg1_size, 0);
  expect(test.screen97.msg2_size, 0);
  expect(test.screen97.sound1, 6018);
  expect(test.screen97.sound2, 0);
  expect(test.screen97.sound3, 0);
  expect(test.screen97.snd_timer, 0);
  expect(test.screen97.timer1, 5);
  expect(test.screen97.timer2, 10);
  expect(test.screen97.timer3, 0);
  expect(test.screen97.dsp_flg1, 0);
  expect(test.screen97.dsp_flg2, 0);
  expect(test.screen97.movie01_ext, 0);
  expect(test.screen97.movie02_ext, 0);
  expect(test.screen97.movie03_ext, 0);
  expect(test.screen97.movie04_ext, 0);
  expect(test.screen97.line_title, "");
  expect(test.screen97.line_title_ex, "");
  expect(test.screen97.line1, "レシートを");
  expect(test.screen97.line2, "お受け取りください");
  expect(test.screen97.line3, "ありがとう");
  expect(test.screen97.line4, "ございました");
  expect(test.screen97.line1_ex, "Thank you.");
  expect(test.screen97.line2_ex, "Please take your receipt.");
  expect(test.screen97.line3_ex, "");
  expect(test.screen97.line4_ex, "");
  expect(test.screen97.sound_led1, 6133);
  expect(test.screen97.sound_led2, 0);
  expect(test.screen97.sound_led3, 0);
  expect(test.screen98.title, "社員証決済画面");
  expect(test.screen98.msg1, "");
  expect(test.screen98.msg2, "");
  expect(test.screen98.msg1_size, 0);
  expect(test.screen98.msg2_size, 0);
  expect(test.screen98.sound1, 0);
  expect(test.screen98.sound2, 0);
  expect(test.screen98.sound3, 0);
  expect(test.screen98.snd_timer, 20);
  expect(test.screen98.timer1, 10);
  expect(test.screen98.timer2, 0);
  expect(test.screen98.timer3, 0);
  expect(test.screen98.dsp_flg1, 0);
  expect(test.screen98.dsp_flg2, 0);
  expect(test.screen98.movie01_ext, 0);
  expect(test.screen98.movie02_ext, 0);
  expect(test.screen98.movie03_ext, 0);
  expect(test.screen98.movie04_ext, 0);
  expect(test.screen98.line_title, "");
  expect(test.screen98.line_title_ex, "");
  expect(test.screen98.line1, "よろしければ");
  expect(test.screen98.line2, "おわりボタンを");
  expect(test.screen98.line3, "押してください");
  expect(test.screen98.line4, "");
  expect(test.screen98.line1_ex, "When ready, ");
  expect(test.screen98.line2_ex, "press \"finish\"");
  expect(test.screen98.line3_ex, "to complete payment.");
  expect(test.screen98.line4_ex, "");
  expect(test.screen98.sound_led1, 6179);
  expect(test.screen98.sound_led2, 6217);
  expect(test.screen98.sound_led3, 0);
  expect(test.screen99.title, "社員証決済完了画面");
  expect(test.screen99.msg1, "");
  expect(test.screen99.msg2, "");
  expect(test.screen99.msg1_size, 0);
  expect(test.screen99.msg2_size, 0);
  expect(test.screen99.sound1, 6133);
  expect(test.screen99.sound2, 6133);
  expect(test.screen99.sound3, 0);
  expect(test.screen99.snd_timer, 0);
  expect(test.screen99.timer1, 5);
  expect(test.screen99.timer2, 10);
  expect(test.screen99.timer3, 0);
  expect(test.screen99.dsp_flg1, 0);
  expect(test.screen99.dsp_flg2, 0);
  expect(test.screen99.movie01_ext, 0);
  expect(test.screen99.movie02_ext, 0);
  expect(test.screen99.movie03_ext, 0);
  expect(test.screen99.movie04_ext, 0);
  expect(test.screen99.line_title, "");
  expect(test.screen99.line_title_ex, "");
  expect(test.screen99.line1, "レシートを");
  expect(test.screen99.line2, "お受け取りください");
  expect(test.screen99.line3, "ありがとう");
  expect(test.screen99.line4, "ございました");
  expect(test.screen99.line1_ex, "Thank you.");
  expect(test.screen99.line2_ex, "Please take your receipt.");
  expect(test.screen99.line3_ex, "");
  expect(test.screen99.line4_ex, "");
  expect(test.screen99.sound_led1, 6133);
  expect(test.screen99.sound_led2, 6133);
  expect(test.screen99.sound_led3, 0);
  expect(test.screen100.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄｶｰﾄﾞ読取画面");
  expect(test.screen100.msg1, "");
  expect(test.screen100.msg2, "");
  expect(test.screen100.msg1_size, 20);
  expect(test.screen100.msg2_size, 0);
  expect(test.screen100.sound1, 6258);
  expect(test.screen100.sound2, 6292);
  expect(test.screen100.sound3, 0);
  expect(test.screen100.snd_timer, 20);
  expect(test.screen100.timer1, 0);
  expect(test.screen100.timer2, 0);
  expect(test.screen100.timer3, 0);
  expect(test.screen100.dsp_flg1, 0);
  expect(test.screen100.dsp_flg2, 0);
  expect(test.screen100.movie01_ext, 0);
  expect(test.screen100.movie02_ext, 0);
  expect(test.screen100.movie03_ext, 0);
  expect(test.screen100.movie04_ext, 0);
  expect(test.screen100.line_title, "プリペイドでお支払い");
  expect(test.screen100.line_title_ex, "");
  expect(test.screen100.line1, "プリペイドカードを");
  expect(test.screen100.line2, "読ませてください");
  expect(test.screen100.line3, "");
  expect(test.screen100.line4, "");
  expect(test.screen100.line1_ex, "");
  expect(test.screen100.line2_ex, "");
  expect(test.screen100.line3_ex, "");
  expect(test.screen100.line4_ex, "");
  expect(test.screen100.sound_led1, 6258);
  expect(test.screen100.sound_led2, 6292);
  expect(test.screen100.sound_led3, 0);
  expect(test.screen101.title, "会員読込画面(フルセルフ)");
  expect(test.screen101.msg1, "");
  expect(test.screen101.msg2, "");
  expect(test.screen101.msg1_size, 0);
  expect(test.screen101.msg2_size, 0);
  expect(test.screen101.sound1, 0);
  expect(test.screen101.sound2, 0);
  expect(test.screen101.sound3, 0);
  expect(test.screen101.snd_timer, 0);
  expect(test.screen101.timer1, 0);
  expect(test.screen101.timer2, 0);
  expect(test.screen101.timer3, 0);
  expect(test.screen101.dsp_flg1, 0);
  expect(test.screen101.dsp_flg2, 0);
  expect(test.screen101.movie01_ext, 0);
  expect(test.screen101.movie02_ext, 0);
  expect(test.screen101.movie03_ext, 0);
  expect(test.screen101.movie04_ext, 0);
  expect(test.screen101.line_title, "");
  expect(test.screen101.line_title_ex, "");
  expect(test.screen101.line1, "");
  expect(test.screen101.line2, "");
  expect(test.screen101.line3, "");
  expect(test.screen101.line4, "");
  expect(test.screen101.line1_ex, "");
  expect(test.screen101.line2_ex, "");
  expect(test.screen101.line3_ex, "");
  expect(test.screen101.line4_ex, "");
  expect(test.screen101.sound_led1, 0);
  expect(test.screen101.sound_led2, 0);
  expect(test.screen101.sound_led3, 0);
  expect(test.screen102.title, "アイテムリスト画面(フルセルフ)");
  expect(test.screen102.msg1, "");
  expect(test.screen102.msg2, "");
  expect(test.screen102.msg1_size, 0);
  expect(test.screen102.msg2_size, 0);
  expect(test.screen102.sound1, 0);
  expect(test.screen102.sound2, 0);
  expect(test.screen102.sound3, 0);
  expect(test.screen102.snd_timer, 0);
  expect(test.screen102.timer1, 0);
  expect(test.screen102.timer2, 0);
  expect(test.screen102.timer3, 0);
  expect(test.screen102.dsp_flg1, 0);
  expect(test.screen102.dsp_flg2, 0);
  expect(test.screen102.movie01_ext, 0);
  expect(test.screen102.movie02_ext, 0);
  expect(test.screen102.movie03_ext, 0);
  expect(test.screen102.movie04_ext, 0);
  expect(test.screen102.line_title, "");
  expect(test.screen102.line_title_ex, "");
  expect(test.screen102.line1, "");
  expect(test.screen102.line2, "");
  expect(test.screen102.line3, "");
  expect(test.screen102.line4, "");
  expect(test.screen102.line1_ex, "");
  expect(test.screen102.line2_ex, "");
  expect(test.screen102.line3_ex, "");
  expect(test.screen102.line4_ex, "");
  expect(test.screen102.sound_led1, 0);
  expect(test.screen102.sound_led2, 0);
  expect(test.screen102.sound_led3, 0);
  expect(test.screen103.title, "カード選択画面");
  expect(test.screen103.msg1, "ポイントカードの種類を選択して下さい");
  expect(test.screen103.msg2, "");
  expect(test.screen103.msg1_size, 24);
  expect(test.screen103.msg2_size, 0);
  expect(test.screen103.sound1, 6270);
  expect(test.screen103.sound2, 0);
  expect(test.screen103.sound3, 0);
  expect(test.screen103.snd_timer, 10);
  expect(test.screen103.timer1, 0);
  expect(test.screen103.timer2, 0);
  expect(test.screen103.timer3, 0);
  expect(test.screen103.dsp_flg1, 0);
  expect(test.screen103.dsp_flg2, 0);
  expect(test.screen103.movie01_ext, 0);
  expect(test.screen103.movie02_ext, 0);
  expect(test.screen103.movie03_ext, 0);
  expect(test.screen103.movie04_ext, 0);
  expect(test.screen103.line_title, "");
  expect(test.screen103.line_title_ex, "");
  expect(test.screen103.line1, "");
  expect(test.screen103.line2, "");
  expect(test.screen103.line3, "");
  expect(test.screen103.line4, "");
  expect(test.screen103.line1_ex, "");
  expect(test.screen103.line2_ex, "");
  expect(test.screen103.line3_ex, "");
  expect(test.screen103.line4_ex, "");
  expect(test.screen103.sound_led1, 6281);
  expect(test.screen103.sound_led2, 0);
  expect(test.screen103.sound_led3, 0);
  expect(test.screen104.title, "カード読込画面");
  expect(test.screen104.msg1, "カードを読ませてください");
  expect(test.screen104.msg2, "");
  expect(test.screen104.msg1_size, 24);
  expect(test.screen104.msg2_size, 0);
  expect(test.screen104.sound1, 6270);
  expect(test.screen104.sound2, 0);
  expect(test.screen104.sound3, 0);
  expect(test.screen104.snd_timer, 10);
  expect(test.screen104.timer1, 0);
  expect(test.screen104.timer2, 0);
  expect(test.screen104.timer3, 0);
  expect(test.screen104.dsp_flg1, 0);
  expect(test.screen104.dsp_flg2, 0);
  expect(test.screen104.movie01_ext, 0);
  expect(test.screen104.movie02_ext, 0);
  expect(test.screen104.movie03_ext, 0);
  expect(test.screen104.movie04_ext, 0);
  expect(test.screen104.line_title, "");
  expect(test.screen104.line_title_ex, "");
  expect(test.screen104.line1, "CoGCaカードを");
  expect(test.screen104.line2, "タッチしてください");
  expect(test.screen104.line3, "");
  expect(test.screen104.line4, "");
  expect(test.screen104.line1_ex, "");
  expect(test.screen104.line2_ex, "");
  expect(test.screen104.line3_ex, "");
  expect(test.screen104.line4_ex, "");
  expect(test.screen104.sound_led1, 6283);
  expect(test.screen104.sound_led2, 0);
  expect(test.screen104.sound_led3, 0);
  expect(test.screen105.title, "カード読込画面");
  expect(test.screen105.msg1, "カードを読ませてください");
  expect(test.screen105.msg2, "");
  expect(test.screen105.msg1_size, 24);
  expect(test.screen105.msg2_size, 0);
  expect(test.screen105.sound1, 6270);
  expect(test.screen105.sound2, 0);
  expect(test.screen105.sound3, 0);
  expect(test.screen105.snd_timer, 10);
  expect(test.screen105.timer1, 0);
  expect(test.screen105.timer2, 0);
  expect(test.screen105.timer3, 0);
  expect(test.screen105.dsp_flg1, 0);
  expect(test.screen105.dsp_flg2, 0);
  expect(test.screen105.movie01_ext, 0);
  expect(test.screen105.movie02_ext, 0);
  expect(test.screen105.movie03_ext, 0);
  expect(test.screen105.movie04_ext, 0);
  expect(test.screen105.line_title, "");
  expect(test.screen105.line_title_ex, "");
  expect(test.screen105.line1, "カードを端末に");
  expect(test.screen105.line2, "通してください");
  expect(test.screen105.line3, "");
  expect(test.screen105.line4, "");
  expect(test.screen105.line1_ex, "");
  expect(test.screen105.line2_ex, "");
  expect(test.screen105.line3_ex, "");
  expect(test.screen105.line4_ex, "");
  expect(test.screen105.sound_led1, 6282);
  expect(test.screen105.sound_led2, 0);
  expect(test.screen105.sound_led3, 0);
  expect(test.screen106.title, "カード読込画面");
  expect(test.screen106.msg1, "カードを読ませてください");
  expect(test.screen106.msg2, "");
  expect(test.screen106.msg1_size, 24);
  expect(test.screen106.msg2_size, 0);
  expect(test.screen106.sound1, 6270);
  expect(test.screen106.sound2, 0);
  expect(test.screen106.sound3, 0);
  expect(test.screen106.snd_timer, 10);
  expect(test.screen106.timer1, 0);
  expect(test.screen106.timer2, 0);
  expect(test.screen106.timer3, 0);
  expect(test.screen106.dsp_flg1, 0);
  expect(test.screen106.dsp_flg2, 0);
  expect(test.screen106.movie01_ext, 0);
  expect(test.screen106.movie02_ext, 0);
  expect(test.screen106.movie03_ext, 0);
  expect(test.screen106.movie04_ext, 0);
  expect(test.screen106.line_title, "");
  expect(test.screen106.line_title_ex, "");
  expect(test.screen106.line1, "CoGCaカードを");
  expect(test.screen106.line2, "タッチしてください");
  expect(test.screen106.line3, "");
  expect(test.screen106.line4, "");
  expect(test.screen106.line1_ex, "");
  expect(test.screen106.line2_ex, "");
  expect(test.screen106.line3_ex, "");
  expect(test.screen106.line4_ex, "");
  expect(test.screen106.sound_led1, 6283);
  expect(test.screen106.sound_led2, 0);
  expect(test.screen106.sound_led3, 0);
  expect(test.screen107.title, "カード読込画面");
  expect(test.screen107.msg1, "カードを読ませてください");
  expect(test.screen107.msg2, "");
  expect(test.screen107.msg1_size, 24);
  expect(test.screen107.msg2_size, 0);
  expect(test.screen107.sound1, 6270);
  expect(test.screen107.sound2, 0);
  expect(test.screen107.sound3, 0);
  expect(test.screen107.snd_timer, 10);
  expect(test.screen107.timer1, 0);
  expect(test.screen107.timer2, 0);
  expect(test.screen107.timer3, 0);
  expect(test.screen107.dsp_flg1, 0);
  expect(test.screen107.dsp_flg2, 0);
  expect(test.screen107.movie01_ext, 0);
  expect(test.screen107.movie02_ext, 0);
  expect(test.screen107.movie03_ext, 0);
  expect(test.screen107.movie04_ext, 0);
  expect(test.screen107.line_title, "");
  expect(test.screen107.line_title_ex, "");
  expect(test.screen107.line1, "CoGCaカードを");
  expect(test.screen107.line2, "タッチしてください");
  expect(test.screen107.line3, "");
  expect(test.screen107.line4, "");
  expect(test.screen107.line1_ex, "");
  expect(test.screen107.line2_ex, "");
  expect(test.screen107.line3_ex, "");
  expect(test.screen107.line4_ex, "");
  expect(test.screen107.sound_led1, 6283);
  expect(test.screen107.sound_led2, 0);
  expect(test.screen107.sound_led3, 0);
  expect(test.screen109.title, "プリカチャージ入金画面");
  expect(test.screen109.msg1, "");
  expect(test.screen109.msg2, "");
  expect(test.screen109.msg1_size, 0);
  expect(test.screen109.msg2_size, 0);
  expect(test.screen109.sound1, 0);
  expect(test.screen109.sound2, 0);
  expect(test.screen109.sound3, 0);
  expect(test.screen109.snd_timer, 0);
  expect(test.screen109.timer1, 0);
  expect(test.screen109.timer2, 0);
  expect(test.screen109.timer3, 0);
  expect(test.screen109.dsp_flg1, 0);
  expect(test.screen109.dsp_flg2, 0);
  expect(test.screen109.movie01_ext, 0);
  expect(test.screen109.movie02_ext, 0);
  expect(test.screen109.movie03_ext, 0);
  expect(test.screen109.movie04_ext, 0);
  expect(test.screen109.line_title, "プリカチャージ");
  expect(test.screen109.line_title_ex, "");
  expect(test.screen109.line1, "お金を");
  expect(test.screen109.line2, "入れてください");
  expect(test.screen109.line3, "");
  expect(test.screen109.line4, "");
  expect(test.screen109.line1_ex, "");
  expect(test.screen109.line2_ex, "");
  expect(test.screen109.line3_ex, "");
  expect(test.screen109.line4_ex, "");
  expect(test.screen109.sound_led1, 6180);
  expect(test.screen109.sound_led2, 6130);
  expect(test.screen109.sound_led3, 6015);
  expect(test.screen111.title, "プリカ利用画面");
  expect(test.screen111.msg1, "プリペイドカードでお会計ですね");
  expect(test.screen111.msg2, "");
  expect(test.screen111.msg1_size, 0);
  expect(test.screen111.msg2_size, 0);
  expect(test.screen111.sound1, 0);
  expect(test.screen111.sound2, 0);
  expect(test.screen111.sound3, 0);
  expect(test.screen111.snd_timer, 20);
  expect(test.screen111.timer1, 0);
  expect(test.screen111.timer2, 0);
  expect(test.screen111.timer3, 0);
  expect(test.screen111.dsp_flg1, 0);
  expect(test.screen111.dsp_flg2, 0);
  expect(test.screen111.movie01_ext, 0);
  expect(test.screen111.movie02_ext, 0);
  expect(test.screen111.movie03_ext, 0);
  expect(test.screen111.movie04_ext, 0);
  expect(test.screen111.line_title, "プリカでお支払い");
  expect(test.screen111.line_title_ex, "Prepaid Card Payment");
  expect(test.screen111.line1, "お支払い金額を確認し");
  expect(test.screen111.line2, "カードを読ませてください");
  expect(test.screen111.line3, "");
  expect(test.screen111.line4, "");
  expect(test.screen111.line1_ex, "Please swipe");
  expect(test.screen111.line2_ex, "your prepaid card.");
  expect(test.screen111.line3_ex, "");
  expect(test.screen111.line4_ex, "");
  expect(test.screen111.sound_led1, 0);
  expect(test.screen111.sound_led2, 0);
  expect(test.screen111.sound_led3, 0);
  expect(test.screen112.title, "釣銭チャージ");
  expect(test.screen112.msg1, "");
  expect(test.screen112.msg2, "");
  expect(test.screen112.msg1_size, 0);
  expect(test.screen112.msg2_size, 0);
  expect(test.screen112.sound1, 0);
  expect(test.screen112.sound2, 0);
  expect(test.screen112.sound3, 0);
  expect(test.screen112.snd_timer, 0);
  expect(test.screen112.timer1, 0);
  expect(test.screen112.timer2, 0);
  expect(test.screen112.timer3, 0);
  expect(test.screen112.dsp_flg1, 0);
  expect(test.screen112.dsp_flg2, 0);
  expect(test.screen112.movie01_ext, 0);
  expect(test.screen112.movie02_ext, 0);
  expect(test.screen112.movie03_ext, 0);
  expect(test.screen112.movie04_ext, 0);
  expect(test.screen112.line_title, "釣銭チャージ中");
  expect(test.screen112.line_title_ex, "");
  expect(test.screen112.line1, "釣銭チャージ中です。");
  expect(test.screen112.line2, "しばらくお待ちください。");
  expect(test.screen112.line3, "");
  expect(test.screen112.line4, "");
  expect(test.screen112.line1_ex, "");
  expect(test.screen112.line2_ex, "");
  expect(test.screen112.line3_ex, "");
  expect(test.screen112.line4_ex, "");
  expect(test.screen112.sound_led1, 0);
  expect(test.screen112.sound_led2, 0);
  expect(test.screen112.sound_led3, 0);
  expect(test.screen113.title, "プリカ残高照会読取画面");
  expect(test.screen113.msg1, "カードを読ませてください");
  expect(test.screen113.msg2, "");
  expect(test.screen113.msg1_size, 0);
  expect(test.screen113.msg2_size, 0);
  expect(test.screen113.sound1, 6289);
  expect(test.screen113.sound2, 0);
  expect(test.screen113.sound3, 0);
  expect(test.screen113.snd_timer, 10);
  expect(test.screen113.timer1, 0);
  expect(test.screen113.timer2, 0);
  expect(test.screen113.timer3, 0);
  expect(test.screen113.dsp_flg1, 0);
  expect(test.screen113.dsp_flg2, 0);
  expect(test.screen113.movie01_ext, 0);
  expect(test.screen113.movie02_ext, 0);
  expect(test.screen113.movie03_ext, 0);
  expect(test.screen113.movie04_ext, 0);
  expect(test.screen113.line_title, "");
  expect(test.screen113.line_title_ex, "");
  expect(test.screen113.line1, "");
  expect(test.screen113.line2, "");
  expect(test.screen113.line3, "");
  expect(test.screen113.line4, "");
  expect(test.screen113.line1_ex, "");
  expect(test.screen113.line2_ex, "");
  expect(test.screen113.line3_ex, "");
  expect(test.screen113.line4_ex, "");
  expect(test.screen113.sound_led1, 6289);
  expect(test.screen113.sound_led2, 0);
  expect(test.screen113.sound_led3, 0);
  expect(test.screen114.title, "プリカ残高照会完了画面");
  expect(test.screen114.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen114.msg2, "");
  expect(test.screen114.msg1_size, 0);
  expect(test.screen114.msg2_size, 0);
  expect(test.screen114.sound1, 6578);
  expect(test.screen114.sound2, 0);
  expect(test.screen114.sound3, 0);
  expect(test.screen114.snd_timer, 20);
  expect(test.screen114.timer1, 0);
  expect(test.screen114.timer2, 0);
  expect(test.screen114.timer3, 0);
  expect(test.screen114.dsp_flg1, 0);
  expect(test.screen114.dsp_flg2, 0);
  expect(test.screen114.movie01_ext, 0);
  expect(test.screen114.movie02_ext, 0);
  expect(test.screen114.movie03_ext, 0);
  expect(test.screen114.movie04_ext, 0);
  expect(test.screen114.line_title, "");
  expect(test.screen114.line_title_ex, "");
  expect(test.screen114.line1, "");
  expect(test.screen114.line2, "");
  expect(test.screen114.line3, "");
  expect(test.screen114.line4, "");
  expect(test.screen114.line1_ex, "");
  expect(test.screen114.line2_ex, "");
  expect(test.screen114.line3_ex, "");
  expect(test.screen114.line4_ex, "");
  expect(test.screen114.sound_led1, 6578);
  expect(test.screen114.sound_led2, 0);
  expect(test.screen114.sound_led3, 0);
  expect(test.screen115.title, "ﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen115.msg1, "");
  expect(test.screen115.msg2, "");
  expect(test.screen115.msg1_size, 0);
  expect(test.screen115.msg2_size, 0);
  expect(test.screen115.sound1, 6016);
  expect(test.screen115.sound2, 0);
  expect(test.screen115.sound3, 0);
  expect(test.screen115.snd_timer, 20);
  expect(test.screen115.timer1, 10);
  expect(test.screen115.timer2, 0);
  expect(test.screen115.timer3, 0);
  expect(test.screen115.dsp_flg1, 0);
  expect(test.screen115.dsp_flg2, 0);
  expect(test.screen115.movie01_ext, 0);
  expect(test.screen115.movie02_ext, 0);
  expect(test.screen115.movie03_ext, 0);
  expect(test.screen115.movie04_ext, 0);
  expect(test.screen115.line_title, "");
  expect(test.screen115.line_title_ex, "");
  expect(test.screen115.line1, "よろしければ");
  expect(test.screen115.line2, "おわりボタンを");
  expect(test.screen115.line3, "押してください");
  expect(test.screen115.line4, "");
  expect(test.screen115.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen115.line2_ex, "button to complete");
  expect(test.screen115.line3_ex, "the payment.");
  expect(test.screen115.line4_ex, "");
  expect(test.screen115.sound_led1, 6179);
  expect(test.screen115.sound_led2, 6217);
  expect(test.screen115.sound_led3, 0);
  expect(test.screen116.title, "ﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen116.msg1, "レシートをお取りください。");
  expect(test.screen116.msg2, "");
  expect(test.screen116.msg1_size, 0);
  expect(test.screen116.msg2_size, 0);
  expect(test.screen116.sound1, 6018);
  expect(test.screen116.sound2, 0);
  expect(test.screen116.sound3, 0);
  expect(test.screen116.snd_timer, 0);
  expect(test.screen116.timer1, 5);
  expect(test.screen116.timer2, 10);
  expect(test.screen116.timer3, 0);
  expect(test.screen116.dsp_flg1, 0);
  expect(test.screen116.dsp_flg2, 0);
  expect(test.screen116.movie01_ext, 0);
  expect(test.screen116.movie02_ext, 0);
  expect(test.screen116.movie03_ext, 0);
  expect(test.screen116.movie04_ext, 0);
  expect(test.screen116.line_title, "");
  expect(test.screen116.line_title_ex, "");
  expect(test.screen116.line1, "レシートを");
  expect(test.screen116.line2, "お受け取りください");
  expect(test.screen116.line3, "ありがとう");
  expect(test.screen116.line4, "ございました");
  expect(test.screen116.line1_ex, "Thank you.");
  expect(test.screen116.line2_ex, "Please take your receipt.");
  expect(test.screen116.line3_ex, "");
  expect(test.screen116.line4_ex, "");
  expect(test.screen116.sound_led1, 6133);
  expect(test.screen116.sound_led2, 0);
  expect(test.screen116.sound_led3, 0);
  expect(test.screen117.title, "ﾎﾟｲﾝﾄ支払画面");
  expect(test.screen117.msg1, "");
  expect(test.screen117.msg2, "");
  expect(test.screen117.msg1_size, 24);
  expect(test.screen117.msg2_size, 0);
  expect(test.screen117.sound1, 6534);
  expect(test.screen117.sound2, 6534);
  expect(test.screen117.sound3, 0);
  expect(test.screen117.snd_timer, 20);
  expect(test.screen117.timer1, 10);
  expect(test.screen117.timer2, 0);
  expect(test.screen117.timer3, 0);
  expect(test.screen117.dsp_flg1, 0);
  expect(test.screen117.dsp_flg2, 0);
  expect(test.screen117.movie01_ext, 0);
  expect(test.screen117.movie02_ext, 0);
  expect(test.screen117.movie03_ext, 0);
  expect(test.screen117.movie04_ext, 0);
  expect(test.screen117.line_title, "");
  expect(test.screen117.line_title_ex, "");
  expect(test.screen117.line1, "ポイント数を入力して");
  expect(test.screen117.line2, "決定を押してください");
  expect(test.screen117.line3, "訂正する場合はクリア");
  expect(test.screen117.line4, "ボタンを押してください");
  expect(test.screen117.line1_ex, "ポイント利用単位：");
  expect(test.screen117.line2_ex, "");
  expect(test.screen117.line3_ex, "");
  expect(test.screen117.line4_ex, "");
  expect(test.screen117.sound_led1, 6534);
  expect(test.screen117.sound_led2, 6534);
  expect(test.screen117.sound_led3, 0);
  expect(test.screen118.title, "暗証番号入力画面");
  expect(test.screen118.msg1, "");
  expect(test.screen118.msg2, "");
  expect(test.screen118.msg1_size, 20);
  expect(test.screen118.msg2_size, 0);
  expect(test.screen118.sound1, 0);
  expect(test.screen118.sound2, 0);
  expect(test.screen118.sound3, 0);
  expect(test.screen118.snd_timer, 10);
  expect(test.screen118.timer1, 0);
  expect(test.screen118.timer2, 0);
  expect(test.screen118.timer3, 0);
  expect(test.screen118.dsp_flg1, 0);
  expect(test.screen118.dsp_flg2, 0);
  expect(test.screen118.movie01_ext, 0);
  expect(test.screen118.movie02_ext, 0);
  expect(test.screen118.movie03_ext, 0);
  expect(test.screen118.movie04_ext, 0);
  expect(test.screen118.line_title, "暗証番号を入力");
  expect(test.screen118.line_title_ex, "");
  expect(test.screen118.line1, "暗証番号を");
  expect(test.screen118.line2, "入力してください");
  expect(test.screen118.line3, "");
  expect(test.screen118.line4, "");
  expect(test.screen118.line1_ex, "Enter the passcode.");
  expect(test.screen118.line2_ex, "");
  expect(test.screen118.line3_ex, "");
  expect(test.screen118.line4_ex, "");
  expect(test.screen118.sound_led1, 6239);
  expect(test.screen118.sound_led2, 6239);
  expect(test.screen118.sound_led3, 0);
  expect(test.screen119.title, "iD利用画面");
  expect(test.screen119.msg1, "iDでお会計ですね");
  expect(test.screen119.msg2, "");
  expect(test.screen119.msg1_size, 0);
  expect(test.screen119.msg2_size, 0);
  expect(test.screen119.sound1, 6124);
  expect(test.screen119.sound2, 6255);
  expect(test.screen119.sound3, 0);
  expect(test.screen119.snd_timer, 20);
  expect(test.screen119.timer1, 0);
  expect(test.screen119.timer2, 0);
  expect(test.screen119.timer3, 0);
  expect(test.screen119.dsp_flg1, 0);
  expect(test.screen119.dsp_flg2, 0);
  expect(test.screen119.movie01_ext, 0);
  expect(test.screen119.movie02_ext, 0);
  expect(test.screen119.movie03_ext, 0);
  expect(test.screen119.movie04_ext, 0);
  expect(test.screen119.line_title, "ｉＤでお支払い");
  expect(test.screen119.line_title_ex, "iD Payment");
  expect(test.screen119.line1, "お支払い金額を確認し");
  expect(test.screen119.line2, "カードをタッチしてください");
  expect(test.screen119.line3, "");
  expect(test.screen119.line4, "");
  expect(test.screen119.line1_ex, "Tap your IC card");
  expect(test.screen119.line2_ex, "on the terminal.");
  expect(test.screen119.line3_ex, "");
  expect(test.screen119.line4_ex, "");
  expect(test.screen119.sound_led1, 6124);
  expect(test.screen119.sound_led2, 6255);
  expect(test.screen119.sound_led3, 0);
  expect(test.screen120.title, "QUICPay利用画面");
  expect(test.screen120.msg1, "QUICPayでお会計ですね");
  expect(test.screen120.msg2, "");
  expect(test.screen120.msg1_size, 0);
  expect(test.screen120.msg2_size, 0);
  expect(test.screen120.sound1, 6124);
  expect(test.screen120.sound2, 6254);
  expect(test.screen120.sound3, 0);
  expect(test.screen120.snd_timer, 20);
  expect(test.screen120.timer1, 0);
  expect(test.screen120.timer2, 0);
  expect(test.screen120.timer3, 0);
  expect(test.screen120.dsp_flg1, 0);
  expect(test.screen120.dsp_flg2, 0);
  expect(test.screen120.movie01_ext, 0);
  expect(test.screen120.movie02_ext, 0);
  expect(test.screen120.movie03_ext, 0);
  expect(test.screen120.movie04_ext, 0);
  expect(test.screen120.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen120.line_title_ex, "QUICPay Payment");
  expect(test.screen120.line1, "お支払い金額を確認し");
  expect(test.screen120.line2, "カードをタッチしてください");
  expect(test.screen120.line3, "");
  expect(test.screen120.line4, "");
  expect(test.screen120.line1_ex, "Tap your IC card");
  expect(test.screen120.line2_ex, "on the terminal.");
  expect(test.screen120.line3_ex, "");
  expect(test.screen120.line4_ex, "");
  expect(test.screen120.sound_led1, 6124);
  expect(test.screen120.sound_led2, 6254);
  expect(test.screen120.sound_led3, 0);
  expect(test.screen121.title, "ID支払完了画面");
  expect(test.screen121.msg1, "レシートをお取りください。");
  expect(test.screen121.msg2, "");
  expect(test.screen121.msg1_size, 0);
  expect(test.screen121.msg2_size, 0);
  expect(test.screen121.sound1, 6133);
  expect(test.screen121.sound2, 0);
  expect(test.screen121.sound3, 0);
  expect(test.screen121.snd_timer, 0);
  expect(test.screen121.timer1, 5);
  expect(test.screen121.timer2, 10);
  expect(test.screen121.timer3, 0);
  expect(test.screen121.dsp_flg1, 0);
  expect(test.screen121.dsp_flg2, 0);
  expect(test.screen121.movie01_ext, 0);
  expect(test.screen121.movie02_ext, 0);
  expect(test.screen121.movie03_ext, 0);
  expect(test.screen121.movie04_ext, 0);
  expect(test.screen121.line_title, "");
  expect(test.screen121.line_title_ex, "");
  expect(test.screen121.line1, "レシートを");
  expect(test.screen121.line2, "お受け取りください");
  expect(test.screen121.line3, "ありがとう");
  expect(test.screen121.line4, "ございました");
  expect(test.screen121.line1_ex, "Thank you.");
  expect(test.screen121.line2_ex, "Please take your receipt.");
  expect(test.screen121.line3_ex, "");
  expect(test.screen121.line4_ex, "");
  expect(test.screen121.sound_led1, 6133);
  expect(test.screen121.sound_led2, 6133);
  expect(test.screen121.sound_led3, 0);
  expect(test.screen122.title, "QUICPay支払完了画面");
  expect(test.screen122.msg1, "レシートをお取りください。");
  expect(test.screen122.msg2, "");
  expect(test.screen122.msg1_size, 0);
  expect(test.screen122.msg2_size, 0);
  expect(test.screen122.sound1, 6133);
  expect(test.screen122.sound2, 0);
  expect(test.screen122.sound3, 0);
  expect(test.screen122.snd_timer, 0);
  expect(test.screen122.timer1, 5);
  expect(test.screen122.timer2, 10);
  expect(test.screen122.timer3, 0);
  expect(test.screen122.dsp_flg1, 0);
  expect(test.screen122.dsp_flg2, 0);
  expect(test.screen122.movie01_ext, 0);
  expect(test.screen122.movie02_ext, 0);
  expect(test.screen122.movie03_ext, 0);
  expect(test.screen122.movie04_ext, 0);
  expect(test.screen122.line_title, "");
  expect(test.screen122.line_title_ex, "");
  expect(test.screen122.line1, "レシートを");
  expect(test.screen122.line2, "お受け取りください");
  expect(test.screen122.line3, "ありがとう");
  expect(test.screen122.line4, "ございました");
  expect(test.screen122.line1_ex, "Thank you.");
  expect(test.screen122.line2_ex, "Please take your receipt.");
  expect(test.screen122.line3_ex, "");
  expect(test.screen122.line4_ex, "");
  expect(test.screen122.sound_led1, 6133);
  expect(test.screen122.sound_led2, 6133);
  expect(test.screen122.sound_led3, 0);
  expect(test.screen123.title, "Verifone支払完了画面");
  expect(test.screen123.msg1, "レシートをお取りください。");
  expect(test.screen123.msg2, "");
  expect(test.screen123.msg1_size, 0);
  expect(test.screen123.msg2_size, 0);
  expect(test.screen123.sound1, 6133);
  expect(test.screen123.sound2, 0);
  expect(test.screen123.sound3, 0);
  expect(test.screen123.snd_timer, 0);
  expect(test.screen123.timer1, 5);
  expect(test.screen123.timer2, 10);
  expect(test.screen123.timer3, 0);
  expect(test.screen123.dsp_flg1, 0);
  expect(test.screen123.dsp_flg2, 0);
  expect(test.screen123.movie01_ext, 0);
  expect(test.screen123.movie02_ext, 0);
  expect(test.screen123.movie03_ext, 0);
  expect(test.screen123.movie04_ext, 0);
  expect(test.screen123.line_title, "");
  expect(test.screen123.line_title_ex, "");
  expect(test.screen123.line1, "レシートを");
  expect(test.screen123.line2, "お受け取りください");
  expect(test.screen123.line3, "ありがとう");
  expect(test.screen123.line4, "ございました");
  expect(test.screen123.line1_ex, "Please take your card");
  expect(test.screen123.line2_ex, "and the receipt.");
  expect(test.screen123.line3_ex, "Thank you.");
  expect(test.screen123.line4_ex, "");
  expect(test.screen123.sound_led1, 6133);
  expect(test.screen123.sound_led2, 0);
  expect(test.screen123.sound_led3, 0);
  expect(test.screen124.title, "Verifone支払確認画面");
  expect(test.screen124.msg1, "");
  expect(test.screen124.msg2, "");
  expect(test.screen124.msg1_size, 0);
  expect(test.screen124.msg2_size, 0);
  expect(test.screen124.sound1, 6179);
  expect(test.screen124.sound2, "");
  expect(test.screen124.sound3, "");
  expect(test.screen124.snd_timer, 20);
  expect(test.screen124.timer1, 0);
  expect(test.screen124.timer2, 0);
  expect(test.screen124.timer3, 0);
  expect(test.screen124.dsp_flg1, 0);
  expect(test.screen124.dsp_flg2, 0);
  expect(test.screen124.movie01_ext, 0);
  expect(test.screen124.movie02_ext, 0);
  expect(test.screen124.movie03_ext, 0);
  expect(test.screen124.movie04_ext, 0);
  expect(test.screen124.line_title, "");
  expect(test.screen124.line_title_ex, "");
  expect(test.screen124.line1, "よろしければ");
  expect(test.screen124.line2, "おわりボタンを");
  expect(test.screen124.line3, "押してください");
  expect(test.screen124.line4, "");
  expect(test.screen124.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen124.line2_ex, "button to complete");
  expect(test.screen124.line3_ex, "the payment.");
  expect(test.screen124.line4_ex, "");
  expect(test.screen124.sound_led1, 6179);
  expect(test.screen124.sound_led2, "");
  expect(test.screen124.sound_led3, "");
  expect(test.screen125.title, "楽天ポイントカード確認画面");
  expect(test.screen125.msg1, "楽天ポイントカードはお持ちですか？");
  expect(test.screen125.msg2, "");
  expect(test.screen125.msg1_size, 44);
  expect(test.screen125.msg2_size, "");
  expect(test.screen125.sound1, 6603);
  expect(test.screen125.sound2, 0);
  expect(test.screen125.sound3, 0);
  expect(test.screen125.snd_timer, 30);
  expect(test.screen125.timer1, 0);
  expect(test.screen125.timer2, 0);
  expect(test.screen125.timer3, 0);
  expect(test.screen125.dsp_flg1, 0);
  expect(test.screen125.dsp_flg2, 0);
  expect(test.screen125.movie01_ext, 0);
  expect(test.screen125.movie02_ext, 0);
  expect(test.screen125.movie03_ext, 0);
  expect(test.screen125.movie04_ext, 0);
  expect(test.screen125.line_title, "");
  expect(test.screen125.line_title_ex, "");
  expect(test.screen125.line1, "");
  expect(test.screen125.line2, "");
  expect(test.screen125.line3, "");
  expect(test.screen125.line4, "");
  expect(test.screen125.line1_ex, "");
  expect(test.screen125.line2_ex, "");
  expect(test.screen125.line3_ex, "");
  expect(test.screen125.line4_ex, "");
  expect(test.screen125.sound_led1, 6603);
  expect(test.screen125.sound_led2, 0);
  expect(test.screen125.sound_led3, 0);
  expect(test.screen126.title, "楽天ポイントカード読込画面");
  expect(test.screen126.msg1, "楽天ポイントカードの登録を行ってください。");
  expect(test.screen126.msg2, "");
  expect(test.screen126.msg1_size, 44);
  expect(test.screen126.msg2_size, "");
  expect(test.screen126.sound1, 6604);
  expect(test.screen126.sound2, 0);
  expect(test.screen126.sound3, 0);
  expect(test.screen126.snd_timer, 30);
  expect(test.screen126.timer1, 0);
  expect(test.screen126.timer2, 0);
  expect(test.screen126.timer3, 0);
  expect(test.screen126.dsp_flg1, 0);
  expect(test.screen126.dsp_flg2, 0);
  expect(test.screen126.movie01_ext, 0);
  expect(test.screen126.movie02_ext, 0);
  expect(test.screen126.movie03_ext, 0);
  expect(test.screen126.movie04_ext, 0);
  expect(test.screen126.line_title, "");
  expect(test.screen126.line_title_ex, "");
  expect(test.screen126.line1, "");
  expect(test.screen126.line2, "");
  expect(test.screen126.line3, "");
  expect(test.screen126.line4, "");
  expect(test.screen126.line1_ex, "");
  expect(test.screen126.line2_ex, "");
  expect(test.screen126.line3_ex, "");
  expect(test.screen126.line4_ex, "");
  expect(test.screen126.sound_led1, 6604);
  expect(test.screen126.sound_led2, 0);
  expect(test.screen126.sound_led3, 0);
  expect(test.screen127.title, "PiTaPa利用画面<verifone>");
  expect(test.screen127.msg1, "PiTaPaでお会計ですね");
  expect(test.screen127.msg2, "");
  expect(test.screen127.msg1_size, 0);
  expect(test.screen127.msg2_size, 0);
  expect(test.screen127.sound1, 6124);
  expect(test.screen127.sound2, 6048);
  expect(test.screen127.sound3, 0);
  expect(test.screen127.snd_timer, 20);
  expect(test.screen127.timer1, 0);
  expect(test.screen127.timer2, 0);
  expect(test.screen127.timer3, 0);
  expect(test.screen127.dsp_flg1, 0);
  expect(test.screen127.dsp_flg2, 0);
  expect(test.screen127.movie01_ext, 0);
  expect(test.screen127.movie02_ext, 0);
  expect(test.screen127.movie03_ext, 0);
  expect(test.screen127.movie04_ext, 0);
  expect(test.screen127.line_title, "ＰｉＴａＰａでお支払い");
  expect(test.screen127.line_title_ex, "PiTaPa Payment");
  expect(test.screen127.line1, "お支払い金額を確認し");
  expect(test.screen127.line2, "カードをタッチしてください");
  expect(test.screen127.line3, "");
  expect(test.screen127.line4, "");
  expect(test.screen127.line1_ex, "Tap your IC card");
  expect(test.screen127.line2_ex, "on the terminal.");
  expect(test.screen127.line3_ex, "");
  expect(test.screen127.line4_ex, "");
  expect(test.screen127.sound_led1, 6124);
  expect(test.screen127.sound_led2, 6048);
  expect(test.screen127.sound_led3, 0);
  expect(test.screen128.title, "カード読込画面");
  expect(test.screen128.msg1, "カードを読ませてください");
  expect(test.screen128.msg2, "");
  expect(test.screen128.msg1_size, 24);
  expect(test.screen128.msg2_size, 0);
  expect(test.screen128.sound1, 6270);
  expect(test.screen128.sound2, 0);
  expect(test.screen128.sound3, 0);
  expect(test.screen128.snd_timer, 10);
  expect(test.screen128.timer1, 0);
  expect(test.screen128.timer2, 0);
  expect(test.screen128.timer3, 0);
  expect(test.screen128.dsp_flg1, 0);
  expect(test.screen128.dsp_flg2, 0);
  expect(test.screen128.movie01_ext, 0);
  expect(test.screen128.movie02_ext, 0);
  expect(test.screen128.movie03_ext, 0);
  expect(test.screen128.movie04_ext, 0);
  expect(test.screen128.line_title, "");
  expect(test.screen128.line_title_ex, "");
  expect(test.screen128.line1, "友の会カードを");
  expect(test.screen128.line2, "読ませてください");
  expect(test.screen128.line3, "");
  expect(test.screen128.line4, "");
  expect(test.screen128.line1_ex, "");
  expect(test.screen128.line2_ex, "");
  expect(test.screen128.line3_ex, "");
  expect(test.screen128.line4_ex, "");
  expect(test.screen128.sound_led1, 6720);
  expect(test.screen128.sound_led2, 0);
  expect(test.screen128.sound_led3, 0);
  expect(test.screen129.title, "友の会でお支払画面");
  expect(test.screen129.msg1, "");
  expect(test.screen129.msg2, "");
  expect(test.screen129.msg1_size, 20);
  expect(test.screen129.msg2_size, 0);
  expect(test.screen129.sound1, 6258);
  expect(test.screen129.sound2, 0);
  expect(test.screen129.sound3, 0);
  expect(test.screen129.snd_timer, 20);
  expect(test.screen129.timer1, 0);
  expect(test.screen129.timer2, 0);
  expect(test.screen129.timer3, 0);
  expect(test.screen129.dsp_flg1, 0);
  expect(test.screen129.dsp_flg2, 0);
  expect(test.screen129.movie01_ext, 0);
  expect(test.screen129.movie02_ext, 0);
  expect(test.screen129.movie03_ext, 0);
  expect(test.screen129.movie04_ext, 0);
  expect(test.screen129.line_title, "友の会でお支払い");
  expect(test.screen129.line_title_ex, "");
  expect(test.screen129.line1, "あああ");
  expect(test.screen129.line2, "いいい");
  expect(test.screen129.line3, "");
  expect(test.screen129.line4, "");
  expect(test.screen129.line1_ex, "");
  expect(test.screen129.line2_ex, "");
  expect(test.screen129.line3_ex, "");
  expect(test.screen129.line4_ex, "");
  expect(test.screen129.sound_led1, 6258);
  expect(test.screen129.sound_led2, 0);
  expect(test.screen129.sound_led3, 0);
  expect(test.screen130.title, "友の会支払確認画面");
  expect(test.screen130.msg1, "");
  expect(test.screen130.msg2, "");
  expect(test.screen130.msg1_size, 0);
  expect(test.screen130.msg2_size, 0);
  expect(test.screen130.sound1, 6179);
  expect(test.screen130.sound2, "");
  expect(test.screen130.sound3, "");
  expect(test.screen130.snd_timer, 20);
  expect(test.screen130.timer1, 0);
  expect(test.screen130.timer2, 0);
  expect(test.screen130.timer3, 0);
  expect(test.screen130.dsp_flg1, 0);
  expect(test.screen130.dsp_flg2, 0);
  expect(test.screen130.movie01_ext, 0);
  expect(test.screen130.movie02_ext, 0);
  expect(test.screen130.movie03_ext, 0);
  expect(test.screen130.movie04_ext, 0);
  expect(test.screen130.line_title, "");
  expect(test.screen130.line_title_ex, "");
  expect(test.screen130.line1, "よろしければ");
  expect(test.screen130.line2, "おわりボタンを");
  expect(test.screen130.line3, "押してください");
  expect(test.screen130.line4, "");
  expect(test.screen130.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen130.line2_ex, "button to complete");
  expect(test.screen130.line3_ex, "the payment.");
  expect(test.screen130.line4_ex, "");
  expect(test.screen130.sound_led1, 6179);
  expect(test.screen130.sound_led2, "");
  expect(test.screen130.sound_led3, "");
  expect(test.screen131.title, "友の会支払完了画面");
  expect(test.screen131.msg1, "レシートをお取りください。");
  expect(test.screen131.msg2, "");
  expect(test.screen131.msg1_size, 0);
  expect(test.screen131.msg2_size, 0);
  expect(test.screen131.sound1, 6133);
  expect(test.screen131.sound2, 0);
  expect(test.screen131.sound3, 0);
  expect(test.screen131.snd_timer, 0);
  expect(test.screen131.timer1, 5);
  expect(test.screen131.timer2, 10);
  expect(test.screen131.timer3, 0);
  expect(test.screen131.dsp_flg1, 0);
  expect(test.screen131.dsp_flg2, 0);
  expect(test.screen131.movie01_ext, 0);
  expect(test.screen131.movie02_ext, 0);
  expect(test.screen131.movie03_ext, 0);
  expect(test.screen131.movie04_ext, 0);
  expect(test.screen131.line_title, "");
  expect(test.screen131.line_title_ex, "");
  expect(test.screen131.line1, "レシートを");
  expect(test.screen131.line2, "お受け取りください");
  expect(test.screen131.line3, "ありがとう");
  expect(test.screen131.line4, "ございました");
  expect(test.screen131.line1_ex, "Please take your card");
  expect(test.screen131.line2_ex, "and the receipt.");
  expect(test.screen131.line3_ex, "Thank you.");
  expect(test.screen131.line4_ex, "");
  expect(test.screen131.sound_led1, 6133);
  expect(test.screen131.sound_led2, 0);
  expect(test.screen131.sound_led3, 0);
  expect(test.screen132.title, "Tクーポン確認画面");
  expect(test.screen132.msg1, "クーポンはお持ちですか？");
  expect(test.screen132.msg2, "");
  expect(test.screen132.msg1_size, 44);
  expect(test.screen132.msg2_size, "");
  expect(test.screen132.sound1, 6552);
  expect(test.screen132.sound2, 0);
  expect(test.screen132.sound3, 0);
  expect(test.screen132.snd_timer, 30);
  expect(test.screen132.timer1, 0);
  expect(test.screen132.timer2, 0);
  expect(test.screen132.timer3, 0);
  expect(test.screen132.dsp_flg1, 0);
  expect(test.screen132.dsp_flg2, 0);
  expect(test.screen132.movie01_ext, 0);
  expect(test.screen132.movie02_ext, 0);
  expect(test.screen132.movie03_ext, 0);
  expect(test.screen132.movie04_ext, 0);
  expect(test.screen132.line_title, "");
  expect(test.screen132.line_title_ex, "");
  expect(test.screen132.line1, "");
  expect(test.screen132.line2, "");
  expect(test.screen132.line3, "");
  expect(test.screen132.line4, "");
  expect(test.screen132.line1_ex, "");
  expect(test.screen132.line2_ex, "");
  expect(test.screen132.line3_ex, "");
  expect(test.screen132.line4_ex, "");
  expect(test.screen132.sound_led1, 6552);
  expect(test.screen132.sound_led2, 0);
  expect(test.screen132.sound_led3, 0);
  expect(test.screen133.title, "Tクーポン読取画面");
  expect(test.screen133.msg1, "クーポンバーコードを");
  expect(test.screen133.msg2, "スキャンしてください");
  expect(test.screen133.msg1_size, 0);
  expect(test.screen133.msg2_size, 0);
  expect(test.screen133.sound1, 6553);
  expect(test.screen133.sound2, 0);
  expect(test.screen133.sound3, 0);
  expect(test.screen133.snd_timer, 20);
  expect(test.screen133.timer1, 0);
  expect(test.screen133.timer2, 0);
  expect(test.screen133.timer3, 0);
  expect(test.screen133.dsp_flg1, 0);
  expect(test.screen133.dsp_flg2, 0);
  expect(test.screen133.movie01_ext, 0);
  expect(test.screen133.movie02_ext, 0);
  expect(test.screen133.movie03_ext, 0);
  expect(test.screen133.movie04_ext, 0);
  expect(test.screen133.line_title, "");
  expect(test.screen133.line_title_ex, "");
  expect(test.screen133.line1, "");
  expect(test.screen133.line2, "");
  expect(test.screen133.line3, "");
  expect(test.screen133.line4, "");
  expect(test.screen133.line1_ex, "");
  expect(test.screen133.line2_ex, "");
  expect(test.screen133.line3_ex, "");
  expect(test.screen133.line4_ex, "");
  expect(test.screen133.sound_led1, 6553);
  expect(test.screen133.sound_led2, 0);
  expect(test.screen133.sound_led3, 0);
  expect(test.screen134.title, "楽天ポイント利用確認画面");
  expect(test.screen134.msg1, "楽天ポイントを利用しますか？");
  expect(test.screen134.msg2, "");
  expect(test.screen134.msg1_size, 44);
  expect(test.screen134.msg2_size, "");
  expect(test.screen134.sound1, 6631);
  expect(test.screen134.sound2, 0);
  expect(test.screen134.sound3, 0);
  expect(test.screen134.snd_timer, 30);
  expect(test.screen134.timer1, 0);
  expect(test.screen134.timer2, 0);
  expect(test.screen134.timer3, 0);
  expect(test.screen134.dsp_flg1, 0);
  expect(test.screen134.dsp_flg2, 0);
  expect(test.screen134.movie01_ext, 0);
  expect(test.screen134.movie02_ext, 0);
  expect(test.screen134.movie03_ext, 0);
  expect(test.screen134.movie04_ext, 0);
  expect(test.screen134.line_title, "");
  expect(test.screen134.line_title_ex, "");
  expect(test.screen134.line1, "");
  expect(test.screen134.line2, "");
  expect(test.screen134.line3, "");
  expect(test.screen134.line4, "");
  expect(test.screen134.line1_ex, "");
  expect(test.screen134.line2_ex, "");
  expect(test.screen134.line3_ex, "");
  expect(test.screen134.line4_ex, "");
  expect(test.screen134.sound_led1, 6631);
  expect(test.screen134.sound_led2, 0);
  expect(test.screen134.sound_led3, 0);
  expect(test.screen135.title, "Edyリトライ画面");
  expect(test.screen135.msg1, "もう一度カードを");
  expect(test.screen135.msg2, "タッチしてください");
  expect(test.screen135.msg1_size, 0);
  expect(test.screen135.msg2_size, 0);
  expect(test.screen135.sound1, 6277);
  expect(test.screen135.sound2, 0);
  expect(test.screen135.sound3, 0);
  expect(test.screen135.snd_timer, 10);
  expect(test.screen135.timer1, 0);
  expect(test.screen135.timer2, 0);
  expect(test.screen135.timer3, 0);
  expect(test.screen135.dsp_flg1, 0);
  expect(test.screen135.dsp_flg2, 0);
  expect(test.screen135.movie01_ext, 0);
  expect(test.screen135.movie02_ext, 0);
  expect(test.screen135.movie03_ext, 0);
  expect(test.screen135.movie04_ext, 0);
  expect(test.screen135.line_title, "Ｅｄｙでお支払い");
  expect(test.screen135.line_title_ex, "");
  expect(test.screen135.line1, "カードの読取が不十分です");
  expect(test.screen135.line2, "もう一度カードを");
  expect(test.screen135.line3, "タッチしてください");
  expect(test.screen135.line4, "");
  expect(test.screen135.line1_ex, "");
  expect(test.screen135.line2_ex, "");
  expect(test.screen135.line3_ex, "");
  expect(test.screen135.line4_ex, "");
  expect(test.screen135.sound_led1, 6277);
  expect(test.screen135.sound_led2, 0);
  expect(test.screen135.sound_led3, 0);
  expect(test.screen136.title, "iDリトライ画面");
  expect(test.screen136.msg1, "もう一度カードを");
  expect(test.screen136.msg2, "タッチしてください");
  expect(test.screen136.msg1_size, 0);
  expect(test.screen136.msg2_size, 0);
  expect(test.screen136.sound1, 6277);
  expect(test.screen136.sound2, 0);
  expect(test.screen136.sound3, 0);
  expect(test.screen136.snd_timer, 10);
  expect(test.screen136.timer1, 0);
  expect(test.screen136.timer2, 0);
  expect(test.screen136.timer3, 0);
  expect(test.screen136.dsp_flg1, 0);
  expect(test.screen136.dsp_flg2, 0);
  expect(test.screen136.movie01_ext, 0);
  expect(test.screen136.movie02_ext, 0);
  expect(test.screen136.movie03_ext, 0);
  expect(test.screen136.movie04_ext, 0);
  expect(test.screen136.line_title, "ｉＤでお支払い");
  expect(test.screen136.line_title_ex, "");
  expect(test.screen136.line1, "カードの読取が不十分です");
  expect(test.screen136.line2, "もう一度カードを");
  expect(test.screen136.line3, "タッチしてください");
  expect(test.screen136.line4, "");
  expect(test.screen136.line1_ex, "");
  expect(test.screen136.line2_ex, "");
  expect(test.screen136.line3_ex, "");
  expect(test.screen136.line4_ex, "");
  expect(test.screen136.sound_led1, 6277);
  expect(test.screen136.sound_led2, 0);
  expect(test.screen136.sound_led3, 0);
  expect(test.screen137.title, "交通系ICリトライ画面");
  expect(test.screen137.msg1, "もう一度カードを");
  expect(test.screen137.msg2, "タッチしてください");
  expect(test.screen137.msg1_size, 0);
  expect(test.screen137.msg2_size, 0);
  expect(test.screen137.sound1, 6277);
  expect(test.screen137.sound2, 0);
  expect(test.screen137.sound3, 0);
  expect(test.screen137.snd_timer, 10);
  expect(test.screen137.timer1, 0);
  expect(test.screen137.timer2, 0);
  expect(test.screen137.timer3, 0);
  expect(test.screen137.dsp_flg1, 0);
  expect(test.screen137.dsp_flg2, 0);
  expect(test.screen137.movie01_ext, 0);
  expect(test.screen137.movie02_ext, 0);
  expect(test.screen137.movie03_ext, 0);
  expect(test.screen137.movie04_ext, 0);
  expect(test.screen137.line_title, "交通系ＩＣでお支払い");
  expect(test.screen137.line_title_ex, "");
  expect(test.screen137.line1, "カードの読取が不十分です");
  expect(test.screen137.line2, "もう一度カードを");
  expect(test.screen137.line3, "タッチしてください");
  expect(test.screen137.line4, "");
  expect(test.screen137.line1_ex, "");
  expect(test.screen137.line2_ex, "");
  expect(test.screen137.line3_ex, "");
  expect(test.screen137.line4_ex, "");
  expect(test.screen137.sound_led1, 6277);
  expect(test.screen137.sound_led2, 0);
  expect(test.screen137.sound_led3, 0);
  expect(test.screen138.title, "QUICPayリトライ画面");
  expect(test.screen138.msg1, "もう一度カードを");
  expect(test.screen138.msg2, "タッチしてください");
  expect(test.screen138.msg1_size, 0);
  expect(test.screen138.msg2_size, 0);
  expect(test.screen138.sound1, 6277);
  expect(test.screen138.sound2, 0);
  expect(test.screen138.sound3, 0);
  expect(test.screen138.snd_timer, 10);
  expect(test.screen138.timer1, 0);
  expect(test.screen138.timer2, 0);
  expect(test.screen138.timer3, 0);
  expect(test.screen138.dsp_flg1, 0);
  expect(test.screen138.dsp_flg2, 0);
  expect(test.screen138.movie01_ext, 0);
  expect(test.screen138.movie02_ext, 0);
  expect(test.screen138.movie03_ext, 0);
  expect(test.screen138.movie04_ext, 0);
  expect(test.screen138.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen138.line_title_ex, "");
  expect(test.screen138.line1, "カードの読取が不十分です");
  expect(test.screen138.line2, "もう一度カードを");
  expect(test.screen138.line3, "タッチしてください");
  expect(test.screen138.line4, "");
  expect(test.screen138.line1_ex, "");
  expect(test.screen138.line2_ex, "");
  expect(test.screen138.line3_ex, "");
  expect(test.screen138.line4_ex, "");
  expect(test.screen138.sound_led1, 6277);
  expect(test.screen138.sound_led2, 0);
  expect(test.screen138.sound_led3, 0);
  expect(test.screen139.title, "nanacoリトライ画面");
  expect(test.screen139.msg1, "もう一度カードを");
  expect(test.screen139.msg2, "タッチしてください");
  expect(test.screen139.msg1_size, 0);
  expect(test.screen139.msg2_size, 0);
  expect(test.screen139.sound1, 6277);
  expect(test.screen139.sound2, 0);
  expect(test.screen139.sound3, 0);
  expect(test.screen139.snd_timer, 10);
  expect(test.screen139.timer1, 0);
  expect(test.screen139.timer2, 0);
  expect(test.screen139.timer3, 0);
  expect(test.screen139.dsp_flg1, 0);
  expect(test.screen139.dsp_flg2, 0);
  expect(test.screen139.movie01_ext, 0);
  expect(test.screen139.movie02_ext, 0);
  expect(test.screen139.movie03_ext, 0);
  expect(test.screen139.movie04_ext, 0);
  expect(test.screen139.line_title, "ｎａｎａｃｏでお支払い");
  expect(test.screen139.line_title_ex, "");
  expect(test.screen139.line1, "カードの読取が不十分です");
  expect(test.screen139.line2, "もう一度カードを");
  expect(test.screen139.line3, "タッチしてください");
  expect(test.screen139.line4, "");
  expect(test.screen139.line1_ex, "");
  expect(test.screen139.line2_ex, "");
  expect(test.screen139.line3_ex, "");
  expect(test.screen139.line4_ex, "");
  expect(test.screen139.sound_led1, 6277);
  expect(test.screen139.sound_led2, 0);
  expect(test.screen139.sound_led3, 0);
  expect(test.screen140.title, "PiTaPaリトライ画面");
  expect(test.screen140.msg1, "もう一度カードを");
  expect(test.screen140.msg2, "タッチしてください");
  expect(test.screen140.msg1_size, 0);
  expect(test.screen140.msg2_size, 0);
  expect(test.screen140.sound1, 6277);
  expect(test.screen140.sound2, 0);
  expect(test.screen140.sound3, 0);
  expect(test.screen140.snd_timer, 10);
  expect(test.screen140.timer1, 0);
  expect(test.screen140.timer2, 0);
  expect(test.screen140.timer3, 0);
  expect(test.screen140.dsp_flg1, 0);
  expect(test.screen140.dsp_flg2, 0);
  expect(test.screen140.movie01_ext, 0);
  expect(test.screen140.movie02_ext, 0);
  expect(test.screen140.movie03_ext, 0);
  expect(test.screen140.movie04_ext, 0);
  expect(test.screen140.line_title, "ＰｉＴａＰａでお支払い");
  expect(test.screen140.line_title_ex, "");
  expect(test.screen140.line1, "カードの読取が不十分です");
  expect(test.screen140.line2, "もう一度カードを");
  expect(test.screen140.line3, "タッチしてください");
  expect(test.screen140.line4, "");
  expect(test.screen140.line1_ex, "");
  expect(test.screen140.line2_ex, "");
  expect(test.screen140.line3_ex, "");
  expect(test.screen140.line4_ex, "");
  expect(test.screen140.sound_led1, 6277);
  expect(test.screen140.sound_led2, 0);
  expect(test.screen140.sound_led3, 0);
  expect(test.screen141.title, "WAONリトライ画面");
  expect(test.screen141.msg1, "もう一度カードを");
  expect(test.screen141.msg2, "タッチしてください");
  expect(test.screen141.msg1_size, 0);
  expect(test.screen141.msg2_size, 0);
  expect(test.screen141.sound1, 6277);
  expect(test.screen141.sound2, 0);
  expect(test.screen141.sound3, 0);
  expect(test.screen141.snd_timer, 10);
  expect(test.screen141.timer1, 0);
  expect(test.screen141.timer2, 0);
  expect(test.screen141.timer3, 0);
  expect(test.screen141.dsp_flg1, 0);
  expect(test.screen141.dsp_flg2, 0);
  expect(test.screen141.movie01_ext, 0);
  expect(test.screen141.movie02_ext, 0);
  expect(test.screen141.movie03_ext, 0);
  expect(test.screen141.movie04_ext, 0);
  expect(test.screen141.line_title, "ＷＡＯＮでお支払い");
  expect(test.screen141.line_title_ex, "");
  expect(test.screen141.line1, "カードの読取が不十分です");
  expect(test.screen141.line2, "もう一度カードを");
  expect(test.screen141.line3, "タッチしてください");
  expect(test.screen141.line4, "");
  expect(test.screen141.line1_ex, "");
  expect(test.screen141.line2_ex, "");
  expect(test.screen141.line3_ex, "");
  expect(test.screen141.line4_ex, "");
  expect(test.screen141.sound_led1, 6277);
  expect(test.screen141.sound_led2, 0);
  expect(test.screen141.sound_led3, 0);
  expect(test.screen144.title, "会員解除確認画面");
  expect(test.screen144.msg1, "会員様優待が適用されません。");
  expect(test.screen144.msg2, "よろしいでしょうか？");
  expect(test.screen144.msg1_size, 28);
  expect(test.screen144.msg2_size, 44);
  expect(test.screen144.sound1, 6606);
  expect(test.screen144.sound2, 0);
  expect(test.screen144.sound3, 0);
  expect(test.screen144.snd_timer, 30);
  expect(test.screen144.timer1, 0);
  expect(test.screen144.timer2, 0);
  expect(test.screen144.timer3, 0);
  expect(test.screen144.dsp_flg1, 0);
  expect(test.screen144.dsp_flg2, 0);
  expect(test.screen144.movie01_ext, 0);
  expect(test.screen144.movie02_ext, 0);
  expect(test.screen144.movie03_ext, 0);
  expect(test.screen144.movie04_ext, 0);
  expect(test.screen144.line_title, "");
  expect(test.screen144.line_title_ex, "");
  expect(test.screen144.line1, "");
  expect(test.screen144.line2, "");
  expect(test.screen144.line3, "");
  expect(test.screen144.line4, "");
  expect(test.screen144.line1_ex, "");
  expect(test.screen144.line2_ex, "");
  expect(test.screen144.line3_ex, "");
  expect(test.screen144.line4_ex, "");
  expect(test.screen144.sound_led1, 6606);
  expect(test.screen144.sound_led2, 0);
  expect(test.screen144.sound_led3, 0);
  expect(test.ActSetUp.ReadAlertTime, 60);
  expect(test.ActSetUp.AutoReadInterval, 3);
  expect(test.ActSetUp.InterruptPrint, 0);
  expect(test.ActSetUp.InterruptPay, 0);
  expect(test.ActSetUp.UpdGetFtpTimer, 10);
  expect(test.HiddenSetUp.TableReadInterval, 500);
  expect(test.customer.cust_card_max, 0);
  expect(test.customer.cust_card_type1, 0);
  expect(test.customer.cust_card_type2, 0);
  expect(test.customer.cust_card_type3, 0);
  expect(test.customer.cust_card_type4, 0);
  expect(test.customer.cust_card_type5, 0);
  expect(test.customer.cust_card_type6, 0);
  expect(test.ShopAndGo.shop_and_go_nonfile_plucd, 999999);
  expect(test.ShopAndGo.shop_and_go_nonscan_plucd, 999998);
  expect(test.ShopAndGo.shop_and_go_limit1, 999);
  expect(test.ShopAndGo.shop_and_go_limit2, 499);
  expect(test.ShopAndGo.shop_and_go_limit3, 299);
  expect(test.ShopAndGo.shop_and_go_test_srv_flg, 0);
  expect(test.ShopAndGo.shop_and_go_companycode, 999999998);
  expect(test.ShopAndGo.shop_and_go_storecode, 123456789);
  expect(test.ShopAndGo.shop_and_go_mbr_chk_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_server_timeout, 3);
  expect(test.ShopAndGo.shop_and_go_proxy, "");
  expect(test.ShopAndGo.shop_and_go_proxy_port, 0);
  expect(test.ShopAndGo.shop_and_go_n_money_btn_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_domain, "https://api.digi-cr.com");
  expect(test.ShopAndGo.shop_and_go_mbr_card_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cr50_domain, "");
  expect(test.ShopAndGo.shop_and_go_point_domain, "");
  expect(test.ShopAndGo.shop_and_go_cr50_plucd, 999997);
  expect(test.ShopAndGo.shop_and_go_eatin_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cogca_read_twice, 0);
  expect(test.ShopAndGo.shop_and_go_use_class, 0);
  expect(test.ShopAndGo.shop_and_go_expensive_mark_prn, 0);
  expect(test.ShopAndGo.shop_and_go_regbag_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_use_preset_grp_code, 0);
  expect(test.ShopAndGo.shop_and_go_mente_nonplu_btn_reference, 1);
  expect(test.ShopAndGo.shop_and_go_mbr_auto_cncl_time, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_msg_use_no, 31);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print_normal, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs, 6);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss, 16);
  expect(test.ShopAndGo.shop_and_go_thread_timeout, 10);
  expect(test.PaymentGroup.pay_grp_name1, "会計グループ１");
  expect(test.PaymentGroup.pay_grp_name2, "会計グループ２");
  expect(test.PaymentGroup.pay_grp_name3, "会計グループ３");
  expect(test.PaymentGroup.pay_grp_name4, "会計グループ４");
  expect(test.PaymentGroup.pay_grp_name5, "会計グループ５");
  expect(test.PaymentGroup.pay_grp_name6, "会計グループ６");
  expect(test.PaymentGroup.pay_grp_name7, "会計グループ７");
  expect(test.PaymentGroup.pay_grp_name8, "会計グループ８");
  expect(test.PaymentGroup.pay_grp_name9, "会計グループ９");
  expect(test.PaymentGroup.pay_typ1_grp, 0);
  expect(test.PaymentGroup.pay_typ2_grp, 0);
  expect(test.PaymentGroup.pay_typ3_grp, 0);
  expect(test.PaymentGroup.pay_typ4_grp, 0);
  expect(test.PaymentGroup.pay_typ5_grp, 0);
  expect(test.PaymentGroup.pay_typ6_grp, 0);
  expect(test.PaymentGroup.pay_typ7_grp, 0);
  expect(test.PaymentGroup.pay_typ8_grp, 0);
  expect(test.PaymentGroup.pay_typ9_grp, 0);
  expect(test.PaymentGroup.pay_typ10_grp, 0);
  expect(test.PaymentGroup.pay_typ11_grp, 0);
  expect(test.PaymentGroup.pay_typ12_grp, 0);
  expect(test.PaymentGroup.pay_typ13_grp, 0);
  expect(test.PaymentGroup.pay_typ14_grp, 0);
  expect(test.PaymentGroup.pay_typ15_grp, 0);
  expect(test.PaymentGroup.pay_typ16_grp, 0);
  expect(test.PaymentGroup.pay_grp_name1_ex, "Payment Group １");
  expect(test.PaymentGroup.pay_grp_name2_ex, "Payment Group ２");
  expect(test.PaymentGroup.pay_grp_name3_ex, "Payment Group ３");
  expect(test.PaymentGroup.pay_grp_name4_ex, "Payment Group ４");
  expect(test.PaymentGroup.pay_grp_name5_ex, "Payment Group ５");
  expect(test.PaymentGroup.pay_grp_name6_ex, "Payment Group ６");
  expect(test.PaymentGroup.pay_grp_name7_ex, "Payment Group ７");
  expect(test.PaymentGroup.pay_grp_name8_ex, "Payment Group ８");
  expect(test.PaymentGroup.pay_grp_name9_ex, "Payment Group ９");
}

